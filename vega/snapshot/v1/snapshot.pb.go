// Code generated by protoc-gen-go. DO NOT EDIT.
// source: vega/snapshot/v1/snapshot.proto

package v1

import (
	vega "code.vegaprotocol.io/protos/vega"
	v1 "code.vegaprotocol.io/protos/vega/commands/v1"
	v11 "code.vegaprotocol.io/protos/vega/events/v1"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Format int32

const (
	// Default value, always invalid
	Format_FORMAT_UNSPECIFIED Format = 0
	// Standard proto encoding
	Format_FORMAT_PROTO Format = 1
	// Compressed proto, might come in handy
	Format_FORMAT_PROTO_COMPRESSED Format = 2
	// Simple JSON serialisation, probably not going to be used
	Format_FORMAT_JSON Format = 3
)

var Format_name = map[int32]string{
	0: "FORMAT_UNSPECIFIED",
	1: "FORMAT_PROTO",
	2: "FORMAT_PROTO_COMPRESSED",
	3: "FORMAT_JSON",
}

var Format_value = map[string]int32{
	"FORMAT_UNSPECIFIED":      0,
	"FORMAT_PROTO":            1,
	"FORMAT_PROTO_COMPRESSED": 2,
	"FORMAT_JSON":             3,
}

func (x Format) String() string {
	return proto.EnumName(Format_name, int32(x))
}

func (Format) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_cee6f703c00de307, []int{0}
}

type Snapshot struct {
	Height               uint64   `protobuf:"varint,1,opt,name=height,proto3" json:"height,omitempty"`
	Format               Format   `protobuf:"varint,2,opt,name=format,proto3,enum=vega.snapshot.v1.Format" json:"format,omitempty"`
	Chunks               uint32   `protobuf:"varint,3,opt,name=chunks,proto3" json:"chunks,omitempty"`
	Hash                 []byte   `protobuf:"bytes,4,opt,name=hash,proto3" json:"hash,omitempty"`
	Metadata             []byte   `protobuf:"bytes,5,opt,name=metadata,proto3" json:"metadata,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Snapshot) Reset()         { *m = Snapshot{} }
func (m *Snapshot) String() string { return proto.CompactTextString(m) }
func (*Snapshot) ProtoMessage()    {}
func (*Snapshot) Descriptor() ([]byte, []int) {
	return fileDescriptor_cee6f703c00de307, []int{0}
}

func (m *Snapshot) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Snapshot.Unmarshal(m, b)
}
func (m *Snapshot) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Snapshot.Marshal(b, m, deterministic)
}
func (m *Snapshot) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Snapshot.Merge(m, src)
}
func (m *Snapshot) XXX_Size() int {
	return xxx_messageInfo_Snapshot.Size(m)
}
func (m *Snapshot) XXX_DiscardUnknown() {
	xxx_messageInfo_Snapshot.DiscardUnknown(m)
}

var xxx_messageInfo_Snapshot proto.InternalMessageInfo

func (m *Snapshot) GetHeight() uint64 {
	if m != nil {
		return m.Height
	}
	return 0
}

func (m *Snapshot) GetFormat() Format {
	if m != nil {
		return m.Format
	}
	return Format_FORMAT_UNSPECIFIED
}

func (m *Snapshot) GetChunks() uint32 {
	if m != nil {
		return m.Chunks
	}
	return 0
}

func (m *Snapshot) GetHash() []byte {
	if m != nil {
		return m.Hash
	}
	return nil
}

func (m *Snapshot) GetMetadata() []byte {
	if m != nil {
		return m.Metadata
	}
	return nil
}

type NodeHash struct {
	FullKey              string   `protobuf:"bytes,1,opt,name=full_key,json=fullKey,proto3" json:"full_key,omitempty"`
	Namespace            string   `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Key                  string   `protobuf:"bytes,3,opt,name=key,proto3" json:"key,omitempty"`
	Hash                 string   `protobuf:"bytes,4,opt,name=hash,proto3" json:"hash,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NodeHash) Reset()         { *m = NodeHash{} }
func (m *NodeHash) String() string { return proto.CompactTextString(m) }
func (*NodeHash) ProtoMessage()    {}
func (*NodeHash) Descriptor() ([]byte, []int) {
	return fileDescriptor_cee6f703c00de307, []int{1}
}

func (m *NodeHash) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NodeHash.Unmarshal(m, b)
}
func (m *NodeHash) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NodeHash.Marshal(b, m, deterministic)
}
func (m *NodeHash) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NodeHash.Merge(m, src)
}
func (m *NodeHash) XXX_Size() int {
	return xxx_messageInfo_NodeHash.Size(m)
}
func (m *NodeHash) XXX_DiscardUnknown() {
	xxx_messageInfo_NodeHash.DiscardUnknown(m)
}

var xxx_messageInfo_NodeHash proto.InternalMessageInfo

func (m *NodeHash) GetFullKey() string {
	if m != nil {
		return m.FullKey
	}
	return ""
}

func (m *NodeHash) GetNamespace() string {
	if m != nil {
		return m.Namespace
	}
	return ""
}

func (m *NodeHash) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *NodeHash) GetHash() string {
	if m != nil {
		return m.Hash
	}
	return ""
}

type Metadata struct {
	Version              int64       `protobuf:"varint,1,opt,name=version,proto3" json:"version,omitempty"`
	ChunkHashes          []string    `protobuf:"bytes,2,rep,name=chunk_hashes,json=chunkHashes,proto3" json:"chunk_hashes,omitempty"`
	NodeHashes           []*NodeHash `protobuf:"bytes,3,rep,name=node_hashes,json=nodeHashes,proto3" json:"node_hashes,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *Metadata) Reset()         { *m = Metadata{} }
func (m *Metadata) String() string { return proto.CompactTextString(m) }
func (*Metadata) ProtoMessage()    {}
func (*Metadata) Descriptor() ([]byte, []int) {
	return fileDescriptor_cee6f703c00de307, []int{2}
}

func (m *Metadata) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Metadata.Unmarshal(m, b)
}
func (m *Metadata) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Metadata.Marshal(b, m, deterministic)
}
func (m *Metadata) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Metadata.Merge(m, src)
}
func (m *Metadata) XXX_Size() int {
	return xxx_messageInfo_Metadata.Size(m)
}
func (m *Metadata) XXX_DiscardUnknown() {
	xxx_messageInfo_Metadata.DiscardUnknown(m)
}

var xxx_messageInfo_Metadata proto.InternalMessageInfo

func (m *Metadata) GetVersion() int64 {
	if m != nil {
		return m.Version
	}
	return 0
}

func (m *Metadata) GetChunkHashes() []string {
	if m != nil {
		return m.ChunkHashes
	}
	return nil
}

func (m *Metadata) GetNodeHashes() []*NodeHash {
	if m != nil {
		return m.NodeHashes
	}
	return nil
}

// Chunk is simply an as-is chunk belonging to a snapshot
// not sure how usable this type would be
type Chunk struct {
	Data                 []*Payload `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
	Nr                   int64      `protobuf:"varint,2,opt,name=nr,proto3" json:"nr,omitempty"`
	Of                   int64      `protobuf:"varint,3,opt,name=of,proto3" json:"of,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *Chunk) Reset()         { *m = Chunk{} }
func (m *Chunk) String() string { return proto.CompactTextString(m) }
func (*Chunk) ProtoMessage()    {}
func (*Chunk) Descriptor() ([]byte, []int) {
	return fileDescriptor_cee6f703c00de307, []int{3}
}

func (m *Chunk) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Chunk.Unmarshal(m, b)
}
func (m *Chunk) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Chunk.Marshal(b, m, deterministic)
}
func (m *Chunk) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Chunk.Merge(m, src)
}
func (m *Chunk) XXX_Size() int {
	return xxx_messageInfo_Chunk.Size(m)
}
func (m *Chunk) XXX_DiscardUnknown() {
	xxx_messageInfo_Chunk.DiscardUnknown(m)
}

var xxx_messageInfo_Chunk proto.InternalMessageInfo

func (m *Chunk) GetData() []*Payload {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *Chunk) GetNr() int64 {
	if m != nil {
		return m.Nr
	}
	return 0
}

func (m *Chunk) GetOf() int64 {
	if m != nil {
		return m.Of
	}
	return 0
}

type Payload struct {
	// Types that are valid to be assigned to Data:
	//	*Payload_ActiveAssets
	//	*Payload_PendingAssets
	//	*Payload_BankingWithdrawals
	//	*Payload_BankingDeposits
	//	*Payload_BankingSeen
	//	*Payload_BankingAssetActions
	//	*Payload_Checkpoint
	//	*Payload_CollateralAccounts
	//	*Payload_CollateralAssets
	//	*Payload_DelegationActive
	//	*Payload_DelegationPending
	//	*Payload_DelegationAuto
	//	*Payload_GovernanceActive
	//	*Payload_GovernanceEnacted
	//	*Payload_StakingAccounts
	//	*Payload_MatchingBook
	//	*Payload_NetworkParameters
	//	*Payload_ExecutionMarkets
	//	*Payload_MarketPositions
	//	*Payload_AppState
	//	*Payload_Epoch
	//	*Payload_ExecutionIdGenerator
	//	*Payload_RewardsPendingPayouts
	//	*Payload_GovernanceNode
	//	*Payload_LimitState
	//	*Payload_VoteSpamPolicy
	//	*Payload_SimpleSpamPolicy
	//	*Payload_Notary
	//	*Payload_ReplayProtection
	//	*Payload_FutureState
	//	*Payload_EventForwarder
	Data                 isPayload_Data `protobuf_oneof:"data"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *Payload) Reset()         { *m = Payload{} }
func (m *Payload) String() string { return proto.CompactTextString(m) }
func (*Payload) ProtoMessage()    {}
func (*Payload) Descriptor() ([]byte, []int) {
	return fileDescriptor_cee6f703c00de307, []int{4}
}

func (m *Payload) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Payload.Unmarshal(m, b)
}
func (m *Payload) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Payload.Marshal(b, m, deterministic)
}
func (m *Payload) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Payload.Merge(m, src)
}
func (m *Payload) XXX_Size() int {
	return xxx_messageInfo_Payload.Size(m)
}
func (m *Payload) XXX_DiscardUnknown() {
	xxx_messageInfo_Payload.DiscardUnknown(m)
}

var xxx_messageInfo_Payload proto.InternalMessageInfo

type isPayload_Data interface {
	isPayload_Data()
}

type Payload_ActiveAssets struct {
	ActiveAssets *ActiveAssets `protobuf:"bytes,1,opt,name=active_assets,json=activeAssets,proto3,oneof"`
}

type Payload_PendingAssets struct {
	PendingAssets *PendingAssets `protobuf:"bytes,2,opt,name=pending_assets,json=pendingAssets,proto3,oneof"`
}

type Payload_BankingWithdrawals struct {
	BankingWithdrawals *BankingWithdrawals `protobuf:"bytes,3,opt,name=banking_withdrawals,json=bankingWithdrawals,proto3,oneof"`
}

type Payload_BankingDeposits struct {
	BankingDeposits *BankingDeposits `protobuf:"bytes,4,opt,name=banking_deposits,json=bankingDeposits,proto3,oneof"`
}

type Payload_BankingSeen struct {
	BankingSeen *BankingSeen `protobuf:"bytes,5,opt,name=banking_seen,json=bankingSeen,proto3,oneof"`
}

type Payload_BankingAssetActions struct {
	BankingAssetActions *BankingAssetActions `protobuf:"bytes,6,opt,name=banking_asset_actions,json=bankingAssetActions,proto3,oneof"`
}

type Payload_Checkpoint struct {
	Checkpoint *Checkpoint `protobuf:"bytes,7,opt,name=checkpoint,proto3,oneof"`
}

type Payload_CollateralAccounts struct {
	CollateralAccounts *CollateralAccounts `protobuf:"bytes,8,opt,name=collateral_accounts,json=collateralAccounts,proto3,oneof"`
}

type Payload_CollateralAssets struct {
	CollateralAssets *CollateralAssets `protobuf:"bytes,9,opt,name=collateral_assets,json=collateralAssets,proto3,oneof"`
}

type Payload_DelegationActive struct {
	DelegationActive *DelegationActive `protobuf:"bytes,10,opt,name=delegation_active,json=delegationActive,proto3,oneof"`
}

type Payload_DelegationPending struct {
	DelegationPending *DelegationPending `protobuf:"bytes,11,opt,name=delegation_pending,json=delegationPending,proto3,oneof"`
}

type Payload_DelegationAuto struct {
	DelegationAuto *DelegationAuto `protobuf:"bytes,12,opt,name=delegation_auto,json=delegationAuto,proto3,oneof"`
}

type Payload_GovernanceActive struct {
	GovernanceActive *GovernanceActive `protobuf:"bytes,13,opt,name=governance_active,json=governanceActive,proto3,oneof"`
}

type Payload_GovernanceEnacted struct {
	GovernanceEnacted *GovernanceEnacted `protobuf:"bytes,14,opt,name=governance_enacted,json=governanceEnacted,proto3,oneof"`
}

type Payload_StakingAccounts struct {
	StakingAccounts *StakingAccounts `protobuf:"bytes,15,opt,name=staking_accounts,json=stakingAccounts,proto3,oneof"`
}

type Payload_MatchingBook struct {
	MatchingBook *MatchingBook `protobuf:"bytes,16,opt,name=matching_book,json=matchingBook,proto3,oneof"`
}

type Payload_NetworkParameters struct {
	NetworkParameters *NetParams `protobuf:"bytes,17,opt,name=network_parameters,json=networkParameters,proto3,oneof"`
}

type Payload_ExecutionMarkets struct {
	ExecutionMarkets *ExecutionMarkets `protobuf:"bytes,18,opt,name=execution_markets,json=executionMarkets,proto3,oneof"`
}

type Payload_MarketPositions struct {
	MarketPositions *MarketPositions `protobuf:"bytes,19,opt,name=market_positions,json=marketPositions,proto3,oneof"`
}

type Payload_AppState struct {
	AppState *AppState `protobuf:"bytes,20,opt,name=app_state,json=appState,proto3,oneof"`
}

type Payload_Epoch struct {
	Epoch *EpochState `protobuf:"bytes,21,opt,name=epoch,proto3,oneof"`
}

type Payload_ExecutionIdGenerator struct {
	ExecutionIdGenerator *ExecutionIDGenerator `protobuf:"bytes,22,opt,name=execution_id_generator,json=executionIdGenerator,proto3,oneof"`
}

type Payload_RewardsPendingPayouts struct {
	RewardsPendingPayouts *RewardsPendingPayouts `protobuf:"bytes,23,opt,name=rewards_pending_payouts,json=rewardsPendingPayouts,proto3,oneof"`
}

type Payload_GovernanceNode struct {
	GovernanceNode *GovernanceNode `protobuf:"bytes,24,opt,name=governance_node,json=governanceNode,proto3,oneof"`
}

type Payload_LimitState struct {
	LimitState *LimitState `protobuf:"bytes,25,opt,name=limit_state,json=limitState,proto3,oneof"`
}

type Payload_VoteSpamPolicy struct {
	VoteSpamPolicy *VoteSpamPolicy `protobuf:"bytes,26,opt,name=vote_spam_policy,json=voteSpamPolicy,proto3,oneof"`
}

type Payload_SimpleSpamPolicy struct {
	SimpleSpamPolicy *SimpleSpamPolicy `protobuf:"bytes,27,opt,name=simple_spam_policy,json=simpleSpamPolicy,proto3,oneof"`
}

type Payload_Notary struct {
	Notary *Notary `protobuf:"bytes,28,opt,name=notary,proto3,oneof"`
}

type Payload_ReplayProtection struct {
	ReplayProtection *ReplayProtection `protobuf:"bytes,29,opt,name=replay_protection,json=replayProtection,proto3,oneof"`
}

type Payload_FutureState struct {
	FutureState *FutureState `protobuf:"bytes,30,opt,name=future_state,json=futureState,proto3,oneof"`
}

type Payload_EventForwarder struct {
	EventForwarder *EventForwarder `protobuf:"bytes,31,opt,name=event_forwarder,json=eventForwarder,proto3,oneof"`
}

func (*Payload_ActiveAssets) isPayload_Data() {}

func (*Payload_PendingAssets) isPayload_Data() {}

func (*Payload_BankingWithdrawals) isPayload_Data() {}

func (*Payload_BankingDeposits) isPayload_Data() {}

func (*Payload_BankingSeen) isPayload_Data() {}

func (*Payload_BankingAssetActions) isPayload_Data() {}

func (*Payload_Checkpoint) isPayload_Data() {}

func (*Payload_CollateralAccounts) isPayload_Data() {}

func (*Payload_CollateralAssets) isPayload_Data() {}

func (*Payload_DelegationActive) isPayload_Data() {}

func (*Payload_DelegationPending) isPayload_Data() {}

func (*Payload_DelegationAuto) isPayload_Data() {}

func (*Payload_GovernanceActive) isPayload_Data() {}

func (*Payload_GovernanceEnacted) isPayload_Data() {}

func (*Payload_StakingAccounts) isPayload_Data() {}

func (*Payload_MatchingBook) isPayload_Data() {}

func (*Payload_NetworkParameters) isPayload_Data() {}

func (*Payload_ExecutionMarkets) isPayload_Data() {}

func (*Payload_MarketPositions) isPayload_Data() {}

func (*Payload_AppState) isPayload_Data() {}

func (*Payload_Epoch) isPayload_Data() {}

func (*Payload_ExecutionIdGenerator) isPayload_Data() {}

func (*Payload_RewardsPendingPayouts) isPayload_Data() {}

func (*Payload_GovernanceNode) isPayload_Data() {}

func (*Payload_LimitState) isPayload_Data() {}

func (*Payload_VoteSpamPolicy) isPayload_Data() {}

func (*Payload_SimpleSpamPolicy) isPayload_Data() {}

func (*Payload_Notary) isPayload_Data() {}

func (*Payload_ReplayProtection) isPayload_Data() {}

func (*Payload_FutureState) isPayload_Data() {}

func (*Payload_EventForwarder) isPayload_Data() {}

func (m *Payload) GetData() isPayload_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *Payload) GetActiveAssets() *ActiveAssets {
	if x, ok := m.GetData().(*Payload_ActiveAssets); ok {
		return x.ActiveAssets
	}
	return nil
}

func (m *Payload) GetPendingAssets() *PendingAssets {
	if x, ok := m.GetData().(*Payload_PendingAssets); ok {
		return x.PendingAssets
	}
	return nil
}

func (m *Payload) GetBankingWithdrawals() *BankingWithdrawals {
	if x, ok := m.GetData().(*Payload_BankingWithdrawals); ok {
		return x.BankingWithdrawals
	}
	return nil
}

func (m *Payload) GetBankingDeposits() *BankingDeposits {
	if x, ok := m.GetData().(*Payload_BankingDeposits); ok {
		return x.BankingDeposits
	}
	return nil
}

func (m *Payload) GetBankingSeen() *BankingSeen {
	if x, ok := m.GetData().(*Payload_BankingSeen); ok {
		return x.BankingSeen
	}
	return nil
}

func (m *Payload) GetBankingAssetActions() *BankingAssetActions {
	if x, ok := m.GetData().(*Payload_BankingAssetActions); ok {
		return x.BankingAssetActions
	}
	return nil
}

func (m *Payload) GetCheckpoint() *Checkpoint {
	if x, ok := m.GetData().(*Payload_Checkpoint); ok {
		return x.Checkpoint
	}
	return nil
}

func (m *Payload) GetCollateralAccounts() *CollateralAccounts {
	if x, ok := m.GetData().(*Payload_CollateralAccounts); ok {
		return x.CollateralAccounts
	}
	return nil
}

func (m *Payload) GetCollateralAssets() *CollateralAssets {
	if x, ok := m.GetData().(*Payload_CollateralAssets); ok {
		return x.CollateralAssets
	}
	return nil
}

func (m *Payload) GetDelegationActive() *DelegationActive {
	if x, ok := m.GetData().(*Payload_DelegationActive); ok {
		return x.DelegationActive
	}
	return nil
}

func (m *Payload) GetDelegationPending() *DelegationPending {
	if x, ok := m.GetData().(*Payload_DelegationPending); ok {
		return x.DelegationPending
	}
	return nil
}

func (m *Payload) GetDelegationAuto() *DelegationAuto {
	if x, ok := m.GetData().(*Payload_DelegationAuto); ok {
		return x.DelegationAuto
	}
	return nil
}

func (m *Payload) GetGovernanceActive() *GovernanceActive {
	if x, ok := m.GetData().(*Payload_GovernanceActive); ok {
		return x.GovernanceActive
	}
	return nil
}

func (m *Payload) GetGovernanceEnacted() *GovernanceEnacted {
	if x, ok := m.GetData().(*Payload_GovernanceEnacted); ok {
		return x.GovernanceEnacted
	}
	return nil
}

func (m *Payload) GetStakingAccounts() *StakingAccounts {
	if x, ok := m.GetData().(*Payload_StakingAccounts); ok {
		return x.StakingAccounts
	}
	return nil
}

func (m *Payload) GetMatchingBook() *MatchingBook {
	if x, ok := m.GetData().(*Payload_MatchingBook); ok {
		return x.MatchingBook
	}
	return nil
}

func (m *Payload) GetNetworkParameters() *NetParams {
	if x, ok := m.GetData().(*Payload_NetworkParameters); ok {
		return x.NetworkParameters
	}
	return nil
}

func (m *Payload) GetExecutionMarkets() *ExecutionMarkets {
	if x, ok := m.GetData().(*Payload_ExecutionMarkets); ok {
		return x.ExecutionMarkets
	}
	return nil
}

func (m *Payload) GetMarketPositions() *MarketPositions {
	if x, ok := m.GetData().(*Payload_MarketPositions); ok {
		return x.MarketPositions
	}
	return nil
}

func (m *Payload) GetAppState() *AppState {
	if x, ok := m.GetData().(*Payload_AppState); ok {
		return x.AppState
	}
	return nil
}

func (m *Payload) GetEpoch() *EpochState {
	if x, ok := m.GetData().(*Payload_Epoch); ok {
		return x.Epoch
	}
	return nil
}

func (m *Payload) GetExecutionIdGenerator() *ExecutionIDGenerator {
	if x, ok := m.GetData().(*Payload_ExecutionIdGenerator); ok {
		return x.ExecutionIdGenerator
	}
	return nil
}

func (m *Payload) GetRewardsPendingPayouts() *RewardsPendingPayouts {
	if x, ok := m.GetData().(*Payload_RewardsPendingPayouts); ok {
		return x.RewardsPendingPayouts
	}
	return nil
}

func (m *Payload) GetGovernanceNode() *GovernanceNode {
	if x, ok := m.GetData().(*Payload_GovernanceNode); ok {
		return x.GovernanceNode
	}
	return nil
}

func (m *Payload) GetLimitState() *LimitState {
	if x, ok := m.GetData().(*Payload_LimitState); ok {
		return x.LimitState
	}
	return nil
}

func (m *Payload) GetVoteSpamPolicy() *VoteSpamPolicy {
	if x, ok := m.GetData().(*Payload_VoteSpamPolicy); ok {
		return x.VoteSpamPolicy
	}
	return nil
}

func (m *Payload) GetSimpleSpamPolicy() *SimpleSpamPolicy {
	if x, ok := m.GetData().(*Payload_SimpleSpamPolicy); ok {
		return x.SimpleSpamPolicy
	}
	return nil
}

func (m *Payload) GetNotary() *Notary {
	if x, ok := m.GetData().(*Payload_Notary); ok {
		return x.Notary
	}
	return nil
}

func (m *Payload) GetReplayProtection() *ReplayProtection {
	if x, ok := m.GetData().(*Payload_ReplayProtection); ok {
		return x.ReplayProtection
	}
	return nil
}

func (m *Payload) GetFutureState() *FutureState {
	if x, ok := m.GetData().(*Payload_FutureState); ok {
		return x.FutureState
	}
	return nil
}

func (m *Payload) GetEventForwarder() *EventForwarder {
	if x, ok := m.GetData().(*Payload_EventForwarder); ok {
		return x.EventForwarder
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*Payload) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*Payload_ActiveAssets)(nil),
		(*Payload_PendingAssets)(nil),
		(*Payload_BankingWithdrawals)(nil),
		(*Payload_BankingDeposits)(nil),
		(*Payload_BankingSeen)(nil),
		(*Payload_BankingAssetActions)(nil),
		(*Payload_Checkpoint)(nil),
		(*Payload_CollateralAccounts)(nil),
		(*Payload_CollateralAssets)(nil),
		(*Payload_DelegationActive)(nil),
		(*Payload_DelegationPending)(nil),
		(*Payload_DelegationAuto)(nil),
		(*Payload_GovernanceActive)(nil),
		(*Payload_GovernanceEnacted)(nil),
		(*Payload_StakingAccounts)(nil),
		(*Payload_MatchingBook)(nil),
		(*Payload_NetworkParameters)(nil),
		(*Payload_ExecutionMarkets)(nil),
		(*Payload_MarketPositions)(nil),
		(*Payload_AppState)(nil),
		(*Payload_Epoch)(nil),
		(*Payload_ExecutionIdGenerator)(nil),
		(*Payload_RewardsPendingPayouts)(nil),
		(*Payload_GovernanceNode)(nil),
		(*Payload_LimitState)(nil),
		(*Payload_VoteSpamPolicy)(nil),
		(*Payload_SimpleSpamPolicy)(nil),
		(*Payload_Notary)(nil),
		(*Payload_ReplayProtection)(nil),
		(*Payload_FutureState)(nil),
		(*Payload_EventForwarder)(nil),
	}
}

type EventForwarder struct {
	AckedEvents          []*v1.ChainEvent `protobuf:"bytes,1,rep,name=acked_events,json=ackedEvents,proto3" json:"acked_events,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *EventForwarder) Reset()         { *m = EventForwarder{} }
func (m *EventForwarder) String() string { return proto.CompactTextString(m) }
func (*EventForwarder) ProtoMessage()    {}
func (*EventForwarder) Descriptor() ([]byte, []int) {
	return fileDescriptor_cee6f703c00de307, []int{5}
}

func (m *EventForwarder) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EventForwarder.Unmarshal(m, b)
}
func (m *EventForwarder) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EventForwarder.Marshal(b, m, deterministic)
}
func (m *EventForwarder) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EventForwarder.Merge(m, src)
}
func (m *EventForwarder) XXX_Size() int {
	return xxx_messageInfo_EventForwarder.Size(m)
}
func (m *EventForwarder) XXX_DiscardUnknown() {
	xxx_messageInfo_EventForwarder.DiscardUnknown(m)
}

var xxx_messageInfo_EventForwarder proto.InternalMessageInfo

func (m *EventForwarder) GetAckedEvents() []*v1.ChainEvent {
	if m != nil {
		return m.AckedEvents
	}
	return nil
}

type CollateralAccounts struct {
	Accounts             []*vega.Account `protobuf:"bytes,1,rep,name=accounts,proto3" json:"accounts,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *CollateralAccounts) Reset()         { *m = CollateralAccounts{} }
func (m *CollateralAccounts) String() string { return proto.CompactTextString(m) }
func (*CollateralAccounts) ProtoMessage()    {}
func (*CollateralAccounts) Descriptor() ([]byte, []int) {
	return fileDescriptor_cee6f703c00de307, []int{6}
}

func (m *CollateralAccounts) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CollateralAccounts.Unmarshal(m, b)
}
func (m *CollateralAccounts) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CollateralAccounts.Marshal(b, m, deterministic)
}
func (m *CollateralAccounts) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CollateralAccounts.Merge(m, src)
}
func (m *CollateralAccounts) XXX_Size() int {
	return xxx_messageInfo_CollateralAccounts.Size(m)
}
func (m *CollateralAccounts) XXX_DiscardUnknown() {
	xxx_messageInfo_CollateralAccounts.DiscardUnknown(m)
}

var xxx_messageInfo_CollateralAccounts proto.InternalMessageInfo

func (m *CollateralAccounts) GetAccounts() []*vega.Account {
	if m != nil {
		return m.Accounts
	}
	return nil
}

type CollateralAssets struct {
	Assets               []*vega.Asset `protobuf:"bytes,1,rep,name=assets,proto3" json:"assets,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *CollateralAssets) Reset()         { *m = CollateralAssets{} }
func (m *CollateralAssets) String() string { return proto.CompactTextString(m) }
func (*CollateralAssets) ProtoMessage()    {}
func (*CollateralAssets) Descriptor() ([]byte, []int) {
	return fileDescriptor_cee6f703c00de307, []int{7}
}

func (m *CollateralAssets) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CollateralAssets.Unmarshal(m, b)
}
func (m *CollateralAssets) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CollateralAssets.Marshal(b, m, deterministic)
}
func (m *CollateralAssets) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CollateralAssets.Merge(m, src)
}
func (m *CollateralAssets) XXX_Size() int {
	return xxx_messageInfo_CollateralAssets.Size(m)
}
func (m *CollateralAssets) XXX_DiscardUnknown() {
	xxx_messageInfo_CollateralAssets.DiscardUnknown(m)
}

var xxx_messageInfo_CollateralAssets proto.InternalMessageInfo

func (m *CollateralAssets) GetAssets() []*vega.Asset {
	if m != nil {
		return m.Assets
	}
	return nil
}

type ActiveAssets struct {
	Assets               []*vega.Asset `protobuf:"bytes,1,rep,name=assets,proto3" json:"assets,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *ActiveAssets) Reset()         { *m = ActiveAssets{} }
func (m *ActiveAssets) String() string { return proto.CompactTextString(m) }
func (*ActiveAssets) ProtoMessage()    {}
func (*ActiveAssets) Descriptor() ([]byte, []int) {
	return fileDescriptor_cee6f703c00de307, []int{8}
}

func (m *ActiveAssets) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ActiveAssets.Unmarshal(m, b)
}
func (m *ActiveAssets) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ActiveAssets.Marshal(b, m, deterministic)
}
func (m *ActiveAssets) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ActiveAssets.Merge(m, src)
}
func (m *ActiveAssets) XXX_Size() int {
	return xxx_messageInfo_ActiveAssets.Size(m)
}
func (m *ActiveAssets) XXX_DiscardUnknown() {
	xxx_messageInfo_ActiveAssets.DiscardUnknown(m)
}

var xxx_messageInfo_ActiveAssets proto.InternalMessageInfo

func (m *ActiveAssets) GetAssets() []*vega.Asset {
	if m != nil {
		return m.Assets
	}
	return nil
}

type PendingAssets struct {
	Assets               []*vega.Asset `protobuf:"bytes,1,rep,name=assets,proto3" json:"assets,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *PendingAssets) Reset()         { *m = PendingAssets{} }
func (m *PendingAssets) String() string { return proto.CompactTextString(m) }
func (*PendingAssets) ProtoMessage()    {}
func (*PendingAssets) Descriptor() ([]byte, []int) {
	return fileDescriptor_cee6f703c00de307, []int{9}
}

func (m *PendingAssets) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PendingAssets.Unmarshal(m, b)
}
func (m *PendingAssets) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PendingAssets.Marshal(b, m, deterministic)
}
func (m *PendingAssets) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PendingAssets.Merge(m, src)
}
func (m *PendingAssets) XXX_Size() int {
	return xxx_messageInfo_PendingAssets.Size(m)
}
func (m *PendingAssets) XXX_DiscardUnknown() {
	xxx_messageInfo_PendingAssets.DiscardUnknown(m)
}

var xxx_messageInfo_PendingAssets proto.InternalMessageInfo

func (m *PendingAssets) GetAssets() []*vega.Asset {
	if m != nil {
		return m.Assets
	}
	return nil
}

type Withdrawal struct {
	Ref                  string           `protobuf:"bytes,1,opt,name=ref,proto3" json:"ref,omitempty"`
	Withdrawal           *vega.Withdrawal `protobuf:"bytes,2,opt,name=withdrawal,proto3" json:"withdrawal,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *Withdrawal) Reset()         { *m = Withdrawal{} }
func (m *Withdrawal) String() string { return proto.CompactTextString(m) }
func (*Withdrawal) ProtoMessage()    {}
func (*Withdrawal) Descriptor() ([]byte, []int) {
	return fileDescriptor_cee6f703c00de307, []int{10}
}

func (m *Withdrawal) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Withdrawal.Unmarshal(m, b)
}
func (m *Withdrawal) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Withdrawal.Marshal(b, m, deterministic)
}
func (m *Withdrawal) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Withdrawal.Merge(m, src)
}
func (m *Withdrawal) XXX_Size() int {
	return xxx_messageInfo_Withdrawal.Size(m)
}
func (m *Withdrawal) XXX_DiscardUnknown() {
	xxx_messageInfo_Withdrawal.DiscardUnknown(m)
}

var xxx_messageInfo_Withdrawal proto.InternalMessageInfo

func (m *Withdrawal) GetRef() string {
	if m != nil {
		return m.Ref
	}
	return ""
}

func (m *Withdrawal) GetWithdrawal() *vega.Withdrawal {
	if m != nil {
		return m.Withdrawal
	}
	return nil
}

type Deposit struct {
	Id                   string        `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Deposit              *vega.Deposit `protobuf:"bytes,2,opt,name=deposit,proto3" json:"deposit,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *Deposit) Reset()         { *m = Deposit{} }
func (m *Deposit) String() string { return proto.CompactTextString(m) }
func (*Deposit) ProtoMessage()    {}
func (*Deposit) Descriptor() ([]byte, []int) {
	return fileDescriptor_cee6f703c00de307, []int{11}
}

func (m *Deposit) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Deposit.Unmarshal(m, b)
}
func (m *Deposit) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Deposit.Marshal(b, m, deterministic)
}
func (m *Deposit) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Deposit.Merge(m, src)
}
func (m *Deposit) XXX_Size() int {
	return xxx_messageInfo_Deposit.Size(m)
}
func (m *Deposit) XXX_DiscardUnknown() {
	xxx_messageInfo_Deposit.DiscardUnknown(m)
}

var xxx_messageInfo_Deposit proto.InternalMessageInfo

func (m *Deposit) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Deposit) GetDeposit() *vega.Deposit {
	if m != nil {
		return m.Deposit
	}
	return nil
}

type TxRef struct {
	Asset                string   `protobuf:"bytes,1,opt,name=asset,proto3" json:"asset,omitempty"`
	BlockNr              uint64   `protobuf:"varint,2,opt,name=block_nr,json=blockNr,proto3" json:"block_nr,omitempty"`
	Hash                 string   `protobuf:"bytes,3,opt,name=hash,proto3" json:"hash,omitempty"`
	LogIndex             uint64   `protobuf:"varint,4,opt,name=log_index,json=logIndex,proto3" json:"log_index,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TxRef) Reset()         { *m = TxRef{} }
func (m *TxRef) String() string { return proto.CompactTextString(m) }
func (*TxRef) ProtoMessage()    {}
func (*TxRef) Descriptor() ([]byte, []int) {
	return fileDescriptor_cee6f703c00de307, []int{12}
}

func (m *TxRef) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TxRef.Unmarshal(m, b)
}
func (m *TxRef) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TxRef.Marshal(b, m, deterministic)
}
func (m *TxRef) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TxRef.Merge(m, src)
}
func (m *TxRef) XXX_Size() int {
	return xxx_messageInfo_TxRef.Size(m)
}
func (m *TxRef) XXX_DiscardUnknown() {
	xxx_messageInfo_TxRef.DiscardUnknown(m)
}

var xxx_messageInfo_TxRef proto.InternalMessageInfo

func (m *TxRef) GetAsset() string {
	if m != nil {
		return m.Asset
	}
	return ""
}

func (m *TxRef) GetBlockNr() uint64 {
	if m != nil {
		return m.BlockNr
	}
	return 0
}

func (m *TxRef) GetHash() string {
	if m != nil {
		return m.Hash
	}
	return ""
}

func (m *TxRef) GetLogIndex() uint64 {
	if m != nil {
		return m.LogIndex
	}
	return 0
}

type AssetAction struct {
	Id                   string                    `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	State                uint32                    `protobuf:"varint,2,opt,name=state,proto3" json:"state,omitempty"`
	Asset                string                    `protobuf:"bytes,3,opt,name=asset,proto3" json:"asset,omitempty"`
	BlockNumber          uint64                    `protobuf:"varint,4,opt,name=block_number,json=blockNumber,proto3" json:"block_number,omitempty"`
	TxIndex              uint64                    `protobuf:"varint,5,opt,name=tx_index,json=txIndex,proto3" json:"tx_index,omitempty"`
	Hash                 string                    `protobuf:"bytes,6,opt,name=hash,proto3" json:"hash,omitempty"`
	BuiltinDeposit       *vega.BuiltinAssetDeposit `protobuf:"bytes,7,opt,name=builtin_deposit,json=builtinDeposit,proto3" json:"builtin_deposit,omitempty"`
	Erc20Deposit         *vega.ERC20Deposit        `protobuf:"bytes,8,opt,name=erc20_deposit,json=erc20Deposit,proto3" json:"erc20_deposit,omitempty"`
	AssetList            *vega.ERC20AssetList      `protobuf:"bytes,9,opt,name=asset_list,json=assetList,proto3" json:"asset_list,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *AssetAction) Reset()         { *m = AssetAction{} }
func (m *AssetAction) String() string { return proto.CompactTextString(m) }
func (*AssetAction) ProtoMessage()    {}
func (*AssetAction) Descriptor() ([]byte, []int) {
	return fileDescriptor_cee6f703c00de307, []int{13}
}

func (m *AssetAction) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AssetAction.Unmarshal(m, b)
}
func (m *AssetAction) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AssetAction.Marshal(b, m, deterministic)
}
func (m *AssetAction) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AssetAction.Merge(m, src)
}
func (m *AssetAction) XXX_Size() int {
	return xxx_messageInfo_AssetAction.Size(m)
}
func (m *AssetAction) XXX_DiscardUnknown() {
	xxx_messageInfo_AssetAction.DiscardUnknown(m)
}

var xxx_messageInfo_AssetAction proto.InternalMessageInfo

func (m *AssetAction) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *AssetAction) GetState() uint32 {
	if m != nil {
		return m.State
	}
	return 0
}

func (m *AssetAction) GetAsset() string {
	if m != nil {
		return m.Asset
	}
	return ""
}

func (m *AssetAction) GetBlockNumber() uint64 {
	if m != nil {
		return m.BlockNumber
	}
	return 0
}

func (m *AssetAction) GetTxIndex() uint64 {
	if m != nil {
		return m.TxIndex
	}
	return 0
}

func (m *AssetAction) GetHash() string {
	if m != nil {
		return m.Hash
	}
	return ""
}

func (m *AssetAction) GetBuiltinDeposit() *vega.BuiltinAssetDeposit {
	if m != nil {
		return m.BuiltinDeposit
	}
	return nil
}

func (m *AssetAction) GetErc20Deposit() *vega.ERC20Deposit {
	if m != nil {
		return m.Erc20Deposit
	}
	return nil
}

func (m *AssetAction) GetAssetList() *vega.ERC20AssetList {
	if m != nil {
		return m.AssetList
	}
	return nil
}

type BankingWithdrawals struct {
	Withdrawals          []*Withdrawal `protobuf:"bytes,1,rep,name=withdrawals,proto3" json:"withdrawals,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *BankingWithdrawals) Reset()         { *m = BankingWithdrawals{} }
func (m *BankingWithdrawals) String() string { return proto.CompactTextString(m) }
func (*BankingWithdrawals) ProtoMessage()    {}
func (*BankingWithdrawals) Descriptor() ([]byte, []int) {
	return fileDescriptor_cee6f703c00de307, []int{14}
}

func (m *BankingWithdrawals) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BankingWithdrawals.Unmarshal(m, b)
}
func (m *BankingWithdrawals) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BankingWithdrawals.Marshal(b, m, deterministic)
}
func (m *BankingWithdrawals) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BankingWithdrawals.Merge(m, src)
}
func (m *BankingWithdrawals) XXX_Size() int {
	return xxx_messageInfo_BankingWithdrawals.Size(m)
}
func (m *BankingWithdrawals) XXX_DiscardUnknown() {
	xxx_messageInfo_BankingWithdrawals.DiscardUnknown(m)
}

var xxx_messageInfo_BankingWithdrawals proto.InternalMessageInfo

func (m *BankingWithdrawals) GetWithdrawals() []*Withdrawal {
	if m != nil {
		return m.Withdrawals
	}
	return nil
}

type BankingDeposits struct {
	Deposit              []*Deposit `protobuf:"bytes,1,rep,name=deposit,proto3" json:"deposit,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *BankingDeposits) Reset()         { *m = BankingDeposits{} }
func (m *BankingDeposits) String() string { return proto.CompactTextString(m) }
func (*BankingDeposits) ProtoMessage()    {}
func (*BankingDeposits) Descriptor() ([]byte, []int) {
	return fileDescriptor_cee6f703c00de307, []int{15}
}

func (m *BankingDeposits) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BankingDeposits.Unmarshal(m, b)
}
func (m *BankingDeposits) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BankingDeposits.Marshal(b, m, deterministic)
}
func (m *BankingDeposits) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BankingDeposits.Merge(m, src)
}
func (m *BankingDeposits) XXX_Size() int {
	return xxx_messageInfo_BankingDeposits.Size(m)
}
func (m *BankingDeposits) XXX_DiscardUnknown() {
	xxx_messageInfo_BankingDeposits.DiscardUnknown(m)
}

var xxx_messageInfo_BankingDeposits proto.InternalMessageInfo

func (m *BankingDeposits) GetDeposit() []*Deposit {
	if m != nil {
		return m.Deposit
	}
	return nil
}

type BankingSeen struct {
	Refs                 []*TxRef `protobuf:"bytes,1,rep,name=refs,proto3" json:"refs,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BankingSeen) Reset()         { *m = BankingSeen{} }
func (m *BankingSeen) String() string { return proto.CompactTextString(m) }
func (*BankingSeen) ProtoMessage()    {}
func (*BankingSeen) Descriptor() ([]byte, []int) {
	return fileDescriptor_cee6f703c00de307, []int{16}
}

func (m *BankingSeen) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BankingSeen.Unmarshal(m, b)
}
func (m *BankingSeen) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BankingSeen.Marshal(b, m, deterministic)
}
func (m *BankingSeen) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BankingSeen.Merge(m, src)
}
func (m *BankingSeen) XXX_Size() int {
	return xxx_messageInfo_BankingSeen.Size(m)
}
func (m *BankingSeen) XXX_DiscardUnknown() {
	xxx_messageInfo_BankingSeen.DiscardUnknown(m)
}

var xxx_messageInfo_BankingSeen proto.InternalMessageInfo

func (m *BankingSeen) GetRefs() []*TxRef {
	if m != nil {
		return m.Refs
	}
	return nil
}

type BankingAssetActions struct {
	AssetAction          []*AssetAction `protobuf:"bytes,1,rep,name=asset_action,json=assetAction,proto3" json:"asset_action,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *BankingAssetActions) Reset()         { *m = BankingAssetActions{} }
func (m *BankingAssetActions) String() string { return proto.CompactTextString(m) }
func (*BankingAssetActions) ProtoMessage()    {}
func (*BankingAssetActions) Descriptor() ([]byte, []int) {
	return fileDescriptor_cee6f703c00de307, []int{17}
}

func (m *BankingAssetActions) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BankingAssetActions.Unmarshal(m, b)
}
func (m *BankingAssetActions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BankingAssetActions.Marshal(b, m, deterministic)
}
func (m *BankingAssetActions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BankingAssetActions.Merge(m, src)
}
func (m *BankingAssetActions) XXX_Size() int {
	return xxx_messageInfo_BankingAssetActions.Size(m)
}
func (m *BankingAssetActions) XXX_DiscardUnknown() {
	xxx_messageInfo_BankingAssetActions.DiscardUnknown(m)
}

var xxx_messageInfo_BankingAssetActions proto.InternalMessageInfo

func (m *BankingAssetActions) GetAssetAction() []*AssetAction {
	if m != nil {
		return m.AssetAction
	}
	return nil
}

type Checkpoint struct {
	NextCp               int64    `protobuf:"varint,1,opt,name=next_cp,json=nextCp,proto3" json:"next_cp,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Checkpoint) Reset()         { *m = Checkpoint{} }
func (m *Checkpoint) String() string { return proto.CompactTextString(m) }
func (*Checkpoint) ProtoMessage()    {}
func (*Checkpoint) Descriptor() ([]byte, []int) {
	return fileDescriptor_cee6f703c00de307, []int{18}
}

func (m *Checkpoint) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Checkpoint.Unmarshal(m, b)
}
func (m *Checkpoint) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Checkpoint.Marshal(b, m, deterministic)
}
func (m *Checkpoint) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Checkpoint.Merge(m, src)
}
func (m *Checkpoint) XXX_Size() int {
	return xxx_messageInfo_Checkpoint.Size(m)
}
func (m *Checkpoint) XXX_DiscardUnknown() {
	xxx_messageInfo_Checkpoint.DiscardUnknown(m)
}

var xxx_messageInfo_Checkpoint proto.InternalMessageInfo

func (m *Checkpoint) GetNextCp() int64 {
	if m != nil {
		return m.NextCp
	}
	return 0
}

type DelegationActive struct {
	Delegations          []*vega.Delegation `protobuf:"bytes,1,rep,name=delegations,proto3" json:"delegations,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *DelegationActive) Reset()         { *m = DelegationActive{} }
func (m *DelegationActive) String() string { return proto.CompactTextString(m) }
func (*DelegationActive) ProtoMessage()    {}
func (*DelegationActive) Descriptor() ([]byte, []int) {
	return fileDescriptor_cee6f703c00de307, []int{19}
}

func (m *DelegationActive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DelegationActive.Unmarshal(m, b)
}
func (m *DelegationActive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DelegationActive.Marshal(b, m, deterministic)
}
func (m *DelegationActive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DelegationActive.Merge(m, src)
}
func (m *DelegationActive) XXX_Size() int {
	return xxx_messageInfo_DelegationActive.Size(m)
}
func (m *DelegationActive) XXX_DiscardUnknown() {
	xxx_messageInfo_DelegationActive.DiscardUnknown(m)
}

var xxx_messageInfo_DelegationActive proto.InternalMessageInfo

func (m *DelegationActive) GetDelegations() []*vega.Delegation {
	if m != nil {
		return m.Delegations
	}
	return nil
}

type DelegationPending struct {
	Delegations          []*vega.Delegation `protobuf:"bytes,1,rep,name=delegations,proto3" json:"delegations,omitempty"`
	Undelegation         []*vega.Delegation `protobuf:"bytes,2,rep,name=undelegation,proto3" json:"undelegation,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *DelegationPending) Reset()         { *m = DelegationPending{} }
func (m *DelegationPending) String() string { return proto.CompactTextString(m) }
func (*DelegationPending) ProtoMessage()    {}
func (*DelegationPending) Descriptor() ([]byte, []int) {
	return fileDescriptor_cee6f703c00de307, []int{20}
}

func (m *DelegationPending) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DelegationPending.Unmarshal(m, b)
}
func (m *DelegationPending) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DelegationPending.Marshal(b, m, deterministic)
}
func (m *DelegationPending) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DelegationPending.Merge(m, src)
}
func (m *DelegationPending) XXX_Size() int {
	return xxx_messageInfo_DelegationPending.Size(m)
}
func (m *DelegationPending) XXX_DiscardUnknown() {
	xxx_messageInfo_DelegationPending.DiscardUnknown(m)
}

var xxx_messageInfo_DelegationPending proto.InternalMessageInfo

func (m *DelegationPending) GetDelegations() []*vega.Delegation {
	if m != nil {
		return m.Delegations
	}
	return nil
}

func (m *DelegationPending) GetUndelegation() []*vega.Delegation {
	if m != nil {
		return m.Undelegation
	}
	return nil
}

type DelegationAuto struct {
	Parties              []string `protobuf:"bytes,1,rep,name=parties,proto3" json:"parties,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DelegationAuto) Reset()         { *m = DelegationAuto{} }
func (m *DelegationAuto) String() string { return proto.CompactTextString(m) }
func (*DelegationAuto) ProtoMessage()    {}
func (*DelegationAuto) Descriptor() ([]byte, []int) {
	return fileDescriptor_cee6f703c00de307, []int{21}
}

func (m *DelegationAuto) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DelegationAuto.Unmarshal(m, b)
}
func (m *DelegationAuto) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DelegationAuto.Marshal(b, m, deterministic)
}
func (m *DelegationAuto) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DelegationAuto.Merge(m, src)
}
func (m *DelegationAuto) XXX_Size() int {
	return xxx_messageInfo_DelegationAuto.Size(m)
}
func (m *DelegationAuto) XXX_DiscardUnknown() {
	xxx_messageInfo_DelegationAuto.DiscardUnknown(m)
}

var xxx_messageInfo_DelegationAuto proto.InternalMessageInfo

func (m *DelegationAuto) GetParties() []string {
	if m != nil {
		return m.Parties
	}
	return nil
}

type PendingProposal struct {
	Proposal             *vega.Proposal `protobuf:"bytes,1,opt,name=proposal,proto3" json:"proposal,omitempty"`
	Yes                  []*vega.Vote   `protobuf:"bytes,2,rep,name=yes,proto3" json:"yes,omitempty"`
	No                   []*vega.Vote   `protobuf:"bytes,3,rep,name=no,proto3" json:"no,omitempty"`
	Invalid              []*vega.Vote   `protobuf:"bytes,4,rep,name=invalid,proto3" json:"invalid,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *PendingProposal) Reset()         { *m = PendingProposal{} }
func (m *PendingProposal) String() string { return proto.CompactTextString(m) }
func (*PendingProposal) ProtoMessage()    {}
func (*PendingProposal) Descriptor() ([]byte, []int) {
	return fileDescriptor_cee6f703c00de307, []int{22}
}

func (m *PendingProposal) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PendingProposal.Unmarshal(m, b)
}
func (m *PendingProposal) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PendingProposal.Marshal(b, m, deterministic)
}
func (m *PendingProposal) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PendingProposal.Merge(m, src)
}
func (m *PendingProposal) XXX_Size() int {
	return xxx_messageInfo_PendingProposal.Size(m)
}
func (m *PendingProposal) XXX_DiscardUnknown() {
	xxx_messageInfo_PendingProposal.DiscardUnknown(m)
}

var xxx_messageInfo_PendingProposal proto.InternalMessageInfo

func (m *PendingProposal) GetProposal() *vega.Proposal {
	if m != nil {
		return m.Proposal
	}
	return nil
}

func (m *PendingProposal) GetYes() []*vega.Vote {
	if m != nil {
		return m.Yes
	}
	return nil
}

func (m *PendingProposal) GetNo() []*vega.Vote {
	if m != nil {
		return m.No
	}
	return nil
}

func (m *PendingProposal) GetInvalid() []*vega.Vote {
	if m != nil {
		return m.Invalid
	}
	return nil
}

type GovernanceEnacted struct {
	Proposals            []*vega.Proposal `protobuf:"bytes,1,rep,name=proposals,proto3" json:"proposals,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *GovernanceEnacted) Reset()         { *m = GovernanceEnacted{} }
func (m *GovernanceEnacted) String() string { return proto.CompactTextString(m) }
func (*GovernanceEnacted) ProtoMessage()    {}
func (*GovernanceEnacted) Descriptor() ([]byte, []int) {
	return fileDescriptor_cee6f703c00de307, []int{23}
}

func (m *GovernanceEnacted) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GovernanceEnacted.Unmarshal(m, b)
}
func (m *GovernanceEnacted) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GovernanceEnacted.Marshal(b, m, deterministic)
}
func (m *GovernanceEnacted) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GovernanceEnacted.Merge(m, src)
}
func (m *GovernanceEnacted) XXX_Size() int {
	return xxx_messageInfo_GovernanceEnacted.Size(m)
}
func (m *GovernanceEnacted) XXX_DiscardUnknown() {
	xxx_messageInfo_GovernanceEnacted.DiscardUnknown(m)
}

var xxx_messageInfo_GovernanceEnacted proto.InternalMessageInfo

func (m *GovernanceEnacted) GetProposals() []*vega.Proposal {
	if m != nil {
		return m.Proposals
	}
	return nil
}

type GovernanceActive struct {
	Proposals            []*PendingProposal `protobuf:"bytes,1,rep,name=proposals,proto3" json:"proposals,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *GovernanceActive) Reset()         { *m = GovernanceActive{} }
func (m *GovernanceActive) String() string { return proto.CompactTextString(m) }
func (*GovernanceActive) ProtoMessage()    {}
func (*GovernanceActive) Descriptor() ([]byte, []int) {
	return fileDescriptor_cee6f703c00de307, []int{24}
}

func (m *GovernanceActive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GovernanceActive.Unmarshal(m, b)
}
func (m *GovernanceActive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GovernanceActive.Marshal(b, m, deterministic)
}
func (m *GovernanceActive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GovernanceActive.Merge(m, src)
}
func (m *GovernanceActive) XXX_Size() int {
	return xxx_messageInfo_GovernanceActive.Size(m)
}
func (m *GovernanceActive) XXX_DiscardUnknown() {
	xxx_messageInfo_GovernanceActive.DiscardUnknown(m)
}

var xxx_messageInfo_GovernanceActive proto.InternalMessageInfo

func (m *GovernanceActive) GetProposals() []*PendingProposal {
	if m != nil {
		return m.Proposals
	}
	return nil
}

type GovernanceNode struct {
	Proposals            []*vega.Proposal `protobuf:"bytes,1,rep,name=proposals,proto3" json:"proposals,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *GovernanceNode) Reset()         { *m = GovernanceNode{} }
func (m *GovernanceNode) String() string { return proto.CompactTextString(m) }
func (*GovernanceNode) ProtoMessage()    {}
func (*GovernanceNode) Descriptor() ([]byte, []int) {
	return fileDescriptor_cee6f703c00de307, []int{25}
}

func (m *GovernanceNode) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GovernanceNode.Unmarshal(m, b)
}
func (m *GovernanceNode) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GovernanceNode.Marshal(b, m, deterministic)
}
func (m *GovernanceNode) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GovernanceNode.Merge(m, src)
}
func (m *GovernanceNode) XXX_Size() int {
	return xxx_messageInfo_GovernanceNode.Size(m)
}
func (m *GovernanceNode) XXX_DiscardUnknown() {
	xxx_messageInfo_GovernanceNode.DiscardUnknown(m)
}

var xxx_messageInfo_GovernanceNode proto.InternalMessageInfo

func (m *GovernanceNode) GetProposals() []*vega.Proposal {
	if m != nil {
		return m.Proposals
	}
	return nil
}

type StakingAccount struct {
	Party                string              `protobuf:"bytes,1,opt,name=party,proto3" json:"party,omitempty"`
	Balance              string              `protobuf:"bytes,2,opt,name=balance,proto3" json:"balance,omitempty"`
	Events               []*v11.StakeLinking `protobuf:"bytes,3,rep,name=events,proto3" json:"events,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *StakingAccount) Reset()         { *m = StakingAccount{} }
func (m *StakingAccount) String() string { return proto.CompactTextString(m) }
func (*StakingAccount) ProtoMessage()    {}
func (*StakingAccount) Descriptor() ([]byte, []int) {
	return fileDescriptor_cee6f703c00de307, []int{26}
}

func (m *StakingAccount) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StakingAccount.Unmarshal(m, b)
}
func (m *StakingAccount) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StakingAccount.Marshal(b, m, deterministic)
}
func (m *StakingAccount) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StakingAccount.Merge(m, src)
}
func (m *StakingAccount) XXX_Size() int {
	return xxx_messageInfo_StakingAccount.Size(m)
}
func (m *StakingAccount) XXX_DiscardUnknown() {
	xxx_messageInfo_StakingAccount.DiscardUnknown(m)
}

var xxx_messageInfo_StakingAccount proto.InternalMessageInfo

func (m *StakingAccount) GetParty() string {
	if m != nil {
		return m.Party
	}
	return ""
}

func (m *StakingAccount) GetBalance() string {
	if m != nil {
		return m.Balance
	}
	return ""
}

func (m *StakingAccount) GetEvents() []*v11.StakeLinking {
	if m != nil {
		return m.Events
	}
	return nil
}

type StakingAccounts struct {
	Accounts             []*StakingAccount `protobuf:"bytes,1,rep,name=accounts,proto3" json:"accounts,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *StakingAccounts) Reset()         { *m = StakingAccounts{} }
func (m *StakingAccounts) String() string { return proto.CompactTextString(m) }
func (*StakingAccounts) ProtoMessage()    {}
func (*StakingAccounts) Descriptor() ([]byte, []int) {
	return fileDescriptor_cee6f703c00de307, []int{27}
}

func (m *StakingAccounts) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StakingAccounts.Unmarshal(m, b)
}
func (m *StakingAccounts) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StakingAccounts.Marshal(b, m, deterministic)
}
func (m *StakingAccounts) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StakingAccounts.Merge(m, src)
}
func (m *StakingAccounts) XXX_Size() int {
	return xxx_messageInfo_StakingAccounts.Size(m)
}
func (m *StakingAccounts) XXX_DiscardUnknown() {
	xxx_messageInfo_StakingAccounts.DiscardUnknown(m)
}

var xxx_messageInfo_StakingAccounts proto.InternalMessageInfo

func (m *StakingAccounts) GetAccounts() []*StakingAccount {
	if m != nil {
		return m.Accounts
	}
	return nil
}

type MatchingBook struct {
	MarketId             string        `protobuf:"bytes,1,opt,name=market_id,json=marketId,proto3" json:"market_id,omitempty"`
	Buy                  []*vega.Order `protobuf:"bytes,2,rep,name=buy,proto3" json:"buy,omitempty"`
	Sell                 []*vega.Order `protobuf:"bytes,3,rep,name=sell,proto3" json:"sell,omitempty"`
	LastTradedPrice      string        `protobuf:"bytes,4,opt,name=last_traded_price,json=lastTradedPrice,proto3" json:"last_traded_price,omitempty"`
	Auction              bool          `protobuf:"varint,5,opt,name=auction,proto3" json:"auction,omitempty"`
	BatchId              uint64        `protobuf:"varint,6,opt,name=batch_id,json=batchId,proto3" json:"batch_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *MatchingBook) Reset()         { *m = MatchingBook{} }
func (m *MatchingBook) String() string { return proto.CompactTextString(m) }
func (*MatchingBook) ProtoMessage()    {}
func (*MatchingBook) Descriptor() ([]byte, []int) {
	return fileDescriptor_cee6f703c00de307, []int{28}
}

func (m *MatchingBook) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MatchingBook.Unmarshal(m, b)
}
func (m *MatchingBook) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MatchingBook.Marshal(b, m, deterministic)
}
func (m *MatchingBook) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MatchingBook.Merge(m, src)
}
func (m *MatchingBook) XXX_Size() int {
	return xxx_messageInfo_MatchingBook.Size(m)
}
func (m *MatchingBook) XXX_DiscardUnknown() {
	xxx_messageInfo_MatchingBook.DiscardUnknown(m)
}

var xxx_messageInfo_MatchingBook proto.InternalMessageInfo

func (m *MatchingBook) GetMarketId() string {
	if m != nil {
		return m.MarketId
	}
	return ""
}

func (m *MatchingBook) GetBuy() []*vega.Order {
	if m != nil {
		return m.Buy
	}
	return nil
}

func (m *MatchingBook) GetSell() []*vega.Order {
	if m != nil {
		return m.Sell
	}
	return nil
}

func (m *MatchingBook) GetLastTradedPrice() string {
	if m != nil {
		return m.LastTradedPrice
	}
	return ""
}

func (m *MatchingBook) GetAuction() bool {
	if m != nil {
		return m.Auction
	}
	return false
}

func (m *MatchingBook) GetBatchId() uint64 {
	if m != nil {
		return m.BatchId
	}
	return 0
}

type NetParams struct {
	Params               []*vega.NetworkParameter `protobuf:"bytes,1,rep,name=params,proto3" json:"params,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *NetParams) Reset()         { *m = NetParams{} }
func (m *NetParams) String() string { return proto.CompactTextString(m) }
func (*NetParams) ProtoMessage()    {}
func (*NetParams) Descriptor() ([]byte, []int) {
	return fileDescriptor_cee6f703c00de307, []int{29}
}

func (m *NetParams) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NetParams.Unmarshal(m, b)
}
func (m *NetParams) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NetParams.Marshal(b, m, deterministic)
}
func (m *NetParams) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetParams.Merge(m, src)
}
func (m *NetParams) XXX_Size() int {
	return xxx_messageInfo_NetParams.Size(m)
}
func (m *NetParams) XXX_DiscardUnknown() {
	xxx_messageInfo_NetParams.DiscardUnknown(m)
}

var xxx_messageInfo_NetParams proto.InternalMessageInfo

func (m *NetParams) GetParams() []*vega.NetworkParameter {
	if m != nil {
		return m.Params
	}
	return nil
}

type DecimalMap struct {
	Key                  int64    `protobuf:"varint,1,opt,name=key,proto3" json:"key,omitempty"`
	Val                  string   `protobuf:"bytes,2,opt,name=val,proto3" json:"val,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DecimalMap) Reset()         { *m = DecimalMap{} }
func (m *DecimalMap) String() string { return proto.CompactTextString(m) }
func (*DecimalMap) ProtoMessage()    {}
func (*DecimalMap) Descriptor() ([]byte, []int) {
	return fileDescriptor_cee6f703c00de307, []int{30}
}

func (m *DecimalMap) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DecimalMap.Unmarshal(m, b)
}
func (m *DecimalMap) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DecimalMap.Marshal(b, m, deterministic)
}
func (m *DecimalMap) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DecimalMap.Merge(m, src)
}
func (m *DecimalMap) XXX_Size() int {
	return xxx_messageInfo_DecimalMap.Size(m)
}
func (m *DecimalMap) XXX_DiscardUnknown() {
	xxx_messageInfo_DecimalMap.DiscardUnknown(m)
}

var xxx_messageInfo_DecimalMap proto.InternalMessageInfo

func (m *DecimalMap) GetKey() int64 {
	if m != nil {
		return m.Key
	}
	return 0
}

func (m *DecimalMap) GetVal() string {
	if m != nil {
		return m.Val
	}
	return ""
}

type TimePrice struct {
	Time                 int64    `protobuf:"varint,1,opt,name=time,proto3" json:"time,omitempty"`
	Price                string   `protobuf:"bytes,2,opt,name=price,proto3" json:"price,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TimePrice) Reset()         { *m = TimePrice{} }
func (m *TimePrice) String() string { return proto.CompactTextString(m) }
func (*TimePrice) ProtoMessage()    {}
func (*TimePrice) Descriptor() ([]byte, []int) {
	return fileDescriptor_cee6f703c00de307, []int{31}
}

func (m *TimePrice) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TimePrice.Unmarshal(m, b)
}
func (m *TimePrice) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TimePrice.Marshal(b, m, deterministic)
}
func (m *TimePrice) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TimePrice.Merge(m, src)
}
func (m *TimePrice) XXX_Size() int {
	return xxx_messageInfo_TimePrice.Size(m)
}
func (m *TimePrice) XXX_DiscardUnknown() {
	xxx_messageInfo_TimePrice.DiscardUnknown(m)
}

var xxx_messageInfo_TimePrice proto.InternalMessageInfo

func (m *TimePrice) GetTime() int64 {
	if m != nil {
		return m.Time
	}
	return 0
}

func (m *TimePrice) GetPrice() string {
	if m != nil {
		return m.Price
	}
	return ""
}

type PriceVolume struct {
	Price                string   `protobuf:"bytes,1,opt,name=price,proto3" json:"price,omitempty"`
	Volume               uint64   `protobuf:"varint,2,opt,name=volume,proto3" json:"volume,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PriceVolume) Reset()         { *m = PriceVolume{} }
func (m *PriceVolume) String() string { return proto.CompactTextString(m) }
func (*PriceVolume) ProtoMessage()    {}
func (*PriceVolume) Descriptor() ([]byte, []int) {
	return fileDescriptor_cee6f703c00de307, []int{32}
}

func (m *PriceVolume) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PriceVolume.Unmarshal(m, b)
}
func (m *PriceVolume) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PriceVolume.Marshal(b, m, deterministic)
}
func (m *PriceVolume) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PriceVolume.Merge(m, src)
}
func (m *PriceVolume) XXX_Size() int {
	return xxx_messageInfo_PriceVolume.Size(m)
}
func (m *PriceVolume) XXX_DiscardUnknown() {
	xxx_messageInfo_PriceVolume.DiscardUnknown(m)
}

var xxx_messageInfo_PriceVolume proto.InternalMessageInfo

func (m *PriceVolume) GetPrice() string {
	if m != nil {
		return m.Price
	}
	return ""
}

func (m *PriceVolume) GetVolume() uint64 {
	if m != nil {
		return m.Volume
	}
	return 0
}

type PriceRange struct {
	Min                  string   `protobuf:"bytes,1,opt,name=min,proto3" json:"min,omitempty"`
	Max                  string   `protobuf:"bytes,2,opt,name=max,proto3" json:"max,omitempty"`
	Ref                  string   `protobuf:"bytes,3,opt,name=ref,proto3" json:"ref,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PriceRange) Reset()         { *m = PriceRange{} }
func (m *PriceRange) String() string { return proto.CompactTextString(m) }
func (*PriceRange) ProtoMessage()    {}
func (*PriceRange) Descriptor() ([]byte, []int) {
	return fileDescriptor_cee6f703c00de307, []int{33}
}

func (m *PriceRange) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PriceRange.Unmarshal(m, b)
}
func (m *PriceRange) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PriceRange.Marshal(b, m, deterministic)
}
func (m *PriceRange) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PriceRange.Merge(m, src)
}
func (m *PriceRange) XXX_Size() int {
	return xxx_messageInfo_PriceRange.Size(m)
}
func (m *PriceRange) XXX_DiscardUnknown() {
	xxx_messageInfo_PriceRange.DiscardUnknown(m)
}

var xxx_messageInfo_PriceRange proto.InternalMessageInfo

func (m *PriceRange) GetMin() string {
	if m != nil {
		return m.Min
	}
	return ""
}

func (m *PriceRange) GetMax() string {
	if m != nil {
		return m.Max
	}
	return ""
}

func (m *PriceRange) GetRef() string {
	if m != nil {
		return m.Ref
	}
	return ""
}

type PriceBound struct {
	Active               bool                         `protobuf:"varint,1,opt,name=active,proto3" json:"active,omitempty"`
	UpFactor             string                       `protobuf:"bytes,2,opt,name=up_factor,json=upFactor,proto3" json:"up_factor,omitempty"`
	DownFactor           string                       `protobuf:"bytes,3,opt,name=down_factor,json=downFactor,proto3" json:"down_factor,omitempty"`
	Trigger              *vega.PriceMonitoringTrigger `protobuf:"bytes,4,opt,name=trigger,proto3" json:"trigger,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                     `json:"-"`
	XXX_unrecognized     []byte                       `json:"-"`
	XXX_sizecache        int32                        `json:"-"`
}

func (m *PriceBound) Reset()         { *m = PriceBound{} }
func (m *PriceBound) String() string { return proto.CompactTextString(m) }
func (*PriceBound) ProtoMessage()    {}
func (*PriceBound) Descriptor() ([]byte, []int) {
	return fileDescriptor_cee6f703c00de307, []int{34}
}

func (m *PriceBound) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PriceBound.Unmarshal(m, b)
}
func (m *PriceBound) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PriceBound.Marshal(b, m, deterministic)
}
func (m *PriceBound) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PriceBound.Merge(m, src)
}
func (m *PriceBound) XXX_Size() int {
	return xxx_messageInfo_PriceBound.Size(m)
}
func (m *PriceBound) XXX_DiscardUnknown() {
	xxx_messageInfo_PriceBound.DiscardUnknown(m)
}

var xxx_messageInfo_PriceBound proto.InternalMessageInfo

func (m *PriceBound) GetActive() bool {
	if m != nil {
		return m.Active
	}
	return false
}

func (m *PriceBound) GetUpFactor() string {
	if m != nil {
		return m.UpFactor
	}
	return ""
}

func (m *PriceBound) GetDownFactor() string {
	if m != nil {
		return m.DownFactor
	}
	return ""
}

func (m *PriceBound) GetTrigger() *vega.PriceMonitoringTrigger {
	if m != nil {
		return m.Trigger
	}
	return nil
}

type PriceRangeCache struct {
	Bound                *PriceBound `protobuf:"bytes,1,opt,name=bound,proto3" json:"bound,omitempty"`
	Range                *PriceRange `protobuf:"bytes,2,opt,name=range,proto3" json:"range,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *PriceRangeCache) Reset()         { *m = PriceRangeCache{} }
func (m *PriceRangeCache) String() string { return proto.CompactTextString(m) }
func (*PriceRangeCache) ProtoMessage()    {}
func (*PriceRangeCache) Descriptor() ([]byte, []int) {
	return fileDescriptor_cee6f703c00de307, []int{35}
}

func (m *PriceRangeCache) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PriceRangeCache.Unmarshal(m, b)
}
func (m *PriceRangeCache) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PriceRangeCache.Marshal(b, m, deterministic)
}
func (m *PriceRangeCache) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PriceRangeCache.Merge(m, src)
}
func (m *PriceRangeCache) XXX_Size() int {
	return xxx_messageInfo_PriceRangeCache.Size(m)
}
func (m *PriceRangeCache) XXX_DiscardUnknown() {
	xxx_messageInfo_PriceRangeCache.DiscardUnknown(m)
}

var xxx_messageInfo_PriceRangeCache proto.InternalMessageInfo

func (m *PriceRangeCache) GetBound() *PriceBound {
	if m != nil {
		return m.Bound
	}
	return nil
}

func (m *PriceRangeCache) GetRange() *PriceRange {
	if m != nil {
		return m.Range
	}
	return nil
}

type PriceMonitor struct {
	Initialised          bool               `protobuf:"varint,3,opt,name=initialised,proto3" json:"initialised,omitempty"`
	FpHorizons           []*DecimalMap      `protobuf:"bytes,4,rep,name=fp_horizons,json=fpHorizons,proto3" json:"fp_horizons,omitempty"`
	Now                  int64              `protobuf:"varint,5,opt,name=now,proto3" json:"now,omitempty"`
	Update               int64              `protobuf:"varint,6,opt,name=update,proto3" json:"update,omitempty"`
	Bounds               []*PriceBound      `protobuf:"bytes,7,rep,name=bounds,proto3" json:"bounds,omitempty"`
	PriceRangeCacheTime  int64              `protobuf:"varint,8,opt,name=price_range_cache_time,json=priceRangeCacheTime,proto3" json:"price_range_cache_time,omitempty"`
	PriceRangeCache      []*PriceRangeCache `protobuf:"bytes,9,rep,name=price_range_cache,json=priceRangeCache,proto3" json:"price_range_cache,omitempty"`
	RefPriceCacheTime    int64              `protobuf:"varint,10,opt,name=ref_price_cache_time,json=refPriceCacheTime,proto3" json:"ref_price_cache_time,omitempty"`
	RefPriceCache        []*DecimalMap      `protobuf:"bytes,11,rep,name=ref_price_cache,json=refPriceCache,proto3" json:"ref_price_cache,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *PriceMonitor) Reset()         { *m = PriceMonitor{} }
func (m *PriceMonitor) String() string { return proto.CompactTextString(m) }
func (*PriceMonitor) ProtoMessage()    {}
func (*PriceMonitor) Descriptor() ([]byte, []int) {
	return fileDescriptor_cee6f703c00de307, []int{36}
}

func (m *PriceMonitor) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PriceMonitor.Unmarshal(m, b)
}
func (m *PriceMonitor) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PriceMonitor.Marshal(b, m, deterministic)
}
func (m *PriceMonitor) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PriceMonitor.Merge(m, src)
}
func (m *PriceMonitor) XXX_Size() int {
	return xxx_messageInfo_PriceMonitor.Size(m)
}
func (m *PriceMonitor) XXX_DiscardUnknown() {
	xxx_messageInfo_PriceMonitor.DiscardUnknown(m)
}

var xxx_messageInfo_PriceMonitor proto.InternalMessageInfo

func (m *PriceMonitor) GetInitialised() bool {
	if m != nil {
		return m.Initialised
	}
	return false
}

func (m *PriceMonitor) GetFpHorizons() []*DecimalMap {
	if m != nil {
		return m.FpHorizons
	}
	return nil
}

func (m *PriceMonitor) GetNow() int64 {
	if m != nil {
		return m.Now
	}
	return 0
}

func (m *PriceMonitor) GetUpdate() int64 {
	if m != nil {
		return m.Update
	}
	return 0
}

func (m *PriceMonitor) GetBounds() []*PriceBound {
	if m != nil {
		return m.Bounds
	}
	return nil
}

func (m *PriceMonitor) GetPriceRangeCacheTime() int64 {
	if m != nil {
		return m.PriceRangeCacheTime
	}
	return 0
}

func (m *PriceMonitor) GetPriceRangeCache() []*PriceRangeCache {
	if m != nil {
		return m.PriceRangeCache
	}
	return nil
}

func (m *PriceMonitor) GetRefPriceCacheTime() int64 {
	if m != nil {
		return m.RefPriceCacheTime
	}
	return 0
}

func (m *PriceMonitor) GetRefPriceCache() []*DecimalMap {
	if m != nil {
		return m.RefPriceCache
	}
	return nil
}

type AuctionState struct {
	Mode                 vega.Market_TradingMode `protobuf:"varint,1,opt,name=mode,proto3,enum=vega.Market_TradingMode" json:"mode,omitempty"`
	DefaultMode          vega.Market_TradingMode `protobuf:"varint,2,opt,name=default_mode,json=defaultMode,proto3,enum=vega.Market_TradingMode" json:"default_mode,omitempty"`
	Trigger              vega.AuctionTrigger     `protobuf:"varint,3,opt,name=trigger,proto3,enum=vega.AuctionTrigger" json:"trigger,omitempty"`
	Begin                int64                   `protobuf:"varint,4,opt,name=begin,proto3" json:"begin,omitempty"`
	End                  *vega.AuctionDuration   `protobuf:"bytes,5,opt,name=end,proto3" json:"end,omitempty"`
	Start                bool                    `protobuf:"varint,6,opt,name=start,proto3" json:"start,omitempty"`
	Stop                 bool                    `protobuf:"varint,7,opt,name=stop,proto3" json:"stop,omitempty"`
	Extension            vega.AuctionTrigger     `protobuf:"varint,8,opt,name=extension,proto3,enum=vega.AuctionTrigger" json:"extension,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *AuctionState) Reset()         { *m = AuctionState{} }
func (m *AuctionState) String() string { return proto.CompactTextString(m) }
func (*AuctionState) ProtoMessage()    {}
func (*AuctionState) Descriptor() ([]byte, []int) {
	return fileDescriptor_cee6f703c00de307, []int{37}
}

func (m *AuctionState) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AuctionState.Unmarshal(m, b)
}
func (m *AuctionState) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AuctionState.Marshal(b, m, deterministic)
}
func (m *AuctionState) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AuctionState.Merge(m, src)
}
func (m *AuctionState) XXX_Size() int {
	return xxx_messageInfo_AuctionState.Size(m)
}
func (m *AuctionState) XXX_DiscardUnknown() {
	xxx_messageInfo_AuctionState.DiscardUnknown(m)
}

var xxx_messageInfo_AuctionState proto.InternalMessageInfo

func (m *AuctionState) GetMode() vega.Market_TradingMode {
	if m != nil {
		return m.Mode
	}
	return vega.Market_TRADING_MODE_UNSPECIFIED
}

func (m *AuctionState) GetDefaultMode() vega.Market_TradingMode {
	if m != nil {
		return m.DefaultMode
	}
	return vega.Market_TRADING_MODE_UNSPECIFIED
}

func (m *AuctionState) GetTrigger() vega.AuctionTrigger {
	if m != nil {
		return m.Trigger
	}
	return vega.AuctionTrigger_AUCTION_TRIGGER_UNSPECIFIED
}

func (m *AuctionState) GetBegin() int64 {
	if m != nil {
		return m.Begin
	}
	return 0
}

func (m *AuctionState) GetEnd() *vega.AuctionDuration {
	if m != nil {
		return m.End
	}
	return nil
}

func (m *AuctionState) GetStart() bool {
	if m != nil {
		return m.Start
	}
	return false
}

func (m *AuctionState) GetStop() bool {
	if m != nil {
		return m.Stop
	}
	return false
}

func (m *AuctionState) GetExtension() vega.AuctionTrigger {
	if m != nil {
		return m.Extension
	}
	return vega.AuctionTrigger_AUCTION_TRIGGER_UNSPECIFIED
}

type EquityShareLP struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Stake                string   `protobuf:"bytes,2,opt,name=stake,proto3" json:"stake,omitempty"`
	Share                string   `protobuf:"bytes,3,opt,name=share,proto3" json:"share,omitempty"`
	Avg                  string   `protobuf:"bytes,4,opt,name=avg,proto3" json:"avg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EquityShareLP) Reset()         { *m = EquityShareLP{} }
func (m *EquityShareLP) String() string { return proto.CompactTextString(m) }
func (*EquityShareLP) ProtoMessage()    {}
func (*EquityShareLP) Descriptor() ([]byte, []int) {
	return fileDescriptor_cee6f703c00de307, []int{38}
}

func (m *EquityShareLP) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EquityShareLP.Unmarshal(m, b)
}
func (m *EquityShareLP) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EquityShareLP.Marshal(b, m, deterministic)
}
func (m *EquityShareLP) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EquityShareLP.Merge(m, src)
}
func (m *EquityShareLP) XXX_Size() int {
	return xxx_messageInfo_EquityShareLP.Size(m)
}
func (m *EquityShareLP) XXX_DiscardUnknown() {
	xxx_messageInfo_EquityShareLP.DiscardUnknown(m)
}

var xxx_messageInfo_EquityShareLP proto.InternalMessageInfo

func (m *EquityShareLP) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *EquityShareLP) GetStake() string {
	if m != nil {
		return m.Stake
	}
	return ""
}

func (m *EquityShareLP) GetShare() string {
	if m != nil {
		return m.Share
	}
	return ""
}

func (m *EquityShareLP) GetAvg() string {
	if m != nil {
		return m.Avg
	}
	return ""
}

type EquityShare struct {
	Mvp                  string           `protobuf:"bytes,1,opt,name=mvp,proto3" json:"mvp,omitempty"`
	OpeningAuctionEnded  bool             `protobuf:"varint,2,opt,name=opening_auction_ended,json=openingAuctionEnded,proto3" json:"opening_auction_ended,omitempty"`
	Lps                  []*EquityShareLP `protobuf:"bytes,3,rep,name=lps,proto3" json:"lps,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *EquityShare) Reset()         { *m = EquityShare{} }
func (m *EquityShare) String() string { return proto.CompactTextString(m) }
func (*EquityShare) ProtoMessage()    {}
func (*EquityShare) Descriptor() ([]byte, []int) {
	return fileDescriptor_cee6f703c00de307, []int{39}
}

func (m *EquityShare) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EquityShare.Unmarshal(m, b)
}
func (m *EquityShare) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EquityShare.Marshal(b, m, deterministic)
}
func (m *EquityShare) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EquityShare.Merge(m, src)
}
func (m *EquityShare) XXX_Size() int {
	return xxx_messageInfo_EquityShare.Size(m)
}
func (m *EquityShare) XXX_DiscardUnknown() {
	xxx_messageInfo_EquityShare.DiscardUnknown(m)
}

var xxx_messageInfo_EquityShare proto.InternalMessageInfo

func (m *EquityShare) GetMvp() string {
	if m != nil {
		return m.Mvp
	}
	return ""
}

func (m *EquityShare) GetOpeningAuctionEnded() bool {
	if m != nil {
		return m.OpeningAuctionEnded
	}
	return false
}

func (m *EquityShare) GetLps() []*EquityShareLP {
	if m != nil {
		return m.Lps
	}
	return nil
}

type Market struct {
	Market                     *vega.Market  `protobuf:"bytes,1,opt,name=market,proto3" json:"market,omitempty"`
	PriceMonitor               *PriceMonitor `protobuf:"bytes,2,opt,name=price_monitor,json=priceMonitor,proto3" json:"price_monitor,omitempty"`
	AuctionState               *AuctionState `protobuf:"bytes,3,opt,name=auction_state,json=auctionState,proto3" json:"auction_state,omitempty"`
	PeggedOrders               []*vega.Order `protobuf:"bytes,4,rep,name=pegged_orders,json=peggedOrders,proto3" json:"pegged_orders,omitempty"`
	ExpiringOrders             []*vega.Order `protobuf:"bytes,5,rep,name=expiring_orders,json=expiringOrders,proto3" json:"expiring_orders,omitempty"`
	LastBestBid                string        `protobuf:"bytes,6,opt,name=last_best_bid,json=lastBestBid,proto3" json:"last_best_bid,omitempty"`
	LastBestAsk                string        `protobuf:"bytes,7,opt,name=last_best_ask,json=lastBestAsk,proto3" json:"last_best_ask,omitempty"`
	LastMidBid                 string        `protobuf:"bytes,8,opt,name=last_mid_bid,json=lastMidBid,proto3" json:"last_mid_bid,omitempty"`
	LastMidAsk                 string        `protobuf:"bytes,9,opt,name=last_mid_ask,json=lastMidAsk,proto3" json:"last_mid_ask,omitempty"`
	LastMarketValueProxy       string        `protobuf:"bytes,10,opt,name=last_market_value_proxy,json=lastMarketValueProxy,proto3" json:"last_market_value_proxy,omitempty"`
	LastEquityShareDistributed int64         `protobuf:"varint,11,opt,name=last_equity_share_distributed,json=lastEquityShareDistributed,proto3" json:"last_equity_share_distributed,omitempty"`
	EquityShare                *EquityShare  `protobuf:"bytes,12,opt,name=equity_share,json=equityShare,proto3" json:"equity_share,omitempty"`
	CurrentMarkPrice           string        `protobuf:"bytes,13,opt,name=current_mark_price,json=currentMarkPrice,proto3" json:"current_mark_price,omitempty"`
	XXX_NoUnkeyedLiteral       struct{}      `json:"-"`
	XXX_unrecognized           []byte        `json:"-"`
	XXX_sizecache              int32         `json:"-"`
}

func (m *Market) Reset()         { *m = Market{} }
func (m *Market) String() string { return proto.CompactTextString(m) }
func (*Market) ProtoMessage()    {}
func (*Market) Descriptor() ([]byte, []int) {
	return fileDescriptor_cee6f703c00de307, []int{40}
}

func (m *Market) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Market.Unmarshal(m, b)
}
func (m *Market) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Market.Marshal(b, m, deterministic)
}
func (m *Market) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Market.Merge(m, src)
}
func (m *Market) XXX_Size() int {
	return xxx_messageInfo_Market.Size(m)
}
func (m *Market) XXX_DiscardUnknown() {
	xxx_messageInfo_Market.DiscardUnknown(m)
}

var xxx_messageInfo_Market proto.InternalMessageInfo

func (m *Market) GetMarket() *vega.Market {
	if m != nil {
		return m.Market
	}
	return nil
}

func (m *Market) GetPriceMonitor() *PriceMonitor {
	if m != nil {
		return m.PriceMonitor
	}
	return nil
}

func (m *Market) GetAuctionState() *AuctionState {
	if m != nil {
		return m.AuctionState
	}
	return nil
}

func (m *Market) GetPeggedOrders() []*vega.Order {
	if m != nil {
		return m.PeggedOrders
	}
	return nil
}

func (m *Market) GetExpiringOrders() []*vega.Order {
	if m != nil {
		return m.ExpiringOrders
	}
	return nil
}

func (m *Market) GetLastBestBid() string {
	if m != nil {
		return m.LastBestBid
	}
	return ""
}

func (m *Market) GetLastBestAsk() string {
	if m != nil {
		return m.LastBestAsk
	}
	return ""
}

func (m *Market) GetLastMidBid() string {
	if m != nil {
		return m.LastMidBid
	}
	return ""
}

func (m *Market) GetLastMidAsk() string {
	if m != nil {
		return m.LastMidAsk
	}
	return ""
}

func (m *Market) GetLastMarketValueProxy() string {
	if m != nil {
		return m.LastMarketValueProxy
	}
	return ""
}

func (m *Market) GetLastEquityShareDistributed() int64 {
	if m != nil {
		return m.LastEquityShareDistributed
	}
	return 0
}

func (m *Market) GetEquityShare() *EquityShare {
	if m != nil {
		return m.EquityShare
	}
	return nil
}

func (m *Market) GetCurrentMarkPrice() string {
	if m != nil {
		return m.CurrentMarkPrice
	}
	return ""
}

type ExecutionMarkets struct {
	Markets              []*Market `protobuf:"bytes,1,rep,name=markets,proto3" json:"markets,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *ExecutionMarkets) Reset()         { *m = ExecutionMarkets{} }
func (m *ExecutionMarkets) String() string { return proto.CompactTextString(m) }
func (*ExecutionMarkets) ProtoMessage()    {}
func (*ExecutionMarkets) Descriptor() ([]byte, []int) {
	return fileDescriptor_cee6f703c00de307, []int{41}
}

func (m *ExecutionMarkets) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExecutionMarkets.Unmarshal(m, b)
}
func (m *ExecutionMarkets) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExecutionMarkets.Marshal(b, m, deterministic)
}
func (m *ExecutionMarkets) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExecutionMarkets.Merge(m, src)
}
func (m *ExecutionMarkets) XXX_Size() int {
	return xxx_messageInfo_ExecutionMarkets.Size(m)
}
func (m *ExecutionMarkets) XXX_DiscardUnknown() {
	xxx_messageInfo_ExecutionMarkets.DiscardUnknown(m)
}

var xxx_messageInfo_ExecutionMarkets proto.InternalMessageInfo

func (m *ExecutionMarkets) GetMarkets() []*Market {
	if m != nil {
		return m.Markets
	}
	return nil
}

type Position struct {
	PartyId              string   `protobuf:"bytes,1,opt,name=party_id,json=partyId,proto3" json:"party_id,omitempty"`
	Size                 int64    `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
	Buy                  int64    `protobuf:"varint,3,opt,name=buy,proto3" json:"buy,omitempty"`
	Sell                 int64    `protobuf:"varint,4,opt,name=sell,proto3" json:"sell,omitempty"`
	Price                string   `protobuf:"bytes,5,opt,name=price,proto3" json:"price,omitempty"`
	VwBuyPrice           string   `protobuf:"bytes,6,opt,name=vw_buy_price,json=vwBuyPrice,proto3" json:"vw_buy_price,omitempty"`
	VwSellPrice          string   `protobuf:"bytes,7,opt,name=vw_sell_price,json=vwSellPrice,proto3" json:"vw_sell_price,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Position) Reset()         { *m = Position{} }
func (m *Position) String() string { return proto.CompactTextString(m) }
func (*Position) ProtoMessage()    {}
func (*Position) Descriptor() ([]byte, []int) {
	return fileDescriptor_cee6f703c00de307, []int{42}
}

func (m *Position) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Position.Unmarshal(m, b)
}
func (m *Position) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Position.Marshal(b, m, deterministic)
}
func (m *Position) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Position.Merge(m, src)
}
func (m *Position) XXX_Size() int {
	return xxx_messageInfo_Position.Size(m)
}
func (m *Position) XXX_DiscardUnknown() {
	xxx_messageInfo_Position.DiscardUnknown(m)
}

var xxx_messageInfo_Position proto.InternalMessageInfo

func (m *Position) GetPartyId() string {
	if m != nil {
		return m.PartyId
	}
	return ""
}

func (m *Position) GetSize() int64 {
	if m != nil {
		return m.Size
	}
	return 0
}

func (m *Position) GetBuy() int64 {
	if m != nil {
		return m.Buy
	}
	return 0
}

func (m *Position) GetSell() int64 {
	if m != nil {
		return m.Sell
	}
	return 0
}

func (m *Position) GetPrice() string {
	if m != nil {
		return m.Price
	}
	return ""
}

func (m *Position) GetVwBuyPrice() string {
	if m != nil {
		return m.VwBuyPrice
	}
	return ""
}

func (m *Position) GetVwSellPrice() string {
	if m != nil {
		return m.VwSellPrice
	}
	return ""
}

type MarketPositions struct {
	MarketId             string      `protobuf:"bytes,1,opt,name=market_id,json=marketId,proto3" json:"market_id,omitempty"`
	Positions            []*Position `protobuf:"bytes,2,rep,name=positions,proto3" json:"positions,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *MarketPositions) Reset()         { *m = MarketPositions{} }
func (m *MarketPositions) String() string { return proto.CompactTextString(m) }
func (*MarketPositions) ProtoMessage()    {}
func (*MarketPositions) Descriptor() ([]byte, []int) {
	return fileDescriptor_cee6f703c00de307, []int{43}
}

func (m *MarketPositions) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MarketPositions.Unmarshal(m, b)
}
func (m *MarketPositions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MarketPositions.Marshal(b, m, deterministic)
}
func (m *MarketPositions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MarketPositions.Merge(m, src)
}
func (m *MarketPositions) XXX_Size() int {
	return xxx_messageInfo_MarketPositions.Size(m)
}
func (m *MarketPositions) XXX_DiscardUnknown() {
	xxx_messageInfo_MarketPositions.DiscardUnknown(m)
}

var xxx_messageInfo_MarketPositions proto.InternalMessageInfo

func (m *MarketPositions) GetMarketId() string {
	if m != nil {
		return m.MarketId
	}
	return ""
}

func (m *MarketPositions) GetPositions() []*Position {
	if m != nil {
		return m.Positions
	}
	return nil
}

type AppState struct {
	Height               uint64   `protobuf:"varint,1,opt,name=height,proto3" json:"height,omitempty"`
	Block                string   `protobuf:"bytes,2,opt,name=block,proto3" json:"block,omitempty"`
	Time                 int64    `protobuf:"varint,3,opt,name=time,proto3" json:"time,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AppState) Reset()         { *m = AppState{} }
func (m *AppState) String() string { return proto.CompactTextString(m) }
func (*AppState) ProtoMessage()    {}
func (*AppState) Descriptor() ([]byte, []int) {
	return fileDescriptor_cee6f703c00de307, []int{44}
}

func (m *AppState) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AppState.Unmarshal(m, b)
}
func (m *AppState) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AppState.Marshal(b, m, deterministic)
}
func (m *AppState) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AppState.Merge(m, src)
}
func (m *AppState) XXX_Size() int {
	return xxx_messageInfo_AppState.Size(m)
}
func (m *AppState) XXX_DiscardUnknown() {
	xxx_messageInfo_AppState.DiscardUnknown(m)
}

var xxx_messageInfo_AppState proto.InternalMessageInfo

func (m *AppState) GetHeight() uint64 {
	if m != nil {
		return m.Height
	}
	return 0
}

func (m *AppState) GetBlock() string {
	if m != nil {
		return m.Block
	}
	return ""
}

func (m *AppState) GetTime() int64 {
	if m != nil {
		return m.Time
	}
	return 0
}

// EpochState details
type EpochState struct {
	// Sequence number that increases by one each epoch
	Seq uint64 `protobuf:"varint,1,opt,name=seq,proto3" json:"seq,omitempty"`
	// What time did this epoch start
	StartTime int64 `protobuf:"varint,3,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	// What time should this epoch end
	ExpireTime int64 `protobuf:"varint,4,opt,name=expire_time,json=expireTime,proto3" json:"expire_time,omitempty"`
	// Ready to start a new epoch
	ReadyToStartNewEpoch bool `protobuf:"varint,6,opt,name=ready_to_start_new_epoch,json=readyToStartNewEpoch,proto3" json:"ready_to_start_new_epoch,omitempty"`
	// Ready to end epoch
	ReadyToEndEpoch      bool     `protobuf:"varint,7,opt,name=ready_to_end_epoch,json=readyToEndEpoch,proto3" json:"ready_to_end_epoch,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EpochState) Reset()         { *m = EpochState{} }
func (m *EpochState) String() string { return proto.CompactTextString(m) }
func (*EpochState) ProtoMessage()    {}
func (*EpochState) Descriptor() ([]byte, []int) {
	return fileDescriptor_cee6f703c00de307, []int{45}
}

func (m *EpochState) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EpochState.Unmarshal(m, b)
}
func (m *EpochState) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EpochState.Marshal(b, m, deterministic)
}
func (m *EpochState) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EpochState.Merge(m, src)
}
func (m *EpochState) XXX_Size() int {
	return xxx_messageInfo_EpochState.Size(m)
}
func (m *EpochState) XXX_DiscardUnknown() {
	xxx_messageInfo_EpochState.DiscardUnknown(m)
}

var xxx_messageInfo_EpochState proto.InternalMessageInfo

func (m *EpochState) GetSeq() uint64 {
	if m != nil {
		return m.Seq
	}
	return 0
}

func (m *EpochState) GetStartTime() int64 {
	if m != nil {
		return m.StartTime
	}
	return 0
}

func (m *EpochState) GetExpireTime() int64 {
	if m != nil {
		return m.ExpireTime
	}
	return 0
}

func (m *EpochState) GetReadyToStartNewEpoch() bool {
	if m != nil {
		return m.ReadyToStartNewEpoch
	}
	return false
}

func (m *EpochState) GetReadyToEndEpoch() bool {
	if m != nil {
		return m.ReadyToEndEpoch
	}
	return false
}

// State of the ID generator used for creating order IDs
type ExecutionIDGenerator struct {
	// Which batch are we on
	Batches uint64 `protobuf:"varint,1,opt,name=batches,proto3" json:"batches,omitempty"`
	// How many orders in this batch
	Orders uint64 `protobuf:"varint,2,opt,name=orders,proto3" json:"orders,omitempty"`
	// How many proposals in this batch
	Proposals            uint64   `protobuf:"varint,3,opt,name=proposals,proto3" json:"proposals,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ExecutionIDGenerator) Reset()         { *m = ExecutionIDGenerator{} }
func (m *ExecutionIDGenerator) String() string { return proto.CompactTextString(m) }
func (*ExecutionIDGenerator) ProtoMessage()    {}
func (*ExecutionIDGenerator) Descriptor() ([]byte, []int) {
	return fileDescriptor_cee6f703c00de307, []int{46}
}

func (m *ExecutionIDGenerator) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExecutionIDGenerator.Unmarshal(m, b)
}
func (m *ExecutionIDGenerator) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExecutionIDGenerator.Marshal(b, m, deterministic)
}
func (m *ExecutionIDGenerator) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExecutionIDGenerator.Merge(m, src)
}
func (m *ExecutionIDGenerator) XXX_Size() int {
	return xxx_messageInfo_ExecutionIDGenerator.Size(m)
}
func (m *ExecutionIDGenerator) XXX_DiscardUnknown() {
	xxx_messageInfo_ExecutionIDGenerator.DiscardUnknown(m)
}

var xxx_messageInfo_ExecutionIDGenerator proto.InternalMessageInfo

func (m *ExecutionIDGenerator) GetBatches() uint64 {
	if m != nil {
		return m.Batches
	}
	return 0
}

func (m *ExecutionIDGenerator) GetOrders() uint64 {
	if m != nil {
		return m.Orders
	}
	return 0
}

func (m *ExecutionIDGenerator) GetProposals() uint64 {
	if m != nil {
		return m.Proposals
	}
	return 0
}

type RewardsPendingPayouts struct {
	ScheduledRewardsPayout []*ScheduledRewardsPayout `protobuf:"bytes,1,rep,name=scheduled_rewards_payout,json=scheduledRewardsPayout,proto3" json:"scheduled_rewards_payout,omitempty"`
	XXX_NoUnkeyedLiteral   struct{}                  `json:"-"`
	XXX_unrecognized       []byte                    `json:"-"`
	XXX_sizecache          int32                     `json:"-"`
}

func (m *RewardsPendingPayouts) Reset()         { *m = RewardsPendingPayouts{} }
func (m *RewardsPendingPayouts) String() string { return proto.CompactTextString(m) }
func (*RewardsPendingPayouts) ProtoMessage()    {}
func (*RewardsPendingPayouts) Descriptor() ([]byte, []int) {
	return fileDescriptor_cee6f703c00de307, []int{47}
}

func (m *RewardsPendingPayouts) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RewardsPendingPayouts.Unmarshal(m, b)
}
func (m *RewardsPendingPayouts) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RewardsPendingPayouts.Marshal(b, m, deterministic)
}
func (m *RewardsPendingPayouts) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RewardsPendingPayouts.Merge(m, src)
}
func (m *RewardsPendingPayouts) XXX_Size() int {
	return xxx_messageInfo_RewardsPendingPayouts.Size(m)
}
func (m *RewardsPendingPayouts) XXX_DiscardUnknown() {
	xxx_messageInfo_RewardsPendingPayouts.DiscardUnknown(m)
}

var xxx_messageInfo_RewardsPendingPayouts proto.InternalMessageInfo

func (m *RewardsPendingPayouts) GetScheduledRewardsPayout() []*ScheduledRewardsPayout {
	if m != nil {
		return m.ScheduledRewardsPayout
	}
	return nil
}

type ScheduledRewardsPayout struct {
	PayoutTime           int64            `protobuf:"varint,1,opt,name=payout_time,json=payoutTime,proto3" json:"payout_time,omitempty"`
	RewardsPayout        []*RewardsPayout `protobuf:"bytes,2,rep,name=rewards_payout,json=rewardsPayout,proto3" json:"rewards_payout,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *ScheduledRewardsPayout) Reset()         { *m = ScheduledRewardsPayout{} }
func (m *ScheduledRewardsPayout) String() string { return proto.CompactTextString(m) }
func (*ScheduledRewardsPayout) ProtoMessage()    {}
func (*ScheduledRewardsPayout) Descriptor() ([]byte, []int) {
	return fileDescriptor_cee6f703c00de307, []int{48}
}

func (m *ScheduledRewardsPayout) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ScheduledRewardsPayout.Unmarshal(m, b)
}
func (m *ScheduledRewardsPayout) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ScheduledRewardsPayout.Marshal(b, m, deterministic)
}
func (m *ScheduledRewardsPayout) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ScheduledRewardsPayout.Merge(m, src)
}
func (m *ScheduledRewardsPayout) XXX_Size() int {
	return xxx_messageInfo_ScheduledRewardsPayout.Size(m)
}
func (m *ScheduledRewardsPayout) XXX_DiscardUnknown() {
	xxx_messageInfo_ScheduledRewardsPayout.DiscardUnknown(m)
}

var xxx_messageInfo_ScheduledRewardsPayout proto.InternalMessageInfo

func (m *ScheduledRewardsPayout) GetPayoutTime() int64 {
	if m != nil {
		return m.PayoutTime
	}
	return 0
}

func (m *ScheduledRewardsPayout) GetRewardsPayout() []*RewardsPayout {
	if m != nil {
		return m.RewardsPayout
	}
	return nil
}

type RewardsPayout struct {
	FromAccount          string                `protobuf:"bytes,1,opt,name=from_account,json=fromAccount,proto3" json:"from_account,omitempty"`
	Asset                string                `protobuf:"bytes,2,opt,name=asset,proto3" json:"asset,omitempty"`
	RewardPartyAmount    []*RewardsPartyAmount `protobuf:"bytes,3,rep,name=reward_party_amount,json=rewardPartyAmount,proto3" json:"reward_party_amount,omitempty"`
	TotalReward          string                `protobuf:"bytes,4,opt,name=total_reward,json=totalReward,proto3" json:"total_reward,omitempty"`
	EpochSeq             string                `protobuf:"bytes,5,opt,name=epoch_seq,json=epochSeq,proto3" json:"epoch_seq,omitempty"`
	Timestamp            int64                 `protobuf:"varint,6,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *RewardsPayout) Reset()         { *m = RewardsPayout{} }
func (m *RewardsPayout) String() string { return proto.CompactTextString(m) }
func (*RewardsPayout) ProtoMessage()    {}
func (*RewardsPayout) Descriptor() ([]byte, []int) {
	return fileDescriptor_cee6f703c00de307, []int{49}
}

func (m *RewardsPayout) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RewardsPayout.Unmarshal(m, b)
}
func (m *RewardsPayout) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RewardsPayout.Marshal(b, m, deterministic)
}
func (m *RewardsPayout) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RewardsPayout.Merge(m, src)
}
func (m *RewardsPayout) XXX_Size() int {
	return xxx_messageInfo_RewardsPayout.Size(m)
}
func (m *RewardsPayout) XXX_DiscardUnknown() {
	xxx_messageInfo_RewardsPayout.DiscardUnknown(m)
}

var xxx_messageInfo_RewardsPayout proto.InternalMessageInfo

func (m *RewardsPayout) GetFromAccount() string {
	if m != nil {
		return m.FromAccount
	}
	return ""
}

func (m *RewardsPayout) GetAsset() string {
	if m != nil {
		return m.Asset
	}
	return ""
}

func (m *RewardsPayout) GetRewardPartyAmount() []*RewardsPartyAmount {
	if m != nil {
		return m.RewardPartyAmount
	}
	return nil
}

func (m *RewardsPayout) GetTotalReward() string {
	if m != nil {
		return m.TotalReward
	}
	return ""
}

func (m *RewardsPayout) GetEpochSeq() string {
	if m != nil {
		return m.EpochSeq
	}
	return ""
}

func (m *RewardsPayout) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

type RewardsPartyAmount struct {
	Party                string   `protobuf:"bytes,1,opt,name=party,proto3" json:"party,omitempty"`
	Amount               string   `protobuf:"bytes,2,opt,name=amount,proto3" json:"amount,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RewardsPartyAmount) Reset()         { *m = RewardsPartyAmount{} }
func (m *RewardsPartyAmount) String() string { return proto.CompactTextString(m) }
func (*RewardsPartyAmount) ProtoMessage()    {}
func (*RewardsPartyAmount) Descriptor() ([]byte, []int) {
	return fileDescriptor_cee6f703c00de307, []int{50}
}

func (m *RewardsPartyAmount) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RewardsPartyAmount.Unmarshal(m, b)
}
func (m *RewardsPartyAmount) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RewardsPartyAmount.Marshal(b, m, deterministic)
}
func (m *RewardsPartyAmount) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RewardsPartyAmount.Merge(m, src)
}
func (m *RewardsPartyAmount) XXX_Size() int {
	return xxx_messageInfo_RewardsPartyAmount.Size(m)
}
func (m *RewardsPartyAmount) XXX_DiscardUnknown() {
	xxx_messageInfo_RewardsPartyAmount.DiscardUnknown(m)
}

var xxx_messageInfo_RewardsPartyAmount proto.InternalMessageInfo

func (m *RewardsPartyAmount) GetParty() string {
	if m != nil {
		return m.Party
	}
	return ""
}

func (m *RewardsPartyAmount) GetAmount() string {
	if m != nil {
		return m.Amount
	}
	return ""
}

// LimitState details
type LimitState struct {
	// Number of blocks into the boostrapping phase
	BlockCount uint32 `protobuf:"varint,1,opt,name=block_count,json=blockCount,proto3" json:"block_count,omitempty"`
	// whether the limit on market proposals has been lifted
	CanProposeMarket bool `protobuf:"varint,2,opt,name=can_propose_market,json=canProposeMarket,proto3" json:"can_propose_market,omitempty"`
	// whether the limit on asset proposals has been lifted
	CanProposeAsset bool `protobuf:"varint,3,opt,name=can_propose_asset,json=canProposeAsset,proto3" json:"can_propose_asset,omitempty"`
	// whether the genesis state is loaded
	GenesisLoaded bool `protobuf:"varint,4,opt,name=genesis_loaded,json=genesisLoaded,proto3" json:"genesis_loaded,omitempty"`
	// fields derived from the genesis state
	ProposeMarketEnabled     bool     `protobuf:"varint,5,opt,name=propose_market_enabled,json=proposeMarketEnabled,proto3" json:"propose_market_enabled,omitempty"`
	ProposeAssetEnabled      bool     `protobuf:"varint,6,opt,name=propose_asset_enabled,json=proposeAssetEnabled,proto3" json:"propose_asset_enabled,omitempty"`
	ProposeMarketEnabledFrom int64    `protobuf:"varint,7,opt,name=propose_market_enabled_from,json=proposeMarketEnabledFrom,proto3" json:"propose_market_enabled_from,omitempty"`
	ProposeAssetEnabledFrom  int64    `protobuf:"varint,8,opt,name=propose_asset_enabled_from,json=proposeAssetEnabledFrom,proto3" json:"propose_asset_enabled_from,omitempty"`
	XXX_NoUnkeyedLiteral     struct{} `json:"-"`
	XXX_unrecognized         []byte   `json:"-"`
	XXX_sizecache            int32    `json:"-"`
}

func (m *LimitState) Reset()         { *m = LimitState{} }
func (m *LimitState) String() string { return proto.CompactTextString(m) }
func (*LimitState) ProtoMessage()    {}
func (*LimitState) Descriptor() ([]byte, []int) {
	return fileDescriptor_cee6f703c00de307, []int{51}
}

func (m *LimitState) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LimitState.Unmarshal(m, b)
}
func (m *LimitState) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LimitState.Marshal(b, m, deterministic)
}
func (m *LimitState) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LimitState.Merge(m, src)
}
func (m *LimitState) XXX_Size() int {
	return xxx_messageInfo_LimitState.Size(m)
}
func (m *LimitState) XXX_DiscardUnknown() {
	xxx_messageInfo_LimitState.DiscardUnknown(m)
}

var xxx_messageInfo_LimitState proto.InternalMessageInfo

func (m *LimitState) GetBlockCount() uint32 {
	if m != nil {
		return m.BlockCount
	}
	return 0
}

func (m *LimitState) GetCanProposeMarket() bool {
	if m != nil {
		return m.CanProposeMarket
	}
	return false
}

func (m *LimitState) GetCanProposeAsset() bool {
	if m != nil {
		return m.CanProposeAsset
	}
	return false
}

func (m *LimitState) GetGenesisLoaded() bool {
	if m != nil {
		return m.GenesisLoaded
	}
	return false
}

func (m *LimitState) GetProposeMarketEnabled() bool {
	if m != nil {
		return m.ProposeMarketEnabled
	}
	return false
}

func (m *LimitState) GetProposeAssetEnabled() bool {
	if m != nil {
		return m.ProposeAssetEnabled
	}
	return false
}

func (m *LimitState) GetProposeMarketEnabledFrom() int64 {
	if m != nil {
		return m.ProposeMarketEnabledFrom
	}
	return 0
}

func (m *LimitState) GetProposeAssetEnabledFrom() int64 {
	if m != nil {
		return m.ProposeAssetEnabledFrom
	}
	return 0
}

type VoteSpamPolicy struct {
	PartyToVote             []*PartyProposalVoteCount `protobuf:"bytes,1,rep,name=party_to_vote,json=partyToVote,proto3" json:"party_to_vote,omitempty"`
	BannedParties           []*BannedParty            `protobuf:"bytes,2,rep,name=banned_parties,json=bannedParties,proto3" json:"banned_parties,omitempty"`
	TokenBalance            []*PartyTokenBalance      `protobuf:"bytes,3,rep,name=token_balance,json=tokenBalance,proto3" json:"token_balance,omitempty"`
	RecentBlocksRejectStats []*BlockRejectStats       `protobuf:"bytes,4,rep,name=recent_blocks_reject_stats,json=recentBlocksRejectStats,proto3" json:"recent_blocks_reject_stats,omitempty"`
	CurrentBlockIndex       uint64                    `protobuf:"varint,5,opt,name=current_block_index,json=currentBlockIndex,proto3" json:"current_block_index,omitempty"`
	LastIncreaseBlock       uint64                    `protobuf:"varint,6,opt,name=last_increase_block,json=lastIncreaseBlock,proto3" json:"last_increase_block,omitempty"`
	CurrentEpochSeq         uint64                    `protobuf:"varint,7,opt,name=current_epoch_seq,json=currentEpochSeq,proto3" json:"current_epoch_seq,omitempty"`
	MinVotingTokensFactor   string                    `protobuf:"bytes,8,opt,name=min_voting_tokens_factor,json=minVotingTokensFactor,proto3" json:"min_voting_tokens_factor,omitempty"`
	XXX_NoUnkeyedLiteral    struct{}                  `json:"-"`
	XXX_unrecognized        []byte                    `json:"-"`
	XXX_sizecache           int32                     `json:"-"`
}

func (m *VoteSpamPolicy) Reset()         { *m = VoteSpamPolicy{} }
func (m *VoteSpamPolicy) String() string { return proto.CompactTextString(m) }
func (*VoteSpamPolicy) ProtoMessage()    {}
func (*VoteSpamPolicy) Descriptor() ([]byte, []int) {
	return fileDescriptor_cee6f703c00de307, []int{52}
}

func (m *VoteSpamPolicy) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VoteSpamPolicy.Unmarshal(m, b)
}
func (m *VoteSpamPolicy) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VoteSpamPolicy.Marshal(b, m, deterministic)
}
func (m *VoteSpamPolicy) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VoteSpamPolicy.Merge(m, src)
}
func (m *VoteSpamPolicy) XXX_Size() int {
	return xxx_messageInfo_VoteSpamPolicy.Size(m)
}
func (m *VoteSpamPolicy) XXX_DiscardUnknown() {
	xxx_messageInfo_VoteSpamPolicy.DiscardUnknown(m)
}

var xxx_messageInfo_VoteSpamPolicy proto.InternalMessageInfo

func (m *VoteSpamPolicy) GetPartyToVote() []*PartyProposalVoteCount {
	if m != nil {
		return m.PartyToVote
	}
	return nil
}

func (m *VoteSpamPolicy) GetBannedParties() []*BannedParty {
	if m != nil {
		return m.BannedParties
	}
	return nil
}

func (m *VoteSpamPolicy) GetTokenBalance() []*PartyTokenBalance {
	if m != nil {
		return m.TokenBalance
	}
	return nil
}

func (m *VoteSpamPolicy) GetRecentBlocksRejectStats() []*BlockRejectStats {
	if m != nil {
		return m.RecentBlocksRejectStats
	}
	return nil
}

func (m *VoteSpamPolicy) GetCurrentBlockIndex() uint64 {
	if m != nil {
		return m.CurrentBlockIndex
	}
	return 0
}

func (m *VoteSpamPolicy) GetLastIncreaseBlock() uint64 {
	if m != nil {
		return m.LastIncreaseBlock
	}
	return 0
}

func (m *VoteSpamPolicy) GetCurrentEpochSeq() uint64 {
	if m != nil {
		return m.CurrentEpochSeq
	}
	return 0
}

func (m *VoteSpamPolicy) GetMinVotingTokensFactor() string {
	if m != nil {
		return m.MinVotingTokensFactor
	}
	return ""
}

type PartyProposalVoteCount struct {
	Party                string   `protobuf:"bytes,1,opt,name=party,proto3" json:"party,omitempty"`
	Proposal             string   `protobuf:"bytes,2,opt,name=proposal,proto3" json:"proposal,omitempty"`
	Count                uint64   `protobuf:"varint,3,opt,name=count,proto3" json:"count,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PartyProposalVoteCount) Reset()         { *m = PartyProposalVoteCount{} }
func (m *PartyProposalVoteCount) String() string { return proto.CompactTextString(m) }
func (*PartyProposalVoteCount) ProtoMessage()    {}
func (*PartyProposalVoteCount) Descriptor() ([]byte, []int) {
	return fileDescriptor_cee6f703c00de307, []int{53}
}

func (m *PartyProposalVoteCount) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PartyProposalVoteCount.Unmarshal(m, b)
}
func (m *PartyProposalVoteCount) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PartyProposalVoteCount.Marshal(b, m, deterministic)
}
func (m *PartyProposalVoteCount) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PartyProposalVoteCount.Merge(m, src)
}
func (m *PartyProposalVoteCount) XXX_Size() int {
	return xxx_messageInfo_PartyProposalVoteCount.Size(m)
}
func (m *PartyProposalVoteCount) XXX_DiscardUnknown() {
	xxx_messageInfo_PartyProposalVoteCount.DiscardUnknown(m)
}

var xxx_messageInfo_PartyProposalVoteCount proto.InternalMessageInfo

func (m *PartyProposalVoteCount) GetParty() string {
	if m != nil {
		return m.Party
	}
	return ""
}

func (m *PartyProposalVoteCount) GetProposal() string {
	if m != nil {
		return m.Proposal
	}
	return ""
}

func (m *PartyProposalVoteCount) GetCount() uint64 {
	if m != nil {
		return m.Count
	}
	return 0
}

type BannedParty struct {
	Party                string   `protobuf:"bytes,1,opt,name=party,proto3" json:"party,omitempty"`
	UntilEpoch           uint64   `protobuf:"varint,2,opt,name=until_epoch,json=untilEpoch,proto3" json:"until_epoch,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BannedParty) Reset()         { *m = BannedParty{} }
func (m *BannedParty) String() string { return proto.CompactTextString(m) }
func (*BannedParty) ProtoMessage()    {}
func (*BannedParty) Descriptor() ([]byte, []int) {
	return fileDescriptor_cee6f703c00de307, []int{54}
}

func (m *BannedParty) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BannedParty.Unmarshal(m, b)
}
func (m *BannedParty) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BannedParty.Marshal(b, m, deterministic)
}
func (m *BannedParty) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BannedParty.Merge(m, src)
}
func (m *BannedParty) XXX_Size() int {
	return xxx_messageInfo_BannedParty.Size(m)
}
func (m *BannedParty) XXX_DiscardUnknown() {
	xxx_messageInfo_BannedParty.DiscardUnknown(m)
}

var xxx_messageInfo_BannedParty proto.InternalMessageInfo

func (m *BannedParty) GetParty() string {
	if m != nil {
		return m.Party
	}
	return ""
}

func (m *BannedParty) GetUntilEpoch() uint64 {
	if m != nil {
		return m.UntilEpoch
	}
	return 0
}

type PartyTokenBalance struct {
	Party                string   `protobuf:"bytes,1,opt,name=party,proto3" json:"party,omitempty"`
	Balance              string   `protobuf:"bytes,2,opt,name=balance,proto3" json:"balance,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PartyTokenBalance) Reset()         { *m = PartyTokenBalance{} }
func (m *PartyTokenBalance) String() string { return proto.CompactTextString(m) }
func (*PartyTokenBalance) ProtoMessage()    {}
func (*PartyTokenBalance) Descriptor() ([]byte, []int) {
	return fileDescriptor_cee6f703c00de307, []int{55}
}

func (m *PartyTokenBalance) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PartyTokenBalance.Unmarshal(m, b)
}
func (m *PartyTokenBalance) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PartyTokenBalance.Marshal(b, m, deterministic)
}
func (m *PartyTokenBalance) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PartyTokenBalance.Merge(m, src)
}
func (m *PartyTokenBalance) XXX_Size() int {
	return xxx_messageInfo_PartyTokenBalance.Size(m)
}
func (m *PartyTokenBalance) XXX_DiscardUnknown() {
	xxx_messageInfo_PartyTokenBalance.DiscardUnknown(m)
}

var xxx_messageInfo_PartyTokenBalance proto.InternalMessageInfo

func (m *PartyTokenBalance) GetParty() string {
	if m != nil {
		return m.Party
	}
	return ""
}

func (m *PartyTokenBalance) GetBalance() string {
	if m != nil {
		return m.Balance
	}
	return ""
}

type BlockRejectStats struct {
	Rejected             uint64   `protobuf:"varint,1,opt,name=rejected,proto3" json:"rejected,omitempty"`
	Total                uint64   `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BlockRejectStats) Reset()         { *m = BlockRejectStats{} }
func (m *BlockRejectStats) String() string { return proto.CompactTextString(m) }
func (*BlockRejectStats) ProtoMessage()    {}
func (*BlockRejectStats) Descriptor() ([]byte, []int) {
	return fileDescriptor_cee6f703c00de307, []int{56}
}

func (m *BlockRejectStats) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BlockRejectStats.Unmarshal(m, b)
}
func (m *BlockRejectStats) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BlockRejectStats.Marshal(b, m, deterministic)
}
func (m *BlockRejectStats) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BlockRejectStats.Merge(m, src)
}
func (m *BlockRejectStats) XXX_Size() int {
	return xxx_messageInfo_BlockRejectStats.Size(m)
}
func (m *BlockRejectStats) XXX_DiscardUnknown() {
	xxx_messageInfo_BlockRejectStats.DiscardUnknown(m)
}

var xxx_messageInfo_BlockRejectStats proto.InternalMessageInfo

func (m *BlockRejectStats) GetRejected() uint64 {
	if m != nil {
		return m.Rejected
	}
	return 0
}

func (m *BlockRejectStats) GetTotal() uint64 {
	if m != nil {
		return m.Total
	}
	return 0
}

type SpamPartyTransactionCount struct {
	Party                string   `protobuf:"bytes,1,opt,name=party,proto3" json:"party,omitempty"`
	Count                uint64   `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SpamPartyTransactionCount) Reset()         { *m = SpamPartyTransactionCount{} }
func (m *SpamPartyTransactionCount) String() string { return proto.CompactTextString(m) }
func (*SpamPartyTransactionCount) ProtoMessage()    {}
func (*SpamPartyTransactionCount) Descriptor() ([]byte, []int) {
	return fileDescriptor_cee6f703c00de307, []int{57}
}

func (m *SpamPartyTransactionCount) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SpamPartyTransactionCount.Unmarshal(m, b)
}
func (m *SpamPartyTransactionCount) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SpamPartyTransactionCount.Marshal(b, m, deterministic)
}
func (m *SpamPartyTransactionCount) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SpamPartyTransactionCount.Merge(m, src)
}
func (m *SpamPartyTransactionCount) XXX_Size() int {
	return xxx_messageInfo_SpamPartyTransactionCount.Size(m)
}
func (m *SpamPartyTransactionCount) XXX_DiscardUnknown() {
	xxx_messageInfo_SpamPartyTransactionCount.DiscardUnknown(m)
}

var xxx_messageInfo_SpamPartyTransactionCount proto.InternalMessageInfo

func (m *SpamPartyTransactionCount) GetParty() string {
	if m != nil {
		return m.Party
	}
	return ""
}

func (m *SpamPartyTransactionCount) GetCount() uint64 {
	if m != nil {
		return m.Count
	}
	return 0
}

type SimpleSpamPolicy struct {
	PolicyName           string                       `protobuf:"bytes,1,opt,name=policy_name,json=policyName,proto3" json:"policy_name,omitempty"`
	PartyToCount         []*SpamPartyTransactionCount `protobuf:"bytes,2,rep,name=party_to_count,json=partyToCount,proto3" json:"party_to_count,omitempty"`
	BannedParties        []*BannedParty               `protobuf:"bytes,3,rep,name=banned_parties,json=bannedParties,proto3" json:"banned_parties,omitempty"`
	TokenBalance         []*PartyTokenBalance         `protobuf:"bytes,4,rep,name=token_balance,json=tokenBalance,proto3" json:"token_balance,omitempty"`
	CurrentEpochSeq      uint64                       `protobuf:"varint,5,opt,name=current_epoch_seq,json=currentEpochSeq,proto3" json:"current_epoch_seq,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                     `json:"-"`
	XXX_unrecognized     []byte                       `json:"-"`
	XXX_sizecache        int32                        `json:"-"`
}

func (m *SimpleSpamPolicy) Reset()         { *m = SimpleSpamPolicy{} }
func (m *SimpleSpamPolicy) String() string { return proto.CompactTextString(m) }
func (*SimpleSpamPolicy) ProtoMessage()    {}
func (*SimpleSpamPolicy) Descriptor() ([]byte, []int) {
	return fileDescriptor_cee6f703c00de307, []int{58}
}

func (m *SimpleSpamPolicy) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SimpleSpamPolicy.Unmarshal(m, b)
}
func (m *SimpleSpamPolicy) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SimpleSpamPolicy.Marshal(b, m, deterministic)
}
func (m *SimpleSpamPolicy) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SimpleSpamPolicy.Merge(m, src)
}
func (m *SimpleSpamPolicy) XXX_Size() int {
	return xxx_messageInfo_SimpleSpamPolicy.Size(m)
}
func (m *SimpleSpamPolicy) XXX_DiscardUnknown() {
	xxx_messageInfo_SimpleSpamPolicy.DiscardUnknown(m)
}

var xxx_messageInfo_SimpleSpamPolicy proto.InternalMessageInfo

func (m *SimpleSpamPolicy) GetPolicyName() string {
	if m != nil {
		return m.PolicyName
	}
	return ""
}

func (m *SimpleSpamPolicy) GetPartyToCount() []*SpamPartyTransactionCount {
	if m != nil {
		return m.PartyToCount
	}
	return nil
}

func (m *SimpleSpamPolicy) GetBannedParties() []*BannedParty {
	if m != nil {
		return m.BannedParties
	}
	return nil
}

func (m *SimpleSpamPolicy) GetTokenBalance() []*PartyTokenBalance {
	if m != nil {
		return m.TokenBalance
	}
	return nil
}

func (m *SimpleSpamPolicy) GetCurrentEpochSeq() uint64 {
	if m != nil {
		return m.CurrentEpochSeq
	}
	return 0
}

type NotarySigs struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Kind                 int32    `protobuf:"varint,2,opt,name=kind,proto3" json:"kind,omitempty"`
	Node                 string   `protobuf:"bytes,3,opt,name=node,proto3" json:"node,omitempty"`
	Sig                  string   `protobuf:"bytes,4,opt,name=sig,proto3" json:"sig,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NotarySigs) Reset()         { *m = NotarySigs{} }
func (m *NotarySigs) String() string { return proto.CompactTextString(m) }
func (*NotarySigs) ProtoMessage()    {}
func (*NotarySigs) Descriptor() ([]byte, []int) {
	return fileDescriptor_cee6f703c00de307, []int{59}
}

func (m *NotarySigs) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NotarySigs.Unmarshal(m, b)
}
func (m *NotarySigs) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NotarySigs.Marshal(b, m, deterministic)
}
func (m *NotarySigs) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NotarySigs.Merge(m, src)
}
func (m *NotarySigs) XXX_Size() int {
	return xxx_messageInfo_NotarySigs.Size(m)
}
func (m *NotarySigs) XXX_DiscardUnknown() {
	xxx_messageInfo_NotarySigs.DiscardUnknown(m)
}

var xxx_messageInfo_NotarySigs proto.InternalMessageInfo

func (m *NotarySigs) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *NotarySigs) GetKind() int32 {
	if m != nil {
		return m.Kind
	}
	return 0
}

func (m *NotarySigs) GetNode() string {
	if m != nil {
		return m.Node
	}
	return ""
}

func (m *NotarySigs) GetSig() string {
	if m != nil {
		return m.Sig
	}
	return ""
}

type Notary struct {
	NotarySigs           []*NotarySigs `protobuf:"bytes,1,rep,name=notary_sigs,json=notarySigs,proto3" json:"notary_sigs,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *Notary) Reset()         { *m = Notary{} }
func (m *Notary) String() string { return proto.CompactTextString(m) }
func (*Notary) ProtoMessage()    {}
func (*Notary) Descriptor() ([]byte, []int) {
	return fileDescriptor_cee6f703c00de307, []int{60}
}

func (m *Notary) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Notary.Unmarshal(m, b)
}
func (m *Notary) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Notary.Marshal(b, m, deterministic)
}
func (m *Notary) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Notary.Merge(m, src)
}
func (m *Notary) XXX_Size() int {
	return xxx_messageInfo_Notary.Size(m)
}
func (m *Notary) XXX_DiscardUnknown() {
	xxx_messageInfo_Notary.DiscardUnknown(m)
}

var xxx_messageInfo_Notary proto.InternalMessageInfo

func (m *Notary) GetNotarySigs() []*NotarySigs {
	if m != nil {
		return m.NotarySigs
	}
	return nil
}

type ReplayProtection struct {
	RecentBlocksTransactions []*RecentBlocksTransactions `protobuf:"bytes,1,rep,name=recent_blocks_transactions,json=recentBlocksTransactions,proto3" json:"recent_blocks_transactions,omitempty"`
	XXX_NoUnkeyedLiteral     struct{}                    `json:"-"`
	XXX_unrecognized         []byte                      `json:"-"`
	XXX_sizecache            int32                       `json:"-"`
}

func (m *ReplayProtection) Reset()         { *m = ReplayProtection{} }
func (m *ReplayProtection) String() string { return proto.CompactTextString(m) }
func (*ReplayProtection) ProtoMessage()    {}
func (*ReplayProtection) Descriptor() ([]byte, []int) {
	return fileDescriptor_cee6f703c00de307, []int{61}
}

func (m *ReplayProtection) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReplayProtection.Unmarshal(m, b)
}
func (m *ReplayProtection) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReplayProtection.Marshal(b, m, deterministic)
}
func (m *ReplayProtection) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReplayProtection.Merge(m, src)
}
func (m *ReplayProtection) XXX_Size() int {
	return xxx_messageInfo_ReplayProtection.Size(m)
}
func (m *ReplayProtection) XXX_DiscardUnknown() {
	xxx_messageInfo_ReplayProtection.DiscardUnknown(m)
}

var xxx_messageInfo_ReplayProtection proto.InternalMessageInfo

func (m *ReplayProtection) GetRecentBlocksTransactions() []*RecentBlocksTransactions {
	if m != nil {
		return m.RecentBlocksTransactions
	}
	return nil
}

type RecentBlocksTransactions struct {
	Tx                   []string `protobuf:"bytes,1,rep,name=tx,proto3" json:"tx,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RecentBlocksTransactions) Reset()         { *m = RecentBlocksTransactions{} }
func (m *RecentBlocksTransactions) String() string { return proto.CompactTextString(m) }
func (*RecentBlocksTransactions) ProtoMessage()    {}
func (*RecentBlocksTransactions) Descriptor() ([]byte, []int) {
	return fileDescriptor_cee6f703c00de307, []int{62}
}

func (m *RecentBlocksTransactions) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RecentBlocksTransactions.Unmarshal(m, b)
}
func (m *RecentBlocksTransactions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RecentBlocksTransactions.Marshal(b, m, deterministic)
}
func (m *RecentBlocksTransactions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RecentBlocksTransactions.Merge(m, src)
}
func (m *RecentBlocksTransactions) XXX_Size() int {
	return xxx_messageInfo_RecentBlocksTransactions.Size(m)
}
func (m *RecentBlocksTransactions) XXX_DiscardUnknown() {
	xxx_messageInfo_RecentBlocksTransactions.DiscardUnknown(m)
}

var xxx_messageInfo_RecentBlocksTransactions proto.InternalMessageInfo

func (m *RecentBlocksTransactions) GetTx() []string {
	if m != nil {
		return m.Tx
	}
	return nil
}

type FutureState struct {
	MarketId             string   `protobuf:"bytes,1,opt,name=market_id,json=marketId,proto3" json:"market_id,omitempty"`
	SettlementPrice      string   `protobuf:"bytes,2,opt,name=settlement_price,json=settlementPrice,proto3" json:"settlement_price,omitempty"`
	TradingTerminated    bool     `protobuf:"varint,3,opt,name=trading_terminated,json=tradingTerminated,proto3" json:"trading_terminated,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FutureState) Reset()         { *m = FutureState{} }
func (m *FutureState) String() string { return proto.CompactTextString(m) }
func (*FutureState) ProtoMessage()    {}
func (*FutureState) Descriptor() ([]byte, []int) {
	return fileDescriptor_cee6f703c00de307, []int{63}
}

func (m *FutureState) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FutureState.Unmarshal(m, b)
}
func (m *FutureState) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FutureState.Marshal(b, m, deterministic)
}
func (m *FutureState) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FutureState.Merge(m, src)
}
func (m *FutureState) XXX_Size() int {
	return xxx_messageInfo_FutureState.Size(m)
}
func (m *FutureState) XXX_DiscardUnknown() {
	xxx_messageInfo_FutureState.DiscardUnknown(m)
}

var xxx_messageInfo_FutureState proto.InternalMessageInfo

func (m *FutureState) GetMarketId() string {
	if m != nil {
		return m.MarketId
	}
	return ""
}

func (m *FutureState) GetSettlementPrice() string {
	if m != nil {
		return m.SettlementPrice
	}
	return ""
}

func (m *FutureState) GetTradingTerminated() bool {
	if m != nil {
		return m.TradingTerminated
	}
	return false
}

func init() {
	proto.RegisterEnum("vega.snapshot.v1.Format", Format_name, Format_value)
	proto.RegisterType((*Snapshot)(nil), "vega.snapshot.v1.Snapshot")
	proto.RegisterType((*NodeHash)(nil), "vega.snapshot.v1.NodeHash")
	proto.RegisterType((*Metadata)(nil), "vega.snapshot.v1.Metadata")
	proto.RegisterType((*Chunk)(nil), "vega.snapshot.v1.Chunk")
	proto.RegisterType((*Payload)(nil), "vega.snapshot.v1.Payload")
	proto.RegisterType((*EventForwarder)(nil), "vega.snapshot.v1.EventForwarder")
	proto.RegisterType((*CollateralAccounts)(nil), "vega.snapshot.v1.CollateralAccounts")
	proto.RegisterType((*CollateralAssets)(nil), "vega.snapshot.v1.CollateralAssets")
	proto.RegisterType((*ActiveAssets)(nil), "vega.snapshot.v1.ActiveAssets")
	proto.RegisterType((*PendingAssets)(nil), "vega.snapshot.v1.PendingAssets")
	proto.RegisterType((*Withdrawal)(nil), "vega.snapshot.v1.Withdrawal")
	proto.RegisterType((*Deposit)(nil), "vega.snapshot.v1.Deposit")
	proto.RegisterType((*TxRef)(nil), "vega.snapshot.v1.TxRef")
	proto.RegisterType((*AssetAction)(nil), "vega.snapshot.v1.AssetAction")
	proto.RegisterType((*BankingWithdrawals)(nil), "vega.snapshot.v1.BankingWithdrawals")
	proto.RegisterType((*BankingDeposits)(nil), "vega.snapshot.v1.BankingDeposits")
	proto.RegisterType((*BankingSeen)(nil), "vega.snapshot.v1.BankingSeen")
	proto.RegisterType((*BankingAssetActions)(nil), "vega.snapshot.v1.BankingAssetActions")
	proto.RegisterType((*Checkpoint)(nil), "vega.snapshot.v1.Checkpoint")
	proto.RegisterType((*DelegationActive)(nil), "vega.snapshot.v1.DelegationActive")
	proto.RegisterType((*DelegationPending)(nil), "vega.snapshot.v1.DelegationPending")
	proto.RegisterType((*DelegationAuto)(nil), "vega.snapshot.v1.DelegationAuto")
	proto.RegisterType((*PendingProposal)(nil), "vega.snapshot.v1.PendingProposal")
	proto.RegisterType((*GovernanceEnacted)(nil), "vega.snapshot.v1.GovernanceEnacted")
	proto.RegisterType((*GovernanceActive)(nil), "vega.snapshot.v1.GovernanceActive")
	proto.RegisterType((*GovernanceNode)(nil), "vega.snapshot.v1.GovernanceNode")
	proto.RegisterType((*StakingAccount)(nil), "vega.snapshot.v1.StakingAccount")
	proto.RegisterType((*StakingAccounts)(nil), "vega.snapshot.v1.StakingAccounts")
	proto.RegisterType((*MatchingBook)(nil), "vega.snapshot.v1.MatchingBook")
	proto.RegisterType((*NetParams)(nil), "vega.snapshot.v1.NetParams")
	proto.RegisterType((*DecimalMap)(nil), "vega.snapshot.v1.DecimalMap")
	proto.RegisterType((*TimePrice)(nil), "vega.snapshot.v1.TimePrice")
	proto.RegisterType((*PriceVolume)(nil), "vega.snapshot.v1.PriceVolume")
	proto.RegisterType((*PriceRange)(nil), "vega.snapshot.v1.PriceRange")
	proto.RegisterType((*PriceBound)(nil), "vega.snapshot.v1.PriceBound")
	proto.RegisterType((*PriceRangeCache)(nil), "vega.snapshot.v1.PriceRangeCache")
	proto.RegisterType((*PriceMonitor)(nil), "vega.snapshot.v1.PriceMonitor")
	proto.RegisterType((*AuctionState)(nil), "vega.snapshot.v1.AuctionState")
	proto.RegisterType((*EquityShareLP)(nil), "vega.snapshot.v1.EquityShareLP")
	proto.RegisterType((*EquityShare)(nil), "vega.snapshot.v1.EquityShare")
	proto.RegisterType((*Market)(nil), "vega.snapshot.v1.Market")
	proto.RegisterType((*ExecutionMarkets)(nil), "vega.snapshot.v1.ExecutionMarkets")
	proto.RegisterType((*Position)(nil), "vega.snapshot.v1.Position")
	proto.RegisterType((*MarketPositions)(nil), "vega.snapshot.v1.MarketPositions")
	proto.RegisterType((*AppState)(nil), "vega.snapshot.v1.AppState")
	proto.RegisterType((*EpochState)(nil), "vega.snapshot.v1.EpochState")
	proto.RegisterType((*ExecutionIDGenerator)(nil), "vega.snapshot.v1.ExecutionIDGenerator")
	proto.RegisterType((*RewardsPendingPayouts)(nil), "vega.snapshot.v1.RewardsPendingPayouts")
	proto.RegisterType((*ScheduledRewardsPayout)(nil), "vega.snapshot.v1.ScheduledRewardsPayout")
	proto.RegisterType((*RewardsPayout)(nil), "vega.snapshot.v1.RewardsPayout")
	proto.RegisterType((*RewardsPartyAmount)(nil), "vega.snapshot.v1.RewardsPartyAmount")
	proto.RegisterType((*LimitState)(nil), "vega.snapshot.v1.LimitState")
	proto.RegisterType((*VoteSpamPolicy)(nil), "vega.snapshot.v1.VoteSpamPolicy")
	proto.RegisterType((*PartyProposalVoteCount)(nil), "vega.snapshot.v1.PartyProposalVoteCount")
	proto.RegisterType((*BannedParty)(nil), "vega.snapshot.v1.BannedParty")
	proto.RegisterType((*PartyTokenBalance)(nil), "vega.snapshot.v1.PartyTokenBalance")
	proto.RegisterType((*BlockRejectStats)(nil), "vega.snapshot.v1.BlockRejectStats")
	proto.RegisterType((*SpamPartyTransactionCount)(nil), "vega.snapshot.v1.SpamPartyTransactionCount")
	proto.RegisterType((*SimpleSpamPolicy)(nil), "vega.snapshot.v1.SimpleSpamPolicy")
	proto.RegisterType((*NotarySigs)(nil), "vega.snapshot.v1.NotarySigs")
	proto.RegisterType((*Notary)(nil), "vega.snapshot.v1.Notary")
	proto.RegisterType((*ReplayProtection)(nil), "vega.snapshot.v1.ReplayProtection")
	proto.RegisterType((*RecentBlocksTransactions)(nil), "vega.snapshot.v1.RecentBlocksTransactions")
	proto.RegisterType((*FutureState)(nil), "vega.snapshot.v1.FutureState")
}

func init() { proto.RegisterFile("vega/snapshot/v1/snapshot.proto", fileDescriptor_cee6f703c00de307) }

var fileDescriptor_cee6f703c00de307 = []byte{
	// 4071 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x5a, 0xdd, 0x73, 0x1b, 0x47,
	0x72, 0x27, 0x00, 0x7e, 0x00, 0x0d, 0x80, 0x00, 0x47, 0x94, 0xb4, 0xa6, 0x2c, 0x8b, 0x5e, 0xdb,
	0xb1, 0x2c, 0xfb, 0x68, 0x99, 0xd2, 0x9d, 0x93, 0x28, 0xb6, 0xc3, 0x4f, 0x53, 0x39, 0x51, 0xa2,
	0x87, 0x8c, 0x5c, 0x95, 0x54, 0xb2, 0x37, 0xc0, 0x0e, 0xc1, 0x0d, 0x17, 0xbb, 0xeb, 0xdd, 0x05,
	0x48, 0x5e, 0x92, 0x87, 0x54, 0x5d, 0xe5, 0x2f, 0xb8, 0xca, 0x43, 0x2a, 0xf9, 0x4b, 0xf2, 0x96,
	0x54, 0xe5, 0x21, 0x95, 0xfc, 0x45, 0xc9, 0x43, 0xaa, 0x7b, 0x66, 0x76, 0x17, 0x1f, 0xcb, 0xf3,
	0x5d, 0xdd, 0x0b, 0x6a, 0xa7, 0xe7, 0xd7, 0x3d, 0x3d, 0x33, 0x3d, 0xd3, 0x1f, 0x03, 0x78, 0x34,
	0x96, 0x03, 0xf1, 0x79, 0x12, 0x88, 0x28, 0xb9, 0x08, 0xd3, 0xcf, 0xc7, 0x5f, 0x64, 0xdf, 0x5b,
	0x51, 0x1c, 0xa6, 0x21, 0xeb, 0x22, 0x60, 0x2b, 0x23, 0x8e, 0xbf, 0xd8, 0xe8, 0x10, 0x0b, 0x91,
	0x09, 0xb2, 0xc1, 0x88, 0x30, 0x14, 0xf1, 0xa5, 0x4c, 0x13, 0x4d, 0x5b, 0x23, 0x9a, 0x48, 0x92,
	0x9c, 0x74, 0x9f, 0x48, 0xfd, 0x0b, 0xe1, 0x05, 0x8e, 0x1c, 0xcb, 0x20, 0xeb, 0xb8, 0x4b, 0x1d,
	0x83, 0x70, 0x2c, 0xe3, 0x40, 0x04, 0x7d, 0xa9, 0xc9, 0x0f, 0x88, 0xac, 0x90, 0xa8, 0xd8, 0x04,
	0xcf, 0x27, 0x4a, 0x58, 0x38, 0x1c, 0x8a, 0xc0, 0xa5, 0xee, 0xb1, 0xf0, 0x3d, 0x57, 0xa4, 0x61,
	0xec, 0x18, 0xaa, 0x82, 0xda, 0xff, 0x52, 0x81, 0xfa, 0xa9, 0xd6, 0x9f, 0xdd, 0x83, 0xe5, 0x0b,
	0xe9, 0x0d, 0x2e, 0x52, 0xab, 0xb2, 0x59, 0x79, 0xbc, 0xc8, 0x75, 0x8b, 0x3d, 0x85, 0xe5, 0xf3,
	0x30, 0x1e, 0x8a, 0xd4, 0xaa, 0x6e, 0x56, 0x1e, 0xaf, 0x6e, 0x5b, 0x5b, 0xd3, 0xf3, 0xde, 0x3a,
	0xa4, 0x7e, 0xae, 0x71, 0x28, 0xa9, 0x7f, 0x31, 0x0a, 0x2e, 0x13, 0xab, 0xb6, 0x59, 0x79, 0xdc,
	0xe6, 0xba, 0xc5, 0x18, 0x2c, 0x5e, 0x88, 0xe4, 0xc2, 0x5a, 0xdc, 0xac, 0x3c, 0x6e, 0x71, 0xfa,
	0x66, 0x1b, 0x50, 0x1f, 0xca, 0x54, 0xb8, 0x22, 0x15, 0xd6, 0x12, 0xd1, 0xb3, 0xb6, 0xed, 0x41,
	0xfd, 0x75, 0xe8, 0xca, 0x23, 0xc4, 0xbd, 0x03, 0xf5, 0xf3, 0x91, 0xef, 0x3b, 0x97, 0xf2, 0x86,
	0xf4, 0x6b, 0xf0, 0x15, 0x6c, 0xff, 0x5c, 0xde, 0xb0, 0x77, 0xa1, 0x11, 0x88, 0xa1, 0x4c, 0x22,
	0xd1, 0x97, 0xa4, 0x63, 0x83, 0xe7, 0x04, 0xd6, 0x85, 0x1a, 0xf2, 0xd4, 0x88, 0x8e, 0x9f, 0x13,
	0x6a, 0x34, 0x94, 0x1a, 0xf6, 0xaf, 0x2a, 0x50, 0x3f, 0xd6, 0xe3, 0x32, 0x0b, 0x56, 0xc6, 0x32,
	0x4e, 0xbc, 0x30, 0xa0, 0xa1, 0x6a, 0xdc, 0x34, 0xd9, 0xfb, 0xd0, 0xa2, 0xb9, 0x38, 0xc8, 0x24,
	0x13, 0xab, 0xba, 0x59, 0x7b, 0xdc, 0xe0, 0x4d, 0xa2, 0x1d, 0x11, 0x89, 0xbd, 0x80, 0x66, 0x10,
	0xba, 0xd2, 0x20, 0x6a, 0x9b, 0xb5, 0xc7, 0xcd, 0xed, 0x8d, 0xd9, 0x35, 0x33, 0x33, 0xe3, 0x10,
	0xe8, 0x2f, 0x99, 0xd8, 0x6f, 0x61, 0x69, 0x0f, 0x65, 0xb1, 0x9f, 0xc0, 0x22, 0x2d, 0x49, 0x85,
	0xd8, 0xdf, 0x99, 0x65, 0x3f, 0x11, 0x37, 0x7e, 0x28, 0x5c, 0x4e, 0x30, 0xb6, 0x0a, 0xd5, 0x20,
	0xa6, 0xb9, 0xd7, 0x78, 0x35, 0x88, 0xb1, 0x1d, 0x9e, 0xd3, 0x9c, 0x6b, 0xbc, 0x1a, 0x9e, 0xdb,
	0xff, 0xcb, 0x60, 0x45, 0x73, 0xb0, 0x03, 0x68, 0x8b, 0x7e, 0xea, 0x8d, 0xa5, 0xa3, 0x6c, 0x90,
	0xe6, 0xd8, 0xdc, 0x7e, 0x6f, 0x76, 0x8c, 0x1d, 0x82, 0xed, 0x10, 0xea, 0x68, 0x81, 0xb7, 0x44,
	0xa1, 0xcd, 0x8e, 0x60, 0x35, 0x92, 0x81, 0xeb, 0x05, 0x03, 0x23, 0xa7, 0x4a, 0x72, 0x1e, 0xcd,
	0xd1, 0x55, 0xe1, 0x32, 0x41, 0xed, 0xa8, 0x48, 0x60, 0xdf, 0xc3, 0x9d, 0x9e, 0x08, 0x2e, 0x51,
	0xd2, 0x95, 0x97, 0x5e, 0xb8, 0xb1, 0xb8, 0x12, 0xbe, 0xb2, 0x9d, 0xe6, 0xf6, 0x87, 0xb3, 0xe2,
	0x76, 0x15, 0xf8, 0xfb, 0x1c, 0x7b, 0xb4, 0xc0, 0x59, 0x6f, 0x86, 0xca, 0x5e, 0x43, 0xd7, 0x08,
	0x76, 0x65, 0x14, 0x26, 0x5e, 0x9a, 0xd0, 0xa6, 0x37, 0xb7, 0xdf, 0x2f, 0x95, 0xba, 0xaf, 0x81,
	0x47, 0x0b, 0xbc, 0xd3, 0x9b, 0x24, 0xb1, 0x5d, 0x68, 0x19, 0x79, 0x89, 0x94, 0x01, 0xd9, 0x6b,
	0x73, 0xfb, 0x61, 0xa9, 0xac, 0x53, 0x29, 0x83, 0xa3, 0x05, 0xde, 0xec, 0xe5, 0x4d, 0xf6, 0x97,
	0x70, 0xd7, 0xc8, 0xa0, 0x65, 0x73, 0x70, 0x51, 0xc3, 0x20, 0xb1, 0x96, 0x49, 0xd8, 0x47, 0xa5,
	0xc2, 0x68, 0xb1, 0x76, 0x14, 0xf8, 0x68, 0x81, 0x9b, 0x25, 0x2b, 0x92, 0xd9, 0xd7, 0x00, 0xfd,
	0x0b, 0xd9, 0xbf, 0x8c, 0x42, 0x2f, 0x48, 0xad, 0x15, 0x92, 0xf8, 0xee, 0xac, 0xc4, 0xbd, 0x0c,
	0x73, 0xb4, 0xc0, 0x0b, 0x1c, 0xb8, 0x13, 0xfd, 0xd0, 0xf7, 0x45, 0x2a, 0x63, 0xe1, 0x3b, 0xa2,
	0xdf, 0x0f, 0x47, 0x41, 0x9a, 0x58, 0xf5, 0xb2, 0x9d, 0xd8, 0xcb, 0xc0, 0x3b, 0x1a, 0x8b, 0x3b,
	0xd1, 0x9f, 0xa1, 0xb2, 0xef, 0x60, 0xad, 0x28, 0x58, 0xd9, 0x4b, 0x83, 0xc4, 0xda, 0xb7, 0x8a,
	0x35, 0x26, 0xd3, 0xed, 0x4f, 0xd1, 0x50, 0xa4, 0x2b, 0x7d, 0x39, 0x10, 0x38, 0x75, 0x47, 0x99,
	0xa6, 0x05, 0x65, 0x22, 0xf7, 0x33, 0xa8, 0x32, 0x6a, 0x14, 0xe9, 0x4e, 0xd1, 0xd8, 0x19, 0xb0,
	0x82, 0x48, 0x6d, 0xa4, 0x56, 0x93, 0x64, 0x7e, 0x70, 0x9b, 0x4c, 0x6d, 0xe0, 0x47, 0x0b, 0xbc,
	0xa0, 0x93, 0x26, 0xb2, 0x9f, 0x43, 0xa7, 0xa8, 0xe8, 0x28, 0x0d, 0xad, 0x16, 0x89, 0xdc, 0xbc,
	0x55, 0xcd, 0x51, 0x1a, 0x1e, 0x2d, 0xf0, 0x55, 0x77, 0x82, 0x82, 0xb3, 0xce, 0xbd, 0x81, 0x99,
	0x75, 0xbb, 0x6c, 0xd6, 0xdf, 0x66, 0xd0, 0x7c, 0xd6, 0x83, 0x29, 0x1a, 0xce, 0xba, 0x20, 0x52,
	0x06, 0xa2, 0x9f, 0x4a, 0xd7, 0x5a, 0x2d, 0x9b, 0x75, 0x2e, 0xf3, 0x40, 0x41, 0x71, 0xd6, 0x83,
	0x69, 0x22, 0x9e, 0xbd, 0x24, 0x15, 0xca, 0xce, 0x8d, 0x1d, 0x75, 0xca, 0xce, 0xde, 0xa9, 0x42,
	0x16, 0x8c, 0xa8, 0x93, 0x4c, 0x92, 0xf0, 0xd6, 0x1a, 0x8a, 0xb4, 0x7f, 0x81, 0x02, 0x7b, 0x61,
	0x78, 0x69, 0x75, 0xcb, 0x6e, 0xad, 0x63, 0x0d, 0xdb, 0x0d, 0xc3, 0x4b, 0xbc, 0xb5, 0x86, 0x85,
	0x36, 0x7b, 0x05, 0x2c, 0x90, 0xe9, 0x55, 0x18, 0x5f, 0x3a, 0x91, 0x88, 0xc5, 0x50, 0xa6, 0x32,
	0x4e, 0xac, 0x35, 0x92, 0xf5, 0x60, 0xce, 0x25, 0x2d, 0xd3, 0x13, 0x84, 0xa1, 0x4a, 0x6b, 0x9a,
	0xf1, 0x24, 0xe3, 0xc3, 0xdd, 0x90, 0xd7, 0xb2, 0x3f, 0xa2, 0x9d, 0xd5, 0x5e, 0xde, 0x62, 0x65,
	0xbb, 0x71, 0x60, 0xa0, 0xc7, 0x0a, 0x89, 0xbb, 0x21, 0xa7, 0x68, 0xb8, 0x6e, 0x4a, 0x90, 0x43,
	0x97, 0x0e, 0x5d, 0x0d, 0x77, 0xca, 0xd6, 0x4d, 0x31, 0x9d, 0x18, 0x20, 0xae, 0xdb, 0x70, 0x92,
	0xc4, 0xfe, 0x08, 0x1a, 0x22, 0x8a, 0x9c, 0x24, 0x15, 0xa9, 0xb4, 0xd6, 0x49, 0xd0, 0x1c, 0x67,
	0xb4, 0x13, 0x45, 0xa7, 0x88, 0x38, 0x5a, 0xe0, 0x75, 0xa1, 0xbf, 0xd9, 0x73, 0x58, 0x92, 0x51,
	0xd8, 0xbf, 0xb0, 0xee, 0x96, 0x5d, 0x24, 0x07, 0xd8, 0x6d, 0x18, 0x15, 0x98, 0xfd, 0x35, 0xdc,
	0xcb, 0xd7, 0xc4, 0x73, 0x9d, 0x81, 0x0c, 0x64, 0x8c, 0xc1, 0x87, 0x75, 0x8f, 0xc4, 0xfc, 0xc1,
	0x2d, 0x0b, 0xf3, 0x72, 0xff, 0x5b, 0x83, 0x3e, 0x5a, 0xe0, 0xeb, 0x99, 0x9c, 0x97, 0x6e, 0x46,
	0x67, 0x02, 0xee, 0xc7, 0xf2, 0x4a, 0xc4, 0x6e, 0x62, 0x4e, 0xa8, 0x13, 0x89, 0x9b, 0x70, 0x94,
	0x26, 0xd6, 0x7d, 0x1a, 0xe0, 0xe3, 0xd9, 0x01, 0xb8, 0x62, 0xd0, 0x27, 0xf2, 0x44, 0xc1, 0x8f,
	0x16, 0xf8, 0xdd, 0x78, 0x5e, 0x07, 0x9e, 0xd8, 0xc2, 0x89, 0x40, 0xf7, 0x6c, 0x59, 0x65, 0x27,
	0x36, 0x3f, 0x0e, 0xe4, 0xd0, 0x17, 0xf8, 0xea, 0x60, 0x82, 0xc2, 0xbe, 0x81, 0xa6, 0xef, 0x0d,
	0xbd, 0x54, 0x6f, 0xc1, 0x3b, 0x65, 0x6b, 0xf9, 0x0a, 0x41, 0x66, 0x2d, 0xc1, 0xcf, 0x5a, 0xec,
	0x15, 0x74, 0xc7, 0x61, 0x2a, 0x9d, 0x24, 0x12, 0x43, 0x27, 0x0a, 0x7d, 0xaf, 0x7f, 0x63, 0x6d,
	0x94, 0xa9, 0xf3, 0x36, 0x4c, 0xe5, 0x69, 0x24, 0x86, 0x27, 0x84, 0x43, 0x75, 0xc6, 0x13, 0x14,
	0xc6, 0x81, 0x25, 0xde, 0x30, 0xf2, 0x27, 0xe5, 0x3d, 0x28, 0xb3, 0xd9, 0x53, 0xc2, 0x4e, 0x48,
	0xec, 0x26, 0x53, 0x34, 0xb6, 0x0d, 0xcb, 0x41, 0x98, 0x8a, 0xf8, 0xc6, 0x7a, 0x97, 0xe4, 0x58,
	0xf3, 0xa2, 0x1d, 0xec, 0x3f, 0x5a, 0xe0, 0x1a, 0x89, 0x47, 0x27, 0x96, 0x91, 0x2f, 0x6e, 0x1c,
	0x0c, 0x45, 0x25, 0x39, 0x30, 0xeb, 0x61, 0x99, 0x1a, 0x9c, 0xa0, 0x27, 0x19, 0x12, 0xd5, 0x88,
	0xa7, 0x68, 0xe8, 0x9e, 0xcf, 0x47, 0xe9, 0x28, 0x96, 0x7a, 0xa9, 0xdf, 0x2b, 0x73, 0xcf, 0x87,
	0x84, 0x32, 0x6b, 0xdd, 0x3c, 0xcf, 0x9b, 0xb8, 0xf5, 0x14, 0x4c, 0x3b, 0xe7, 0x61, 0x8c, 0xa6,
	0x21, 0x63, 0xeb, 0x51, 0xd9, 0x5a, 0x1f, 0x20, 0xf0, 0xd0, 0xe0, 0x70, 0xad, 0xe5, 0x04, 0x65,
	0x77, 0x59, 0x05, 0x71, 0xf6, 0x77, 0xb0, 0x3a, 0x89, 0x65, 0xdf, 0x40, 0x4b, 0xf4, 0x2f, 0xa5,
	0xab, 0xa3, 0x7d, 0x1d, 0xe6, 0x69, 0xab, 0xc8, 0x82, 0x74, 0x72, 0xd5, 0xc2, 0x0b, 0x88, 0x99,
	0x37, 0x89, 0x83, 0xbe, 0x13, 0xfb, 0x1b, 0x60, 0xb3, 0xce, 0x97, 0x7d, 0x02, 0xf5, 0xec, 0xb2,
	0x55, 0x22, 0xdb, 0x4a, 0xa4, 0x46, 0xf0, 0xac, 0xdb, 0xfe, 0x12, 0xba, 0xd3, 0x6e, 0x96, 0x7d,
	0x00, 0xcb, 0x59, 0x48, 0x88, 0xcc, 0x4d, 0xcd, 0x8c, 0x34, 0xae, 0xbb, 0xec, 0x67, 0xd0, 0x2a,
	0xc6, 0x85, 0x3f, 0x8e, 0xe9, 0x39, 0xb4, 0x27, 0x82, 0xc0, 0x1f, 0xc7, 0x75, 0x02, 0x90, 0x87,
	0x73, 0x18, 0xc8, 0xc7, 0xf2, 0x5c, 0x07, 0xff, 0xf8, 0xc9, 0x9e, 0x02, 0xe4, 0x01, 0xa3, 0x0e,
	0x3f, 0xbb, 0x4a, 0x50, 0xce, 0xc7, 0x0b, 0x18, 0x7b, 0x17, 0x56, 0x74, 0x34, 0x87, 0x21, 0xb2,
	0xe7, 0x6a, 0x69, 0x55, 0xcf, 0x65, 0x1f, 0xc3, 0x8a, 0x0e, 0x12, 0xb5, 0x24, 0xbd, 0x74, 0x1a,
	0xcf, 0x4d, 0xaf, 0xed, 0xc1, 0xd2, 0xd9, 0x35, 0x97, 0xe7, 0x6c, 0x1d, 0x96, 0x48, 0x51, 0x2d,
	0x44, 0x35, 0x30, 0x51, 0xe9, 0xf9, 0x61, 0xff, 0xd2, 0xd1, 0x01, 0xf9, 0x22, 0x5f, 0xa1, 0xf6,
	0xeb, 0x38, 0x4b, 0x3c, 0x6a, 0x79, 0xe2, 0xc1, 0x1e, 0x40, 0xc3, 0x0f, 0x07, 0x8e, 0x17, 0xb8,
	0xf2, 0x9a, 0x82, 0xd3, 0x45, 0x5e, 0xf7, 0xc3, 0xc1, 0x4b, 0x6c, 0xdb, 0xff, 0x53, 0x85, 0x66,
	0x21, 0xc0, 0x9b, 0xd1, 0x79, 0x1d, 0x96, 0x94, 0xa9, 0x57, 0x29, 0xcf, 0x52, 0x8d, 0x5c, 0xaf,
	0x5a, 0x51, 0xaf, 0xf7, 0xa1, 0xa5, 0xf5, 0x1a, 0x0d, 0x7b, 0x32, 0xd6, 0x63, 0x35, 0x95, 0x6e,
	0x44, 0x42, 0xd5, 0xd3, 0x6b, 0xad, 0xca, 0x92, 0x52, 0x3d, 0xbd, 0x26, 0x4d, 0x32, 0xd5, 0x97,
	0x0b, 0xaa, 0xef, 0x42, 0xa7, 0x37, 0xf2, 0xfc, 0xd4, 0x0b, 0x4c, 0x78, 0xad, 0x43, 0x4e, 0x9d,
	0xae, 0xec, 0xaa, 0x4e, 0x9a, 0x80, 0x59, 0xc5, 0x55, 0xcd, 0x61, 0x76, 0xe1, 0x4b, 0x68, 0xcb,
	0xb8, 0xbf, 0xfd, 0x34, 0x93, 0xa0, 0x62, 0x4d, 0xa6, 0x24, 0x1c, 0xf0, 0xbd, 0xed, 0xa7, 0x86,
	0xb5, 0x45, 0x40, 0xc3, 0xf8, 0x0c, 0x40, 0xc5, 0xcf, 0xbe, 0x97, 0xa4, 0x3a, 0x94, 0x5c, 0x2f,
	0x70, 0xd1, 0xa8, 0xaf, 0xbc, 0x24, 0xe5, 0x0d, 0x61, 0x3e, 0xed, 0x33, 0x60, 0xb3, 0xc9, 0x03,
	0xfb, 0x1a, 0x9a, 0xc5, 0xbc, 0x63, 0xe2, 0x2c, 0x16, 0xcf, 0x7b, 0xc1, 0xa6, 0x8a, 0x0c, 0xf6,
	0x21, 0x74, 0xa6, 0x92, 0x07, 0xf6, 0x2c, 0x37, 0xa6, 0xd2, 0x0c, 0x6e, 0xc6, 0xb0, 0xfe, 0x18,
	0x9a, 0x85, 0xc4, 0x81, 0x7d, 0x0a, 0x8b, 0xb1, 0x3c, 0x37, 0xfa, 0xdc, 0x9f, 0x15, 0x40, 0x56,
	0xc8, 0x09, 0x64, 0x7f, 0x0f, 0x77, 0xe6, 0xe4, 0x09, 0xec, 0x4f, 0xa1, 0x55, 0xcc, 0x32, 0xb4,
	0xac, 0x39, 0x57, 0x62, 0x81, 0x8b, 0x37, 0x45, 0xde, 0xb0, 0x3f, 0x02, 0xc8, 0xd3, 0x05, 0x76,
	0x1f, 0x56, 0x02, 0x79, 0x9d, 0x3a, 0xfd, 0x48, 0x67, 0xc6, 0xcb, 0xd8, 0xdc, 0x8b, 0xec, 0x43,
	0xe8, 0x4e, 0x87, 0xd8, 0x6c, 0x1b, 0x9a, 0x79, 0xf4, 0x6a, 0xe6, 0xd1, 0x35, 0xa7, 0xca, 0x74,
	0xf0, 0x22, 0xc8, 0xfe, 0x7b, 0x58, 0x9b, 0x09, 0xab, 0x7f, 0x17, 0x41, 0xec, 0x39, 0xb4, 0x46,
	0x41, 0x4e, 0xa0, 0x4c, 0x7d, 0x1e, 0xd3, 0x04, 0xca, 0x7e, 0x02, 0xab, 0x93, 0x21, 0x38, 0xb3,
	0x60, 0x25, 0x12, 0x71, 0xea, 0x49, 0x35, 0x6e, 0x83, 0x9b, 0xa6, 0xfd, 0xaf, 0x15, 0xe8, 0x98,
	0xc0, 0x21, 0x0e, 0xa3, 0x30, 0x11, 0x3e, 0x7b, 0x02, 0xf5, 0x48, 0x7f, 0xeb, 0xb4, 0x7a, 0x55,
	0x8d, 0x68, 0x10, 0x3c, 0xeb, 0x67, 0xef, 0x42, 0xed, 0x46, 0x97, 0x10, 0x9a, 0xdb, 0xa0, 0x60,
	0xe8, 0xbe, 0x39, 0x92, 0xd9, 0x06, 0x54, 0x83, 0x50, 0x57, 0x0f, 0x8a, 0x9d, 0xd5, 0x20, 0x64,
	0x1f, 0xc2, 0x8a, 0x17, 0x50, 0x51, 0xc7, 0x5a, 0x9c, 0x01, 0x98, 0x2e, 0x7b, 0x07, 0xd6, 0x66,
	0x62, 0x75, 0xf6, 0x19, 0x34, 0x8c, 0x02, 0x66, 0x21, 0xa7, 0x35, 0xcc, 0x01, 0xf6, 0x29, 0x74,
	0xa7, 0x53, 0x08, 0xf6, 0xcd, 0xac, 0x84, 0xf7, 0x4b, 0x53, 0xfe, 0x79, 0x42, 0xbf, 0x86, 0xd5,
	0xc9, 0xa0, 0xe9, 0xb7, 0x54, 0x6a, 0x0c, 0xab, 0x93, 0xf9, 0x02, 0x5e, 0x78, 0xb8, 0x29, 0xa6,
	0x30, 0xa4, 0x1a, 0xb8, 0x73, 0x3d, 0xe1, 0xe3, 0x20, 0xba, 0x28, 0x64, 0x9a, 0xec, 0x39, 0x2c,
	0x6b, 0xbf, 0x5b, 0x2b, 0x9e, 0x75, 0x5d, 0x45, 0xd3, 0xf9, 0x88, 0x7c, 0xe5, 0xd1, 0x79, 0xe2,
	0x1a, 0x6b, 0xbf, 0x81, 0xce, 0x54, 0x9e, 0xc2, 0xfe, 0x64, 0xc6, 0xdf, 0x6e, 0xfe, 0xa6, 0xe4,
	0xa6, 0xe0, 0x82, 0xff, 0xbb, 0x02, 0xad, 0x62, 0xb2, 0x82, 0xbe, 0x40, 0xc7, 0xfe, 0xd9, 0x2d,
	0x5f, 0x57, 0x84, 0x97, 0x2e, 0x7b, 0x08, 0xb5, 0xde, 0xe8, 0x46, 0x9b, 0x8b, 0x76, 0x97, 0x6f,
	0x30, 0x98, 0xe0, 0x48, 0x67, 0x8f, 0x60, 0x31, 0x91, 0xbe, 0xaf, 0x67, 0x34, 0xd1, 0x4f, 0x1d,
	0xec, 0x09, 0xac, 0xf9, 0x22, 0x49, 0x9d, 0x34, 0x16, 0xae, 0x74, 0x9d, 0x28, 0xf6, 0xfa, 0x52,
	0x97, 0xc0, 0x3a, 0xd8, 0x71, 0x46, 0xf4, 0x13, 0x24, 0xe3, 0xd2, 0x89, 0x91, 0xba, 0x31, 0xd0,
	0x0f, 0xd4, 0xb9, 0x69, 0x92, 0x77, 0x43, 0x95, 0x51, 0xc3, 0x65, 0xed, 0xdd, 0xb0, 0xfd, 0xd2,
	0xb5, 0x5f, 0x40, 0x23, 0x4b, 0x97, 0xd8, 0x16, 0x2c, 0x53, 0x7e, 0x65, 0xd6, 0xe5, 0x9e, 0x52,
	0xe8, 0xf5, 0x54, 0x0a, 0xc5, 0x35, 0xca, 0x7e, 0x0a, 0xb0, 0x2f, 0xfb, 0xde, 0x50, 0xf8, 0xc7,
	0x22, 0x32, 0x35, 0x3b, 0x75, 0xc5, 0x50, 0xcd, 0xae, 0x0b, 0xb5, 0xb1, 0xf6, 0xf1, 0x0d, 0x8e,
	0x9f, 0xf6, 0x4f, 0xa1, 0x71, 0xe6, 0x0d, 0xa5, 0x52, 0x98, 0xc1, 0x62, 0xea, 0x0d, 0xa5, 0xe6,
	0xa0, 0x6f, 0xb2, 0x0a, 0x9a, 0x64, 0x55, 0x5b, 0x05, 0x36, 0xec, 0x17, 0xd0, 0x24, 0x96, 0xb7,
	0xa1, 0x3f, 0x2a, 0x82, 0x2a, 0x05, 0x10, 0xbb, 0x07, 0xcb, 0x63, 0xea, 0xd7, 0x1e, 0x5c, 0xb7,
	0xec, 0x5d, 0x00, 0x62, 0xe6, 0x22, 0x18, 0x50, 0x65, 0x71, 0xe8, 0x05, 0x26, 0x20, 0x19, 0x7a,
	0x01, 0x51, 0xc4, 0xb5, 0xd1, 0x72, 0x28, 0xae, 0x4d, 0xd0, 0x52, 0xcb, 0x82, 0x16, 0xfb, 0x9f,
	0x2b, 0x5a, 0xc8, 0x6e, 0x38, 0x0a, 0x5c, 0x1c, 0x4a, 0x67, 0xf1, 0x15, 0x5a, 0x69, 0xdd, 0x42,
	0x5b, 0x18, 0x45, 0xce, 0xb9, 0xe8, 0x63, 0xe6, 0xa4, 0x04, 0xd6, 0x47, 0xd1, 0x21, 0xb5, 0xd9,
	0x23, 0x68, 0xba, 0xe1, 0x55, 0x60, 0xba, 0x95, 0x74, 0x40, 0x92, 0x06, 0xfc, 0x0c, 0x56, 0xd2,
	0xd8, 0x1b, 0x0c, 0xb4, 0x9f, 0xcf, 0x4c, 0x9c, 0x06, 0x3e, 0x0e, 0x03, 0x2f, 0x0d, 0x63, 0x2f,
	0x18, 0x9c, 0x29, 0x0c, 0x37, 0x60, 0xfb, 0x06, 0x3a, 0xf9, 0x04, 0xf7, 0x44, 0xff, 0x02, 0x6f,
	0xf1, 0xa5, 0x1e, 0x6a, 0xaa, 0xef, 0xb3, 0x39, 0x7e, 0x31, 0x9f, 0x0d, 0x57, 0x50, 0xe4, 0x89,
	0x51, 0x82, 0x8e, 0xa4, 0xca, 0x78, 0x68, 0x14, 0xae, 0xa0, 0xf6, 0x7f, 0xd5, 0xa0, 0x55, 0x54,
	0x8f, 0x6d, 0x42, 0xd3, 0x0b, 0xbc, 0xd4, 0x13, 0xbe, 0x97, 0x48, 0x97, 0x26, 0x59, 0xe7, 0x45,
	0x12, 0xfb, 0x0a, 0x9a, 0xe7, 0x91, 0x73, 0x11, 0xc6, 0xde, 0x2f, 0xd1, 0x2f, 0x2c, 0x96, 0x39,
	0xee, 0xdc, 0xb2, 0x38, 0x9c, 0x47, 0x47, 0x1a, 0x8f, 0x7b, 0x13, 0x84, 0x57, 0x64, 0xe1, 0x35,
	0x8e, 0x9f, 0xb8, 0x19, 0xa3, 0xc8, 0xc5, 0x80, 0x6a, 0x59, 0x79, 0x37, 0xd5, 0xc2, 0x0b, 0x83,
	0x26, 0x96, 0x58, 0x2b, 0x65, 0x63, 0x14, 0x16, 0x41, 0x63, 0xd9, 0x33, 0xb8, 0x47, 0xe6, 0xe4,
	0xd0, 0x04, 0x9d, 0x3e, 0x2e, 0xa7, 0x43, 0x66, 0x5a, 0x27, 0xe9, 0x77, 0xa2, 0xc9, 0xa5, 0x46,
	0x73, 0x66, 0xc7, 0xb0, 0x36, 0xc3, 0x64, 0x35, 0x4a, 0xaf, 0xd9, 0x49, 0x09, 0xbc, 0x33, 0x25,
	0x92, 0x7d, 0x0e, 0xeb, 0xb1, 0x3c, 0x57, 0xa7, 0xbd, 0xa8, 0x01, 0x90, 0x06, 0x6b, 0xb1, 0x3c,
	0x27, 0x11, 0xf9, 0xf8, 0xfb, 0xd0, 0x99, 0x62, 0xb0, 0x9a, 0x3f, 0x62, 0x5d, 0xdb, 0x13, 0x92,
	0xec, 0xff, 0xac, 0x42, 0x6b, 0x47, 0x5d, 0x19, 0x2a, 0xaf, 0xfa, 0x0c, 0x16, 0x87, 0x98, 0x47,
	0x57, 0x8a, 0x4f, 0x08, 0xaa, 0x7c, 0xb1, 0x85, 0x37, 0x8f, 0x17, 0x0c, 0x8e, 0x43, 0x57, 0x72,
	0x42, 0xb1, 0x17, 0xd0, 0x72, 0xe5, 0xb9, 0x18, 0xf9, 0xa9, 0x43, 0x5c, 0xd5, 0xdf, 0xc0, 0xd5,
	0xd4, 0x68, 0x6c, 0xb0, 0xad, 0xdc, 0xf6, 0x6b, 0xc4, 0xa7, 0xc3, 0x42, 0xad, 0xcf, 0xb4, 0xcd,
	0xe3, 0x15, 0xd0, 0x93, 0x03, 0x2f, 0xa0, 0x93, 0x52, 0xe3, 0xaa, 0xc1, 0x3e, 0x86, 0x9a, 0x0c,
	0x5c, 0x5d, 0xe2, 0xbd, 0x3b, 0x21, 0x61, 0x7f, 0x14, 0xab, 0xd8, 0x01, 0x11, 0x3a, 0x06, 0x8f,
	0x53, 0x32, 0x99, 0x3a, 0x57, 0x0d, 0xbc, 0x90, 0x92, 0x34, 0x8c, 0x28, 0x20, 0xae, 0x73, 0xfa,
	0x66, 0xdb, 0xd0, 0x90, 0xd7, 0xa9, 0x0c, 0xe8, 0x61, 0xa1, 0x7e, 0x8b, 0x6a, 0x39, 0xcc, 0xfe,
	0x2b, 0x68, 0x1f, 0xfc, 0x30, 0xf2, 0xd2, 0x9b, 0xd3, 0x0b, 0x11, 0xcb, 0x57, 0x27, 0x25, 0x29,
	0xc0, 0x65, 0x76, 0xcb, 0x51, 0x83, 0xa8, 0xc8, 0x60, 0x52, 0x00, 0x6a, 0xa0, 0xc1, 0x8b, 0xf1,
	0x40, 0x5f, 0xfa, 0xf8, 0x69, 0xff, 0x63, 0x05, 0x9a, 0x05, 0xf9, 0x74, 0x81, 0x8d, 0xa3, 0xec,
	0x4a, 0x1b, 0xa3, 0xd2, 0x77, 0xc3, 0x48, 0x06, 0x54, 0xc7, 0x53, 0x5a, 0x3a, 0x32, 0x70, 0xa5,
	0x4b, 0xe3, 0xd5, 0xf9, 0x1d, 0xdd, 0xa9, 0x67, 0x70, 0x80, 0x5d, 0xec, 0x0b, 0xa8, 0xf9, 0x91,
	0x71, 0xae, 0x73, 0xde, 0x03, 0x26, 0x66, 0xc4, 0x11, 0x6b, 0xff, 0xd3, 0x12, 0x2c, 0xab, 0x8d,
	0x65, 0x1f, 0xc2, 0xb2, 0x72, 0x7a, 0xfa, 0xc6, 0x69, 0x15, 0xb7, 0x9d, 0xeb, 0x3e, 0xb6, 0x07,
	0x6d, 0x65, 0xa3, 0x43, 0x75, 0x5d, 0xe8, 0xab, 0xe6, 0xbd, 0x92, 0x33, 0xa2, 0x2f, 0x15, 0xde,
	0x8a, 0x8a, 0x57, 0xcc, 0x1e, 0xb4, 0xcd, 0xa4, 0x54, 0x1e, 0x55, 0x2b, 0x7d, 0x0a, 0x29, 0x18,
	0x33, 0x6f, 0x89, 0xa2, 0x69, 0x3f, 0x85, 0x76, 0x24, 0x07, 0x03, 0xe9, 0x3a, 0x21, 0xba, 0x5b,
	0x73, 0x0f, 0x4d, 0xb8, 0xe0, 0x96, 0x42, 0x50, 0x03, 0x63, 0xd3, 0x8e, 0xbc, 0x8e, 0x3c, 0xbc,
	0x81, 0x0d, 0xcf, 0xd2, 0x2c, 0xcf, 0xaa, 0xc1, 0x68, 0x2e, 0x1b, 0xda, 0xe4, 0xc0, 0x7b, 0x12,
	0x7f, 0xb4, 0xff, 0x6d, 0xf0, 0x26, 0x12, 0x77, 0x65, 0x92, 0xee, 0x7a, 0xee, 0x24, 0x46, 0x24,
	0x97, 0x64, 0x7f, 0x05, 0xcc, 0x4e, 0x72, 0xc9, 0x36, 0xa1, 0x45, 0x98, 0xa1, 0xe7, 0x92, 0x98,
	0xba, 0xf2, 0x1e, 0x48, 0x3b, 0xf6, 0x5c, 0x94, 0x52, 0x44, 0xa0, 0x90, 0xc6, 0x04, 0x02, 0x65,
	0xfc, 0x14, 0xee, 0x2b, 0x84, 0x0a, 0x57, 0xc6, 0xc2, 0x1f, 0x49, 0x27, 0x8a, 0xc3, 0xeb, 0x1b,
	0xba, 0x59, 0x1a, 0x7c, 0x9d, 0xc0, 0xd4, 0xfb, 0x16, 0x3b, 0x4f, 0xb0, 0x8f, 0xed, 0xc0, 0x43,
	0x62, 0x93, 0x64, 0x00, 0x0e, 0x59, 0xa5, 0xe3, 0x7a, 0x49, 0x1a, 0x7b, 0xbd, 0x51, 0x2a, 0x5d,
	0xaa, 0xb5, 0xd7, 0xf8, 0x06, 0x82, 0x0a, 0x46, 0xb2, 0x9f, 0x23, 0x30, 0xa3, 0x29, 0x72, 0xeb,
	0x52, 0xfa, 0xc3, 0x5b, 0x8d, 0x8c, 0x37, 0x65, 0xc1, 0xc6, 0x3f, 0x03, 0xd6, 0x1f, 0xc5, 0xb1,
	0x0c, 0x94, 0xfa, 0x3a, 0x12, 0x6a, 0x93, 0xda, 0x5d, 0xdd, 0x83, 0x9a, 0x93, 0xdd, 0x60, 0x62,
	0x33, 0x5d, 0xb7, 0x65, 0xdb, 0xb0, 0x62, 0x8a, 0xbd, 0x2a, 0xba, 0xb1, 0xca, 0x4a, 0xb3, 0xdc,
	0x00, 0xed, 0x7f, 0xab, 0x40, 0xdd, 0x54, 0x65, 0x31, 0x8a, 0xa2, 0x18, 0x35, 0x8f, 0xf3, 0x28,
	0xab, 0xb8, 0x79, 0xe9, 0xd2, 0xc5, 0xe1, 0xfd, 0x52, 0xea, 0xb7, 0x3c, 0xfa, 0xc6, 0x53, 0x89,
	0xa1, 0x9f, 0x7a, 0xce, 0xa3, 0x68, 0x8f, 0xe9, 0x68, 0x6f, 0x51, 0xa3, 0x30, 0xc0, 0xcb, 0x42,
	0x99, 0xa5, 0x62, 0x28, 0xb3, 0x09, 0xad, 0xf1, 0x95, 0xd3, 0x1b, 0xdd, 0xe8, 0x79, 0x2a, 0xa3,
	0x81, 0xf1, 0xd5, 0xee, 0xe8, 0x46, 0xc5, 0x4e, 0x36, 0xb4, 0xc7, 0x57, 0x0e, 0x8a, 0xd0, 0x10,
	0x6d, 0x33, 0xe3, 0xab, 0x53, 0xe9, 0xfb, 0x6a, 0x15, 0x2e, 0xa0, 0x33, 0x55, 0x6b, 0xbe, 0x3d,
	0x58, 0xfd, 0x43, 0x68, 0xe4, 0xe5, 0xeb, 0x6a, 0xd9, 0x13, 0xa8, 0x11, 0xc6, 0x73, 0xb0, 0xfd,
	0x0a, 0xea, 0xa6, 0x18, 0x5d, 0xfa, 0x22, 0x8d, 0x37, 0xb6, 0x1f, 0xf6, 0x2f, 0xcd, 0x9d, 0x47,
	0x8d, 0x2c, 0x06, 0xac, 0xe5, 0x31, 0xa0, 0xfd, 0x1f, 0x15, 0x80, 0xbc, 0x48, 0x8d, 0x0b, 0x99,
	0xc8, 0x1f, 0xb4, 0x34, 0xfc, 0x64, 0x0f, 0x01, 0xe8, 0xc2, 0x76, 0x0a, 0xac, 0x0d, 0xa2, 0x90,
	0x37, 0x7c, 0x04, 0x4d, 0x3a, 0x85, 0xda, 0x6b, 0xaa, 0xe5, 0x06, 0x45, 0x22, 0xc0, 0xcf, 0xc0,
	0x8a, 0xa5, 0x70, 0x6f, 0x9c, 0x34, 0x74, 0x94, 0xa0, 0x40, 0x5e, 0x39, 0xaa, 0x6c, 0xae, 0x1c,
	0xc2, 0x3a, 0xf5, 0x9f, 0x85, 0xa7, 0xd8, 0xfb, 0x5a, 0x5e, 0x91, 0x3a, 0xec, 0x53, 0x60, 0x19,
	0x9f, 0x0c, 0x5c, 0xcd, 0xa1, 0xbc, 0x45, 0x47, 0x73, 0x1c, 0x04, 0x2e, 0x81, 0xed, 0x73, 0x58,
	0x9f, 0x57, 0x22, 0x57, 0x19, 0x4e, 0xda, 0xbf, 0x90, 0x89, 0x9e, 0x92, 0x69, 0xe2, 0xca, 0xe9,
	0x8b, 0x45, 0x07, 0xb0, 0xaa, 0xc5, 0xde, 0x2d, 0x66, 0x5a, 0x35, 0xea, 0x2a, 0x64, 0x56, 0x7f,
	0x0b, 0x77, 0xe7, 0x56, 0xca, 0x59, 0x0f, 0xac, 0xa4, 0x7f, 0x21, 0xdd, 0x91, 0x2f, 0x5d, 0x27,
	0xab, 0xbe, 0x53, 0xa7, 0x3e, 0x01, 0x8f, 0xe7, 0xe4, 0x3d, 0x86, 0xc3, 0xc8, 0x24, 0x3c, 0xbf,
	0x97, 0xcc, 0xa5, 0xdb, 0xff, 0x50, 0x81, 0x7b, 0xf3, 0x59, 0x70, 0x17, 0xd4, 0x60, 0x4e, 0x21,
	0xc8, 0x07, 0x45, 0xa2, 0x5d, 0x38, 0x84, 0xd5, 0x29, 0xad, 0xaa, 0x65, 0xbe, 0x67, 0x52, 0x99,
	0x76, 0x3c, 0xa1, 0xc3, 0xff, 0x55, 0xa0, 0x3d, 0x39, 0xf4, 0xfb, 0xd0, 0x3a, 0x8f, 0xc3, 0xa1,
	0x79, 0xc3, 0xd2, 0x86, 0xde, 0x44, 0x5a, 0x21, 0xfb, 0x54, 0xe5, 0xb6, 0x6a, 0xb1, 0xdc, 0x76,
	0x06, 0x77, 0x94, 0x6c, 0x47, 0x9d, 0x74, 0x31, 0x24, 0x7e, 0xe5, 0x13, 0x3f, 0xbc, 0x45, 0xaf,
	0x38, 0xbd, 0xd9, 0x21, 0x2c, 0x46, 0x67, 0x48, 0x2b, 0x90, 0x50, 0x9d, 0x34, 0x4c, 0x85, 0xaf,
	0x37, 0x41, 0xbb, 0xf2, 0x26, 0xd1, 0x94, 0x04, 0x3c, 0x97, 0x64, 0x4c, 0x0e, 0x5a, 0xba, 0xba,
	0x0a, 0xea, 0x44, 0x38, 0x95, 0x3f, 0xe0, 0xfe, 0xe3, 0x12, 0x26, 0xa9, 0x18, 0x46, 0x3a, 0xc6,
	0xcd, 0x09, 0xf6, 0x2e, 0xb0, 0x59, 0x35, 0x4a, 0xb2, 0x6b, 0xcc, 0x5b, 0xd4, 0x94, 0xd4, 0xb4,
	0x75, 0xcb, 0xfe, 0x75, 0x0d, 0x20, 0x7f, 0xca, 0xc0, 0xad, 0x53, 0x55, 0xc7, 0x7c, 0xf9, 0xda,
	0x1c, 0x88, 0xb4, 0x47, 0xd2, 0xf1, 0x36, 0x16, 0x81, 0xa3, 0x8c, 0x50, 0x6a, 0x87, 0xa2, 0x83,
	0x8b, 0x6e, 0x5f, 0x04, 0xaa, 0x02, 0x20, 0x75, 0x6c, 0xf0, 0x04, 0xd6, 0x8a, 0xe8, 0xbc, 0xcc,
	0x59, 0xe7, 0x9d, 0x1c, 0x4c, 0xc5, 0x2c, 0xf6, 0x11, 0xac, 0x0e, 0x64, 0x20, 0x13, 0x2f, 0x71,
	0xfc, 0x10, 0x73, 0x5b, 0x5a, 0xad, 0x3a, 0x6f, 0x6b, 0xea, 0x2b, 0x22, 0xb2, 0xe7, 0x18, 0xa5,
	0x17, 0x07, 0x77, 0x64, 0x20, 0x7a, 0xbe, 0x74, 0x75, 0xea, 0xbb, 0x1e, 0x15, 0x35, 0x38, 0x50,
	0x7d, 0x18, 0x16, 0x4d, 0x28, 0x91, 0x31, 0xa9, 0x43, 0x7f, 0x27, 0x2a, 0x68, 0x62, 0x78, 0xbe,
	0x82, 0x07, 0xf3, 0x47, 0x72, 0xd0, 0x9c, 0xe8, 0xf0, 0xd7, 0xb8, 0x35, 0x6f, 0xb8, 0xc3, 0x38,
	0x1c, 0xb2, 0x17, 0xb0, 0x31, 0x77, 0x48, 0xc5, 0xad, 0x52, 0x8a, 0xfb, 0x73, 0xc6, 0x45, 0x66,
	0xfb, 0xd7, 0x8b, 0xb0, 0x3a, 0xf9, 0x36, 0xc4, 0x5e, 0x41, 0x5b, 0x99, 0x66, 0x1a, 0x3a, 0xe3,
	0x30, 0x95, 0xe5, 0x27, 0x99, 0xac, 0xc1, 0x94, 0x62, 0x50, 0x0a, 0x6d, 0x1d, 0x6f, 0x12, 0xfb,
	0x59, 0x88, 0x14, 0xb6, 0x0f, 0xab, 0x3d, 0x11, 0x04, 0x52, 0xd9, 0xbb, 0x97, 0x15, 0xb6, 0xe6,
	0xff, 0x3b, 0x22, 0x90, 0xca, 0xac, 0x79, 0xbb, 0x97, 0x35, 0x3c, 0x99, 0xb0, 0x23, 0x68, 0xa7,
	0xe1, 0xa5, 0x0c, 0x1c, 0x53, 0xb9, 0x51, 0xe7, 0xe5, 0x83, 0x12, 0x9d, 0xce, 0x10, 0xbb, 0xab,
	0xa0, 0xbc, 0x95, 0x16, 0x5a, 0xcc, 0x81, 0x8d, 0x58, 0xf6, 0xd1, 0xc9, 0x93, 0xb1, 0x25, 0x4e,
	0x2c, 0xff, 0x46, 0xf6, 0xd5, 0x2b, 0x9c, 0x09, 0xd1, 0xe6, 0x3c, 0x34, 0xed, 0x22, 0x98, 0x13,
	0x14, 0x0d, 0x38, 0xe1, 0xf7, 0x95, 0x14, 0xa2, 0x27, 0x85, 0x0e, 0xb6, 0x05, 0x77, 0x4c, 0x18,
	0xa1, 0x2c, 0xbc, 0x58, 0x37, 0x5f, 0xd3, 0x5d, 0xc4, 0xa6, 0x2a, 0xe8, 0x5b, 0x70, 0x87, 0x62,
	0x1f, 0x2f, 0xe8, 0xc7, 0x52, 0x24, 0x52, 0x71, 0xe9, 0x22, 0x0a, 0x95, 0x66, 0x5e, 0xea, 0x1e,
	0x62, 0x22, 0x53, 0xd7, 0xf2, 0xf3, 0xf3, 0xbc, 0x42, 0xe8, 0x8e, 0xee, 0x38, 0x30, 0xc7, 0xfa,
	0x4b, 0xb0, 0x86, 0x5e, 0x80, 0xbb, 0x88, 0x21, 0x25, 0xad, 0x43, 0x62, 0x8a, 0x03, 0x2a, 0xbc,
	0xbb, 0x3b, 0xf4, 0x82, 0xb7, 0xd4, 0x4d, 0x6b, 0x96, 0xa8, 0x3a, 0x81, 0xfd, 0x0b, 0xb8, 0x37,
	0x7f, 0x73, 0x4b, 0x4e, 0xfd, 0x46, 0xa1, 0xbe, 0xa9, 0x8b, 0x12, 0x59, 0x3d, 0x73, 0x1d, 0x96,
	0xfa, 0xfa, 0x8e, 0x43, 0x25, 0x55, 0xc3, 0xde, 0xa7, 0xa2, 0xb6, 0xd9, 0xef, 0x12, 0xb1, 0x8f,
	0xa0, 0x39, 0x0a, 0x52, 0xcf, 0xd7, 0x6e, 0x50, 0xf9, 0x2c, 0x20, 0x92, 0xf2, 0x80, 0x7b, 0xb0,
	0x36, 0xb3, 0xe1, 0xbf, 0x6d, 0xd9, 0xcf, 0xde, 0x87, 0xee, 0xf4, 0xf6, 0xe2, 0x84, 0x94, 0x61,
	0x48, 0x57, 0xfb, 0xd0, 0xac, 0x8d, 0xf2, 0xe9, 0x62, 0xd5, 0xfa, 0xa8, 0x86, 0xfd, 0x2d, 0xbc,
	0x43, 0x87, 0x88, 0xd4, 0x89, 0x45, 0x90, 0xa8, 0xd2, 0xfa, 0x6d, 0xab, 0x96, 0xad, 0x4c, 0xb5,
	0xb8, 0x32, 0xff, 0x5e, 0x85, 0xee, 0xf4, 0xf3, 0x2a, 0xb9, 0x3a, 0xfa, 0x72, 0x02, 0x31, 0x34,
	0x55, 0x29, 0x50, 0xa4, 0xd7, 0x62, 0x28, 0xd9, 0x77, 0xb0, 0x9a, 0x9d, 0x5a, 0x23, 0x14, 0x6d,
	0xf9, 0xd3, 0x39, 0x0e, 0xb8, 0x4c, 0x4d, 0xde, 0xd2, 0x27, 0x57, 0x29, 0x3d, 0x7b, 0x74, 0x6b,
	0xbf, 0x8f, 0xa3, 0xbb, 0xf8, 0xbb, 0x1e, 0xdd, 0xb9, 0x96, 0xbf, 0x34, 0xd7, 0xf2, 0xed, 0xb7,
	0x00, 0xea, 0x69, 0xf9, 0xd4, 0x1b, 0x24, 0x33, 0xc9, 0x31, 0x83, 0xc5, 0x4b, 0x2f, 0x50, 0xb9,
	0xea, 0x12, 0xa7, 0x6f, 0xa4, 0xd1, 0x8b, 0xbe, 0x7e, 0x84, 0xc3, 0x6f, 0x8a, 0x0b, 0xbd, 0x2c,
	0x31, 0x4e, 0xbc, 0x81, 0xfd, 0x2d, 0x2c, 0x2b, 0xb9, 0xec, 0x2b, 0x68, 0xaa, 0x27, 0x6b, 0x27,
	0xf1, 0x06, 0xb7, 0xbc, 0x0e, 0xe5, 0x6a, 0x70, 0x08, 0xb2, 0x6f, 0xfb, 0xef, 0xa0, 0x3b, 0xfd,
	0x78, 0xcd, 0x2e, 0xa6, 0xef, 0xa6, 0x34, 0xdf, 0x20, 0x33, 0xc2, 0x93, 0x79, 0x21, 0x42, 0x7e,
	0x13, 0x15, 0xb6, 0x34, 0xe1, 0x56, 0x5c, 0xd2, 0x63, 0x3f, 0x01, 0xab, 0x8c, 0x0b, 0x17, 0x2b,
	0xbd, 0xd6, 0x8f, 0x1a, 0xd5, 0xf4, 0xda, 0xfe, 0x55, 0x05, 0x9a, 0x85, 0x97, 0xf1, 0xdb, 0x03,
	0xfc, 0x4f, 0xa0, 0x9b, 0xc8, 0x34, 0xf5, 0xe5, 0x10, 0xa7, 0x51, 0xac, 0xb3, 0x76, 0x72, 0xba,
	0xca, 0x2f, 0x7e, 0x02, 0x2c, 0x55, 0xb5, 0x1a, 0x27, 0x95, 0xf1, 0xd0, 0x0b, 0x44, 0x9a, 0x95,
	0xf3, 0xd6, 0x74, 0xcf, 0x59, 0xd6, 0xf1, 0xe4, 0x17, 0xb0, 0x7c, 0x68, 0xfe, 0x46, 0xca, 0x0e,
	0xdf, 0xf0, 0xe3, 0x9d, 0x33, 0xe7, 0xcf, 0x5f, 0x9f, 0x9e, 0x1c, 0xec, 0xbd, 0x3c, 0x7c, 0x79,
	0xb0, 0xdf, 0x5d, 0x60, 0x5d, 0x68, 0x69, 0xfa, 0x09, 0x7f, 0x73, 0xf6, 0xa6, 0x5b, 0x61, 0x0f,
	0xe0, 0x7e, 0x91, 0xe2, 0xec, 0xbd, 0x39, 0x3e, 0xe1, 0x07, 0xa7, 0xa7, 0x07, 0xfb, 0xdd, 0x2a,
	0xeb, 0x40, 0x53, 0x77, 0xfe, 0xd9, 0xe9, 0x9b, 0xd7, 0xdd, 0xda, 0xee, 0xd6, 0x5f, 0x7c, 0xd6,
	0x0f, 0x5d, 0x49, 0x0b, 0x4c, 0xff, 0x83, 0xed, 0x87, 0xfe, 0x96, 0x17, 0x7e, 0x4e, 0xdf, 0xc9,
	0xe7, 0xd3, 0x7f, 0xfb, 0xed, 0x2d, 0x53, 0xc7, 0xb3, 0xff, 0x0f, 0x00, 0x00, 0xff, 0xff, 0xa0,
	0xa1, 0x5a, 0x48, 0x11, 0x2c, 0x00, 0x00,
}
