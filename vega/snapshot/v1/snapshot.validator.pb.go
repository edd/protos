// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: vega/snapshot/v1/snapshot.proto

package v1

import (
	fmt "fmt"
	math "math"

	_ "code.vegaprotocol.io/protos/vega"
	proto "github.com/golang/protobuf/proto"
	github_com_mwitkow_go_proto_validators "github.com/mwitkow/go-proto-validators"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

func (this *Snapshot) Validate() error {
	return nil
}
func (this *Chunk) Validate() error {
	if oneOfNester, ok := this.GetData().(*Chunk_CollateralAccounts); ok {
		if oneOfNester.CollateralAccounts != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(oneOfNester.CollateralAccounts); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("CollateralAccounts", err)
			}
		}
	}
	if oneOfNester, ok := this.GetData().(*Chunk_CollateralAssets); ok {
		if oneOfNester.CollateralAssets != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(oneOfNester.CollateralAssets); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("CollateralAssets", err)
			}
		}
	}
	if oneOfNester, ok := this.GetData().(*Chunk_ActiveAssets); ok {
		if oneOfNester.ActiveAssets != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(oneOfNester.ActiveAssets); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("ActiveAssets", err)
			}
		}
	}
	if oneOfNester, ok := this.GetData().(*Chunk_PendingAssets); ok {
		if oneOfNester.PendingAssets != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(oneOfNester.PendingAssets); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("PendingAssets", err)
			}
		}
	}
	return nil
}
func (this *CollateralAccounts) Validate() error {
	for _, item := range this.Accounts {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("Accounts", err)
			}
		}
	}
	return nil
}
func (this *CollateralAssets) Validate() error {
	for _, item := range this.Assets {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("Assets", err)
			}
		}
	}
	return nil
}
func (this *ActiveAssets) Validate() error {
	for _, item := range this.Assets {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("Assets", err)
			}
		}
	}
	return nil
}
func (this *PendingAssets) Validate() error {
	for _, item := range this.Assets {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("Assets", err)
			}
		}
	}
	return nil
}
