// Code generated by protoc-gen-go. DO NOT EDIT.
// source: vega/snapshot.proto

package vega

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Snapshot struct {
	Data                 map[string][]byte `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *Snapshot) Reset()         { *m = Snapshot{} }
func (m *Snapshot) String() string { return proto.CompactTextString(m) }
func (*Snapshot) ProtoMessage()    {}
func (*Snapshot) Descriptor() ([]byte, []int) {
	return fileDescriptor_6ef1468f19ab6b2e, []int{0}
}

func (m *Snapshot) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Snapshot.Unmarshal(m, b)
}
func (m *Snapshot) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Snapshot.Marshal(b, m, deterministic)
}
func (m *Snapshot) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Snapshot.Merge(m, src)
}
func (m *Snapshot) XXX_Size() int {
	return xxx_messageInfo_Snapshot.Size(m)
}
func (m *Snapshot) XXX_DiscardUnknown() {
	xxx_messageInfo_Snapshot.DiscardUnknown(m)
}

var xxx_messageInfo_Snapshot proto.InternalMessageInfo

func (m *Snapshot) GetData() map[string][]byte {
	if m != nil {
		return m.Data
	}
	return nil
}

// Checkpoint is similar to Snapshot, only it doesn't contain independently serialised data
// but instead uses a oneof field
type Checkpoint struct {
	States               []*EngineState `protobuf:"bytes,1,rep,name=states,proto3" json:"states,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *Checkpoint) Reset()         { *m = Checkpoint{} }
func (m *Checkpoint) String() string { return proto.CompactTextString(m) }
func (*Checkpoint) ProtoMessage()    {}
func (*Checkpoint) Descriptor() ([]byte, []int) {
	return fileDescriptor_6ef1468f19ab6b2e, []int{1}
}

func (m *Checkpoint) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Checkpoint.Unmarshal(m, b)
}
func (m *Checkpoint) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Checkpoint.Marshal(b, m, deterministic)
}
func (m *Checkpoint) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Checkpoint.Merge(m, src)
}
func (m *Checkpoint) XXX_Size() int {
	return xxx_messageInfo_Checkpoint.Size(m)
}
func (m *Checkpoint) XXX_DiscardUnknown() {
	xxx_messageInfo_Checkpoint.DiscardUnknown(m)
}

var xxx_messageInfo_Checkpoint proto.InternalMessageInfo

func (m *Checkpoint) GetStates() []*EngineState {
	if m != nil {
		return m.States
	}
	return nil
}

// EngineState is a oneof wrapper type to facilitate serializing snapshots
type EngineState struct {
	// Types that are valid to be assigned to Engine:
	//	*EngineState_Asset
	//	*EngineState_Collateral
	//	*EngineState_NetParams
	//	*EngineState_Proposals
	Engine               isEngineState_Engine `protobuf_oneof:"engine"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *EngineState) Reset()         { *m = EngineState{} }
func (m *EngineState) String() string { return proto.CompactTextString(m) }
func (*EngineState) ProtoMessage()    {}
func (*EngineState) Descriptor() ([]byte, []int) {
	return fileDescriptor_6ef1468f19ab6b2e, []int{2}
}

func (m *EngineState) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EngineState.Unmarshal(m, b)
}
func (m *EngineState) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EngineState.Marshal(b, m, deterministic)
}
func (m *EngineState) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EngineState.Merge(m, src)
}
func (m *EngineState) XXX_Size() int {
	return xxx_messageInfo_EngineState.Size(m)
}
func (m *EngineState) XXX_DiscardUnknown() {
	xxx_messageInfo_EngineState.DiscardUnknown(m)
}

var xxx_messageInfo_EngineState proto.InternalMessageInfo

type isEngineState_Engine interface {
	isEngineState_Engine()
}

type EngineState_Asset struct {
	Asset *Assets `protobuf:"bytes,1,opt,name=asset,proto3,oneof"`
}

type EngineState_Collateral struct {
	Collateral *Collateral `protobuf:"bytes,2,opt,name=collateral,proto3,oneof"`
}

type EngineState_NetParams struct {
	NetParams *NetParams `protobuf:"bytes,3,opt,name=netParams,proto3,oneof"`
}

type EngineState_Proposals struct {
	Proposals *Proposals `protobuf:"bytes,4,opt,name=proposals,proto3,oneof"`
}

func (*EngineState_Asset) isEngineState_Engine() {}

func (*EngineState_Collateral) isEngineState_Engine() {}

func (*EngineState_NetParams) isEngineState_Engine() {}

func (*EngineState_Proposals) isEngineState_Engine() {}

func (m *EngineState) GetEngine() isEngineState_Engine {
	if m != nil {
		return m.Engine
	}
	return nil
}

func (m *EngineState) GetAsset() *Assets {
	if x, ok := m.GetEngine().(*EngineState_Asset); ok {
		return x.Asset
	}
	return nil
}

func (m *EngineState) GetCollateral() *Collateral {
	if x, ok := m.GetEngine().(*EngineState_Collateral); ok {
		return x.Collateral
	}
	return nil
}

func (m *EngineState) GetNetParams() *NetParams {
	if x, ok := m.GetEngine().(*EngineState_NetParams); ok {
		return x.NetParams
	}
	return nil
}

func (m *EngineState) GetProposals() *Proposals {
	if x, ok := m.GetEngine().(*EngineState_Proposals); ok {
		return x.Proposals
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*EngineState) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*EngineState_Asset)(nil),
		(*EngineState_Collateral)(nil),
		(*EngineState_NetParams)(nil),
		(*EngineState_Proposals)(nil),
	}
}

// Assets lists the enabled asset details by ID
type Assets struct {
	Enabled              map[string]*AssetDetails `protobuf:"bytes,1,rep,name=enabled,proto3" json:"enabled,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Pending              map[string]*AssetDetails `protobuf:"bytes,2,rep,name=pending,proto3" json:"pending,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *Assets) Reset()         { *m = Assets{} }
func (m *Assets) String() string { return proto.CompactTextString(m) }
func (*Assets) ProtoMessage()    {}
func (*Assets) Descriptor() ([]byte, []int) {
	return fileDescriptor_6ef1468f19ab6b2e, []int{3}
}

func (m *Assets) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Assets.Unmarshal(m, b)
}
func (m *Assets) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Assets.Marshal(b, m, deterministic)
}
func (m *Assets) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Assets.Merge(m, src)
}
func (m *Assets) XXX_Size() int {
	return xxx_messageInfo_Assets.Size(m)
}
func (m *Assets) XXX_DiscardUnknown() {
	xxx_messageInfo_Assets.DiscardUnknown(m)
}

var xxx_messageInfo_Assets proto.InternalMessageInfo

func (m *Assets) GetEnabled() map[string]*AssetDetails {
	if m != nil {
		return m.Enabled
	}
	return nil
}

func (m *Assets) GetPending() map[string]*AssetDetails {
	if m != nil {
		return m.Pending
	}
	return nil
}

// Balance represents the balances per asset
type Balance struct {
	Balance              map[string][]byte `protobuf:"bytes,1,rep,name=balance,proto3" json:"balance,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *Balance) Reset()         { *m = Balance{} }
func (m *Balance) String() string { return proto.CompactTextString(m) }
func (*Balance) ProtoMessage()    {}
func (*Balance) Descriptor() ([]byte, []int) {
	return fileDescriptor_6ef1468f19ab6b2e, []int{4}
}

func (m *Balance) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Balance.Unmarshal(m, b)
}
func (m *Balance) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Balance.Marshal(b, m, deterministic)
}
func (m *Balance) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Balance.Merge(m, src)
}
func (m *Balance) XXX_Size() int {
	return xxx_messageInfo_Balance.Size(m)
}
func (m *Balance) XXX_DiscardUnknown() {
	xxx_messageInfo_Balance.DiscardUnknown(m)
}

var xxx_messageInfo_Balance proto.InternalMessageInfo

func (m *Balance) GetBalance() map[string][]byte {
	if m != nil {
		return m.Balance
	}
	return nil
}

// Collateral contains the balances per party
type Collateral struct {
	Parties              map[string]*Balance `protobuf:"bytes,1,rep,name=parties,proto3" json:"parties,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *Collateral) Reset()         { *m = Collateral{} }
func (m *Collateral) String() string { return proto.CompactTextString(m) }
func (*Collateral) ProtoMessage()    {}
func (*Collateral) Descriptor() ([]byte, []int) {
	return fileDescriptor_6ef1468f19ab6b2e, []int{5}
}

func (m *Collateral) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Collateral.Unmarshal(m, b)
}
func (m *Collateral) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Collateral.Marshal(b, m, deterministic)
}
func (m *Collateral) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Collateral.Merge(m, src)
}
func (m *Collateral) XXX_Size() int {
	return xxx_messageInfo_Collateral.Size(m)
}
func (m *Collateral) XXX_DiscardUnknown() {
	xxx_messageInfo_Collateral.DiscardUnknown(m)
}

var xxx_messageInfo_Collateral proto.InternalMessageInfo

func (m *Collateral) GetParties() map[string]*Balance {
	if m != nil {
		return m.Parties
	}
	return nil
}

// NetParams contains all network parameters
type NetParams struct {
	Params               []*NetworkParameter `protobuf:"bytes,1,rep,name=params,proto3" json:"params,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *NetParams) Reset()         { *m = NetParams{} }
func (m *NetParams) String() string { return proto.CompactTextString(m) }
func (*NetParams) ProtoMessage()    {}
func (*NetParams) Descriptor() ([]byte, []int) {
	return fileDescriptor_6ef1468f19ab6b2e, []int{6}
}

func (m *NetParams) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NetParams.Unmarshal(m, b)
}
func (m *NetParams) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NetParams.Marshal(b, m, deterministic)
}
func (m *NetParams) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetParams.Merge(m, src)
}
func (m *NetParams) XXX_Size() int {
	return xxx_messageInfo_NetParams.Size(m)
}
func (m *NetParams) XXX_DiscardUnknown() {
	xxx_messageInfo_NetParams.DiscardUnknown(m)
}

var xxx_messageInfo_NetParams proto.InternalMessageInfo

func (m *NetParams) GetParams() []*NetworkParameter {
	if m != nil {
		return m.Params
	}
	return nil
}

// Proposals will contain all accepted proposals
type Proposals struct {
	Proposals            []*Proposal `protobuf:"bytes,1,rep,name=proposals,proto3" json:"proposals,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *Proposals) Reset()         { *m = Proposals{} }
func (m *Proposals) String() string { return proto.CompactTextString(m) }
func (*Proposals) ProtoMessage()    {}
func (*Proposals) Descriptor() ([]byte, []int) {
	return fileDescriptor_6ef1468f19ab6b2e, []int{7}
}

func (m *Proposals) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Proposals.Unmarshal(m, b)
}
func (m *Proposals) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Proposals.Marshal(b, m, deterministic)
}
func (m *Proposals) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Proposals.Merge(m, src)
}
func (m *Proposals) XXX_Size() int {
	return xxx_messageInfo_Proposals.Size(m)
}
func (m *Proposals) XXX_DiscardUnknown() {
	xxx_messageInfo_Proposals.DiscardUnknown(m)
}

var xxx_messageInfo_Proposals proto.InternalMessageInfo

func (m *Proposals) GetProposals() []*Proposal {
	if m != nil {
		return m.Proposals
	}
	return nil
}

func init() {
	proto.RegisterType((*Snapshot)(nil), "vega.Snapshot")
	proto.RegisterMapType((map[string][]byte)(nil), "vega.Snapshot.DataEntry")
	proto.RegisterType((*Checkpoint)(nil), "vega.Checkpoint")
	proto.RegisterType((*EngineState)(nil), "vega.EngineState")
	proto.RegisterType((*Assets)(nil), "vega.Assets")
	proto.RegisterMapType((map[string]*AssetDetails)(nil), "vega.Assets.EnabledEntry")
	proto.RegisterMapType((map[string]*AssetDetails)(nil), "vega.Assets.PendingEntry")
	proto.RegisterType((*Balance)(nil), "vega.Balance")
	proto.RegisterMapType((map[string][]byte)(nil), "vega.Balance.BalanceEntry")
	proto.RegisterType((*Collateral)(nil), "vega.Collateral")
	proto.RegisterMapType((map[string]*Balance)(nil), "vega.Collateral.PartiesEntry")
	proto.RegisterType((*NetParams)(nil), "vega.NetParams")
	proto.RegisterType((*Proposals)(nil), "vega.Proposals")
}

func init() { proto.RegisterFile("vega/snapshot.proto", fileDescriptor_6ef1468f19ab6b2e) }

var fileDescriptor_6ef1468f19ab6b2e = []byte{
	// 527 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x54, 0x4f, 0x6f, 0xd3, 0x30,
	0x14, 0x5f, 0xda, 0x2e, 0x5d, 0x5e, 0x02, 0xdb, 0xcc, 0x1f, 0x85, 0x48, 0x48, 0x55, 0xe0, 0x50,
	0xa4, 0x29, 0x95, 0x32, 0xa4, 0xc2, 0x38, 0xb1, 0xad, 0x52, 0xb9, 0x4c, 0x55, 0x76, 0xe3, 0xe6,
	0xa6, 0x56, 0x17, 0x35, 0xd8, 0x21, 0x36, 0x45, 0x13, 0x5f, 0x02, 0xf1, 0xd5, 0xf8, 0x42, 0x28,
	0x7e, 0x4e, 0xe6, 0xa2, 0x5e, 0x10, 0x97, 0xd6, 0xfe, 0xfd, 0x79, 0x7e, 0xcf, 0xfe, 0x29, 0xf0,
	0x64, 0xcb, 0xd6, 0x74, 0x22, 0x39, 0xad, 0xe4, 0x9d, 0x50, 0x49, 0x55, 0x0b, 0x25, 0xc8, 0xa0,
	0x01, 0xa3, 0x63, 0x4d, 0x35, 0x3f, 0x08, 0x47, 0xa7, 0x1a, 0xa0, 0x52, 0x32, 0x25, 0x0d, 0xf4,
	0x4c, 0x43, 0x6b, 0xb1, 0x65, 0x35, 0xa7, 0x3c, 0x67, 0x08, 0xc7, 0x5f, 0xe1, 0xe8, 0xd6, 0x94,
	0x24, 0x67, 0x30, 0x58, 0x51, 0x45, 0x43, 0x67, 0xd4, 0x1f, 0xfb, 0x69, 0x98, 0xe8, 0x82, 0x2d,
	0x9b, 0x5c, 0x53, 0x45, 0x67, 0x5c, 0xd5, 0xf7, 0x99, 0x56, 0x45, 0x53, 0xf0, 0x3a, 0x88, 0x9c,
	0x40, 0x7f, 0xc3, 0xee, 0x43, 0x67, 0xe4, 0x8c, 0xbd, 0xac, 0x59, 0x92, 0xa7, 0x70, 0xb8, 0xa5,
	0xe5, 0x37, 0x16, 0xf6, 0x46, 0xce, 0x38, 0xc8, 0x70, 0x73, 0xd1, 0x7b, 0xe7, 0xc4, 0x53, 0x80,
	0xab, 0x3b, 0x96, 0x6f, 0x2a, 0x51, 0x70, 0x45, 0xde, 0x80, 0x2b, 0x15, 0x55, 0x4c, 0x9a, 0x63,
	0x4f, 0xf1, 0xd8, 0x19, 0x5f, 0x17, 0x9c, 0xdd, 0x36, 0x4c, 0x66, 0x04, 0xf1, 0x6f, 0x07, 0x7c,
	0x0b, 0x27, 0xaf, 0xe1, 0x50, 0x8f, 0xa8, 0x8f, 0xf5, 0xd3, 0x00, 0x9d, 0x1f, 0xf5, 0xd4, 0xf3,
	0x83, 0x0c, 0x49, 0x92, 0x02, 0xe4, 0xa2, 0x2c, 0xa9, 0x62, 0x35, 0x2d, 0x75, 0x37, 0x7e, 0x7a,
	0x82, 0xd2, 0xab, 0x0e, 0x9f, 0x1f, 0x64, 0x96, 0x8a, 0x4c, 0xc0, 0xe3, 0x4c, 0x2d, 0x68, 0x4d,
	0xbf, 0xc8, 0xb0, 0xaf, 0x2d, 0xc7, 0x68, 0xb9, 0x69, 0xe1, 0xf9, 0x41, 0xf6, 0xa0, 0x69, 0x0c,
	0x55, 0x2d, 0x2a, 0x21, 0x69, 0x29, 0xc3, 0x81, 0x6d, 0x58, 0xb4, 0x70, 0x63, 0xe8, 0x34, 0x97,
	0x47, 0xe0, 0x32, 0x3d, 0x4a, 0xfc, 0xab, 0x07, 0x2e, 0xf6, 0x4c, 0xce, 0x61, 0xc8, 0x38, 0x5d,
	0x96, 0x6c, 0x65, 0x2e, 0xe3, 0x85, 0x3d, 0x52, 0x32, 0x43, 0x0e, 0x1f, 0xa1, 0x55, 0x36, 0xa6,
	0x8a, 0xf1, 0x55, 0xc1, 0xd7, 0x61, 0x6f, 0x8f, 0x69, 0x81, 0x9c, 0x31, 0x19, 0x65, 0x74, 0x03,
	0x81, 0x5d, 0x6d, 0xcf, 0xfb, 0x8d, 0xed, 0xf7, 0xf3, 0x53, 0x62, 0x15, 0xbd, 0x66, 0x8a, 0x16,
	0xa5, 0xb4, 0xde, 0xb4, 0xa9, 0x67, 0x1f, 0xf4, 0xbf, 0xf5, 0xe2, 0x1f, 0x30, 0xbc, 0xa4, 0x65,
	0x93, 0x53, 0xf2, 0x16, 0x86, 0x4b, 0x5c, 0x9a, 0x4b, 0x89, 0xd0, 0x6a, 0xf8, 0xf6, 0xdf, 0x0c,
	0x68, 0xa4, 0xd1, 0x05, 0x04, 0x36, 0xf1, 0x4f, 0x01, 0xfd, 0xe9, 0x00, 0x3c, 0x44, 0x83, 0x4c,
	0x61, 0x58, 0xd1, 0x5a, 0x15, 0x5d, 0x44, 0x5f, 0xfe, 0x9d, 0x9e, 0x64, 0x81, 0x7c, 0x7b, 0xc9,
	0xb8, 0x8b, 0x3e, 0x41, 0x60, 0x13, 0x7b, 0x7a, 0x78, 0xb5, 0x7b, 0x29, 0x8f, 0x76, 0x26, 0xb3,
	0x5b, 0xfa, 0x00, 0x5e, 0x97, 0x3c, 0x92, 0x80, 0x5b, 0x61, 0x34, 0xb1, 0x9f, 0xe7, 0x5d, 0x34,
	0xbf, 0x8b, 0x7a, 0xa3, 0x45, 0x4c, 0xb1, 0x3a, 0x33, 0xaa, 0xf8, 0x3d, 0x78, 0x5d, 0x0a, 0xc9,
	0x99, 0x9d, 0x54, 0xf4, 0x3f, 0xde, 0x4d, 0xaa, 0x1d, 0xd3, 0xf8, 0xf3, 0x28, 0x17, 0x2b, 0xa6,
	0x05, 0xfa, 0x83, 0x91, 0x8b, 0x32, 0x29, 0xc4, 0x44, 0xaf, 0xa5, 0xfe, 0xe4, 0x2c, 0x5d, 0xbd,
	0x39, 0xff, 0x13, 0x00, 0x00, 0xff, 0xff, 0x39, 0x01, 0xb6, 0xc8, 0xa1, 0x04, 0x00, 0x00,
}
