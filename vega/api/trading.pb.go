// Code generated by protoc-gen-go. DO NOT EDIT.
// source: vega/api/trading.proto

package api

import (
	vega "code.vegaprotocol.io/protos/vega"
	v1 "code.vegaprotocol.io/protos/vega/commands/v1"
	v11 "code.vegaprotocol.io/protos/vega/events/v1"
	_ "code.vegaprotocol.io/protos/vega/oracles/v1"
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "github.com/mwitkow/go-proto-validators"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Blockchain transaction type
type SubmitTransactionV2Request_Type int32

const (
	SubmitTransactionV2Request_TYPE_UNSPECIFIED SubmitTransactionV2Request_Type = 0
	// The transaction will be submitted without waiting for response
	SubmitTransactionV2Request_TYPE_ASYNC SubmitTransactionV2Request_Type = 1
	// The transaction will be submitted, and blocking until the
	// tendermint mempool return a response
	SubmitTransactionV2Request_TYPE_SYNC SubmitTransactionV2Request_Type = 2
	// The transaction will submitted, and blocking until the tendermint
	// network will have committed it into a block
	SubmitTransactionV2Request_TYPE_COMMIT SubmitTransactionV2Request_Type = 3
)

var SubmitTransactionV2Request_Type_name = map[int32]string{
	0: "TYPE_UNSPECIFIED",
	1: "TYPE_ASYNC",
	2: "TYPE_SYNC",
	3: "TYPE_COMMIT",
}

var SubmitTransactionV2Request_Type_value = map[string]int32{
	"TYPE_UNSPECIFIED": 0,
	"TYPE_ASYNC":       1,
	"TYPE_SYNC":        2,
	"TYPE_COMMIT":      3,
}

func (x SubmitTransactionV2Request_Type) String() string {
	return proto.EnumName(SubmitTransactionV2Request_Type_name, int32(x))
}

func (SubmitTransactionV2Request_Type) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_5e536cf6517e5fb7, []int{2, 0}
}

// Request for a new event sent by the blockchain queue to be propagated on Vega
type PropagateChainEventRequest struct {
	// Chain event
	Event []byte `protobuf:"bytes,1,opt,name=event,proto3" json:"event,omitempty"`
	// Public key
	PubKey string `protobuf:"bytes,2,opt,name=pub_key,json=pubKey,proto3" json:"pub_key,omitempty"`
	// Signature
	Signature            []byte   `protobuf:"bytes,3,opt,name=signature,proto3" json:"signature,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PropagateChainEventRequest) Reset()         { *m = PropagateChainEventRequest{} }
func (m *PropagateChainEventRequest) String() string { return proto.CompactTextString(m) }
func (*PropagateChainEventRequest) ProtoMessage()    {}
func (*PropagateChainEventRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_5e536cf6517e5fb7, []int{0}
}

func (m *PropagateChainEventRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PropagateChainEventRequest.Unmarshal(m, b)
}
func (m *PropagateChainEventRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PropagateChainEventRequest.Marshal(b, m, deterministic)
}
func (m *PropagateChainEventRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PropagateChainEventRequest.Merge(m, src)
}
func (m *PropagateChainEventRequest) XXX_Size() int {
	return xxx_messageInfo_PropagateChainEventRequest.Size(m)
}
func (m *PropagateChainEventRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PropagateChainEventRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PropagateChainEventRequest proto.InternalMessageInfo

func (m *PropagateChainEventRequest) GetEvent() []byte {
	if m != nil {
		return m.Event
	}
	return nil
}

func (m *PropagateChainEventRequest) GetPubKey() string {
	if m != nil {
		return m.PubKey
	}
	return ""
}

func (m *PropagateChainEventRequest) GetSignature() []byte {
	if m != nil {
		return m.Signature
	}
	return nil
}

// Response for a new event sent by the blockchain queue to be propagated on Vega
type PropagateChainEventResponse struct {
	// Success will be true if the event was accepted by the node,
	// **Important** - success does not mean that the event is confirmed by consensus
	Success              bool     `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PropagateChainEventResponse) Reset()         { *m = PropagateChainEventResponse{} }
func (m *PropagateChainEventResponse) String() string { return proto.CompactTextString(m) }
func (*PropagateChainEventResponse) ProtoMessage()    {}
func (*PropagateChainEventResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_5e536cf6517e5fb7, []int{1}
}

func (m *PropagateChainEventResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PropagateChainEventResponse.Unmarshal(m, b)
}
func (m *PropagateChainEventResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PropagateChainEventResponse.Marshal(b, m, deterministic)
}
func (m *PropagateChainEventResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PropagateChainEventResponse.Merge(m, src)
}
func (m *PropagateChainEventResponse) XXX_Size() int {
	return xxx_messageInfo_PropagateChainEventResponse.Size(m)
}
func (m *PropagateChainEventResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PropagateChainEventResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PropagateChainEventResponse proto.InternalMessageInfo

func (m *PropagateChainEventResponse) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

// Request for submitting a transaction v2 on Vega
type SubmitTransactionV2Request struct {
	// A bundle of signed payload and signature, to form a transaction that will be submitted to the Vega blockchain
	Tx *v1.Transaction `protobuf:"bytes,1,opt,name=tx,proto3" json:"tx,omitempty"`
	// Type of transaction request, for example ASYNC, meaning the transaction will be submitted and not block on a response
	Type                 SubmitTransactionV2Request_Type `protobuf:"varint,2,opt,name=type,proto3,enum=api.v1.SubmitTransactionV2Request_Type" json:"type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                        `json:"-"`
	XXX_unrecognized     []byte                          `json:"-"`
	XXX_sizecache        int32                           `json:"-"`
}

func (m *SubmitTransactionV2Request) Reset()         { *m = SubmitTransactionV2Request{} }
func (m *SubmitTransactionV2Request) String() string { return proto.CompactTextString(m) }
func (*SubmitTransactionV2Request) ProtoMessage()    {}
func (*SubmitTransactionV2Request) Descriptor() ([]byte, []int) {
	return fileDescriptor_5e536cf6517e5fb7, []int{2}
}

func (m *SubmitTransactionV2Request) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SubmitTransactionV2Request.Unmarshal(m, b)
}
func (m *SubmitTransactionV2Request) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SubmitTransactionV2Request.Marshal(b, m, deterministic)
}
func (m *SubmitTransactionV2Request) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubmitTransactionV2Request.Merge(m, src)
}
func (m *SubmitTransactionV2Request) XXX_Size() int {
	return xxx_messageInfo_SubmitTransactionV2Request.Size(m)
}
func (m *SubmitTransactionV2Request) XXX_DiscardUnknown() {
	xxx_messageInfo_SubmitTransactionV2Request.DiscardUnknown(m)
}

var xxx_messageInfo_SubmitTransactionV2Request proto.InternalMessageInfo

func (m *SubmitTransactionV2Request) GetTx() *v1.Transaction {
	if m != nil {
		return m.Tx
	}
	return nil
}

func (m *SubmitTransactionV2Request) GetType() SubmitTransactionV2Request_Type {
	if m != nil {
		return m.Type
	}
	return SubmitTransactionV2Request_TYPE_UNSPECIFIED
}

// Response for submitting a transaction v2 on Vega
type SubmitTransactionV2Response struct {
	// Success will be true if the transaction was accepted by the node,
	// **Important** - success does not mean that the event is confirmed by consensus
	Success              bool     `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SubmitTransactionV2Response) Reset()         { *m = SubmitTransactionV2Response{} }
func (m *SubmitTransactionV2Response) String() string { return proto.CompactTextString(m) }
func (*SubmitTransactionV2Response) ProtoMessage()    {}
func (*SubmitTransactionV2Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_5e536cf6517e5fb7, []int{3}
}

func (m *SubmitTransactionV2Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SubmitTransactionV2Response.Unmarshal(m, b)
}
func (m *SubmitTransactionV2Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SubmitTransactionV2Response.Marshal(b, m, deterministic)
}
func (m *SubmitTransactionV2Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubmitTransactionV2Response.Merge(m, src)
}
func (m *SubmitTransactionV2Response) XXX_Size() int {
	return xxx_messageInfo_SubmitTransactionV2Response.Size(m)
}
func (m *SubmitTransactionV2Response) XXX_DiscardUnknown() {
	xxx_messageInfo_SubmitTransactionV2Response.DiscardUnknown(m)
}

var xxx_messageInfo_SubmitTransactionV2Response proto.InternalMessageInfo

func (m *SubmitTransactionV2Response) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

// Request for the current time of the vega network
type GetVegaTimeRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetVegaTimeRequest) Reset()         { *m = GetVegaTimeRequest{} }
func (m *GetVegaTimeRequest) String() string { return proto.CompactTextString(m) }
func (*GetVegaTimeRequest) ProtoMessage()    {}
func (*GetVegaTimeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_5e536cf6517e5fb7, []int{4}
}

func (m *GetVegaTimeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetVegaTimeRequest.Unmarshal(m, b)
}
func (m *GetVegaTimeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetVegaTimeRequest.Marshal(b, m, deterministic)
}
func (m *GetVegaTimeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetVegaTimeRequest.Merge(m, src)
}
func (m *GetVegaTimeRequest) XXX_Size() int {
	return xxx_messageInfo_GetVegaTimeRequest.Size(m)
}
func (m *GetVegaTimeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetVegaTimeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetVegaTimeRequest proto.InternalMessageInfo

// Response for the current consensus coordinated time on the Vega network, referred to as "VegaTime"
type GetVegaTimeResponse struct {
	// Timestamp representation of current VegaTime as represented in
	// Nanoseconds since the epoch, for example `1580473859111222333` corresponds to `2020-01-31T12:30:59.111222333Z`
	Timestamp            int64    `protobuf:"varint,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetVegaTimeResponse) Reset()         { *m = GetVegaTimeResponse{} }
func (m *GetVegaTimeResponse) String() string { return proto.CompactTextString(m) }
func (*GetVegaTimeResponse) ProtoMessage()    {}
func (*GetVegaTimeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_5e536cf6517e5fb7, []int{5}
}

func (m *GetVegaTimeResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetVegaTimeResponse.Unmarshal(m, b)
}
func (m *GetVegaTimeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetVegaTimeResponse.Marshal(b, m, deterministic)
}
func (m *GetVegaTimeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetVegaTimeResponse.Merge(m, src)
}
func (m *GetVegaTimeResponse) XXX_Size() int {
	return xxx_messageInfo_GetVegaTimeResponse.Size(m)
}
func (m *GetVegaTimeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetVegaTimeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetVegaTimeResponse proto.InternalMessageInfo

func (m *GetVegaTimeResponse) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

// Request to subscribe to a stream of one or more event types from the Vega event bus
type ObserveEventBusRequest struct {
	// One or more types of event, required field
	Type []v11.BusEventType `protobuf:"varint,1,rep,packed,name=type,proto3,enum=vega.events.v1.BusEventType" json:"type,omitempty"`
	// Market identifier, optional field
	MarketId string `protobuf:"bytes,2,opt,name=market_id,json=marketId,proto3" json:"market_id,omitempty"`
	// Party identifier, optional field
	PartyId string `protobuf:"bytes,3,opt,name=party_id,json=partyId,proto3" json:"party_id,omitempty"`
	// Batch size, optional field -
	// If not specified, any events received will be sent immediately. If the client is not ready
	// for the next data-set, data may be dropped a number of times, and eventually the stream is closed.
	// if specified, the first batch will be sent when ready. To receive the next set of events, the client
	// must write an `ObserveEventBatch` message on the stream to flush the buffer.
	// If no message is received in 5 seconds, the stream is closed.
	// Default: 0, send any and all events when they are available.
	BatchSize            int64    `protobuf:"varint,4,opt,name=batch_size,json=batchSize,proto3" json:"batch_size,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ObserveEventBusRequest) Reset()         { *m = ObserveEventBusRequest{} }
func (m *ObserveEventBusRequest) String() string { return proto.CompactTextString(m) }
func (*ObserveEventBusRequest) ProtoMessage()    {}
func (*ObserveEventBusRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_5e536cf6517e5fb7, []int{6}
}

func (m *ObserveEventBusRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ObserveEventBusRequest.Unmarshal(m, b)
}
func (m *ObserveEventBusRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ObserveEventBusRequest.Marshal(b, m, deterministic)
}
func (m *ObserveEventBusRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ObserveEventBusRequest.Merge(m, src)
}
func (m *ObserveEventBusRequest) XXX_Size() int {
	return xxx_messageInfo_ObserveEventBusRequest.Size(m)
}
func (m *ObserveEventBusRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ObserveEventBusRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ObserveEventBusRequest proto.InternalMessageInfo

func (m *ObserveEventBusRequest) GetType() []v11.BusEventType {
	if m != nil {
		return m.Type
	}
	return nil
}

func (m *ObserveEventBusRequest) GetMarketId() string {
	if m != nil {
		return m.MarketId
	}
	return ""
}

func (m *ObserveEventBusRequest) GetPartyId() string {
	if m != nil {
		return m.PartyId
	}
	return ""
}

func (m *ObserveEventBusRequest) GetBatchSize() int64 {
	if m != nil {
		return m.BatchSize
	}
	return 0
}

// Response to a subscribed stream of events from the Vega event bus
type ObserveEventBusResponse struct {
	// One or more events
	Events               []*v11.BusEvent `protobuf:"bytes,1,rep,name=events,proto3" json:"events,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *ObserveEventBusResponse) Reset()         { *m = ObserveEventBusResponse{} }
func (m *ObserveEventBusResponse) String() string { return proto.CompactTextString(m) }
func (*ObserveEventBusResponse) ProtoMessage()    {}
func (*ObserveEventBusResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_5e536cf6517e5fb7, []int{7}
}

func (m *ObserveEventBusResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ObserveEventBusResponse.Unmarshal(m, b)
}
func (m *ObserveEventBusResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ObserveEventBusResponse.Marshal(b, m, deterministic)
}
func (m *ObserveEventBusResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ObserveEventBusResponse.Merge(m, src)
}
func (m *ObserveEventBusResponse) XXX_Size() int {
	return xxx_messageInfo_ObserveEventBusResponse.Size(m)
}
func (m *ObserveEventBusResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ObserveEventBusResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ObserveEventBusResponse proto.InternalMessageInfo

func (m *ObserveEventBusResponse) GetEvents() []*v11.BusEvent {
	if m != nil {
		return m.Events
	}
	return nil
}

// A a request for statistics about the Vega network
type StatisticsRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StatisticsRequest) Reset()         { *m = StatisticsRequest{} }
func (m *StatisticsRequest) String() string { return proto.CompactTextString(m) }
func (*StatisticsRequest) ProtoMessage()    {}
func (*StatisticsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_5e536cf6517e5fb7, []int{8}
}

func (m *StatisticsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StatisticsRequest.Unmarshal(m, b)
}
func (m *StatisticsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StatisticsRequest.Marshal(b, m, deterministic)
}
func (m *StatisticsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StatisticsRequest.Merge(m, src)
}
func (m *StatisticsRequest) XXX_Size() int {
	return xxx_messageInfo_StatisticsRequest.Size(m)
}
func (m *StatisticsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_StatisticsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_StatisticsRequest proto.InternalMessageInfo

type StatisticsResponse struct {
	Statistics           *vega.Statistics `protobuf:"bytes,1,opt,name=statistics,proto3" json:"statistics,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *StatisticsResponse) Reset()         { *m = StatisticsResponse{} }
func (m *StatisticsResponse) String() string { return proto.CompactTextString(m) }
func (*StatisticsResponse) ProtoMessage()    {}
func (*StatisticsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_5e536cf6517e5fb7, []int{9}
}

func (m *StatisticsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StatisticsResponse.Unmarshal(m, b)
}
func (m *StatisticsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StatisticsResponse.Marshal(b, m, deterministic)
}
func (m *StatisticsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StatisticsResponse.Merge(m, src)
}
func (m *StatisticsResponse) XXX_Size() int {
	return xxx_messageInfo_StatisticsResponse.Size(m)
}
func (m *StatisticsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_StatisticsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_StatisticsResponse proto.InternalMessageInfo

func (m *StatisticsResponse) GetStatistics() *vega.Statistics {
	if m != nil {
		return m.Statistics
	}
	return nil
}

// A request to get the height of the very last block processed
// by tendermint
type LastBlockHeightRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LastBlockHeightRequest) Reset()         { *m = LastBlockHeightRequest{} }
func (m *LastBlockHeightRequest) String() string { return proto.CompactTextString(m) }
func (*LastBlockHeightRequest) ProtoMessage()    {}
func (*LastBlockHeightRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_5e536cf6517e5fb7, []int{10}
}

func (m *LastBlockHeightRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LastBlockHeightRequest.Unmarshal(m, b)
}
func (m *LastBlockHeightRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LastBlockHeightRequest.Marshal(b, m, deterministic)
}
func (m *LastBlockHeightRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LastBlockHeightRequest.Merge(m, src)
}
func (m *LastBlockHeightRequest) XXX_Size() int {
	return xxx_messageInfo_LastBlockHeightRequest.Size(m)
}
func (m *LastBlockHeightRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_LastBlockHeightRequest.DiscardUnknown(m)
}

var xxx_messageInfo_LastBlockHeightRequest proto.InternalMessageInfo

// A response with the height of the last block processed by
// tendermint
type LastBlockHeightResponse struct {
	Height               uint64   `protobuf:"varint,1,opt,name=height,proto3" json:"height,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LastBlockHeightResponse) Reset()         { *m = LastBlockHeightResponse{} }
func (m *LastBlockHeightResponse) String() string { return proto.CompactTextString(m) }
func (*LastBlockHeightResponse) ProtoMessage()    {}
func (*LastBlockHeightResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_5e536cf6517e5fb7, []int{11}
}

func (m *LastBlockHeightResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LastBlockHeightResponse.Unmarshal(m, b)
}
func (m *LastBlockHeightResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LastBlockHeightResponse.Marshal(b, m, deterministic)
}
func (m *LastBlockHeightResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LastBlockHeightResponse.Merge(m, src)
}
func (m *LastBlockHeightResponse) XXX_Size() int {
	return xxx_messageInfo_LastBlockHeightResponse.Size(m)
}
func (m *LastBlockHeightResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_LastBlockHeightResponse.DiscardUnknown(m)
}

var xxx_messageInfo_LastBlockHeightResponse proto.InternalMessageInfo

func (m *LastBlockHeightResponse) GetHeight() uint64 {
	if m != nil {
		return m.Height
	}
	return 0
}

func init() {
	proto.RegisterEnum("api.v1.SubmitTransactionV2Request_Type", SubmitTransactionV2Request_Type_name, SubmitTransactionV2Request_Type_value)
	proto.RegisterType((*PropagateChainEventRequest)(nil), "api.v1.PropagateChainEventRequest")
	proto.RegisterType((*PropagateChainEventResponse)(nil), "api.v1.PropagateChainEventResponse")
	proto.RegisterType((*SubmitTransactionV2Request)(nil), "api.v1.SubmitTransactionV2Request")
	proto.RegisterType((*SubmitTransactionV2Response)(nil), "api.v1.SubmitTransactionV2Response")
	proto.RegisterType((*GetVegaTimeRequest)(nil), "api.v1.GetVegaTimeRequest")
	proto.RegisterType((*GetVegaTimeResponse)(nil), "api.v1.GetVegaTimeResponse")
	proto.RegisterType((*ObserveEventBusRequest)(nil), "api.v1.ObserveEventBusRequest")
	proto.RegisterType((*ObserveEventBusResponse)(nil), "api.v1.ObserveEventBusResponse")
	proto.RegisterType((*StatisticsRequest)(nil), "api.v1.StatisticsRequest")
	proto.RegisterType((*StatisticsResponse)(nil), "api.v1.StatisticsResponse")
	proto.RegisterType((*LastBlockHeightRequest)(nil), "api.v1.LastBlockHeightRequest")
	proto.RegisterType((*LastBlockHeightResponse)(nil), "api.v1.LastBlockHeightResponse")
}

func init() { proto.RegisterFile("vega/api/trading.proto", fileDescriptor_5e536cf6517e5fb7) }

var fileDescriptor_5e536cf6517e5fb7 = []byte{
	// 774 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x55, 0xdd, 0x8e, 0xda, 0x46,
	0x14, 0x2e, 0x3f, 0x65, 0x97, 0x43, 0xcb, 0x92, 0x61, 0xcb, 0x12, 0xb3, 0x69, 0x56, 0x6e, 0xd5,
	0x6e, 0x2f, 0xd6, 0x04, 0x22, 0xb5, 0x17, 0xbd, 0x2a, 0x94, 0x6d, 0x51, 0xfe, 0x56, 0x86, 0x46,
	0x4a, 0x2f, 0x82, 0x06, 0x7b, 0x64, 0x46, 0x60, 0x8f, 0xeb, 0x19, 0x3b, 0x21, 0x6f, 0xd3, 0x47,
	0xe8, 0xcb, 0xf4, 0x79, 0x2a, 0x8e, 0xc7, 0x98, 0x2e, 0x90, 0xdc, 0xa0, 0x39, 0xdf, 0x77, 0xfe,
	0xe6, 0xf3, 0x39, 0x03, 0xb4, 0x12, 0xe6, 0xd1, 0x2e, 0x0d, 0x79, 0x57, 0x45, 0xd4, 0xe5, 0x81,
	0x67, 0x85, 0x91, 0x50, 0x82, 0x54, 0x68, 0xc8, 0xad, 0xa4, 0x67, 0x9c, 0x21, 0xbf, 0xf9, 0x49,
	0x09, 0x83, 0x20, 0xe0, 0xd3, 0x68, 0xc9, 0x94, 0xd4, 0xd8, 0x57, 0x88, 0x79, 0x22, 0x61, 0x51,
	0x40, 0x03, 0x87, 0x69, 0xf8, 0x41, 0x9a, 0x5b, 0xca, 0xdc, 0xb3, 0x83, 0x10, 0x4b, 0x58, 0xa0,
	0x64, 0x37, 0xe9, 0xe9, 0x93, 0x26, 0x0d, 0x24, 0x45, 0x44, 0x9d, 0x15, 0x43, 0x56, 0x86, 0xcc,
	0x39, 0xc6, 0xb9, 0x54, 0x65, 0x2d, 0x3d, 0x46, 0xce, 0x11, 0xbe, 0x4f, 0x03, 0x17, 0xc9, 0xec,
	0xac, 0x1d, 0xcc, 0x3d, 0x07, 0x15, 0xd1, 0x40, 0x52, 0x47, 0x71, 0x11, 0x68, 0x9f, 0x1f, 0xf6,
	0x7c, 0x12, 0xba, 0xe2, 0x2e, 0x55, 0x22, 0x9a, 0xdd, 0x4b, 0xf7, 0xa3, 0xc7, 0xd5, 0x22, 0x9e,
	0x5b, 0x8e, 0xf0, 0xbb, 0xfe, 0x3b, 0xae, 0x96, 0xe2, 0x5d, 0xd7, 0x13, 0x37, 0x48, 0xde, 0x6c,
	0xa3, 0x64, 0x9e, 0x20, 0x8d, 0x33, 0x39, 0x18, 0x77, 0x91, 0x08, 0xa9, 0x47, 0x15, 0x1b, 0x2e,
	0x28, 0x0f, 0x46, 0x9b, 0xdb, 0xdb, 0xec, 0xaf, 0x98, 0x49, 0x45, 0xce, 0xe1, 0x73, 0x54, 0xa3,
	0x5d, 0xb8, 0x2a, 0x5c, 0x7f, 0x61, 0xa7, 0x06, 0xb9, 0x80, 0x93, 0x30, 0x9e, 0xcf, 0x96, 0x6c,
	0xdd, 0x2e, 0x5e, 0x15, 0xae, 0xab, 0x76, 0x25, 0x8c, 0xe7, 0xcf, 0xd8, 0x9a, 0x5c, 0x42, 0x55,
	0x72, 0x2f, 0xa0, 0x2a, 0x8e, 0x58, 0xbb, 0x84, 0x21, 0x39, 0x60, 0xfe, 0x04, 0x9d, 0x83, 0xa5,
	0x64, 0x28, 0x02, 0xc9, 0x48, 0x1b, 0x4e, 0x64, 0xec, 0x38, 0x4c, 0x4a, 0xac, 0x76, 0x6a, 0x67,
	0xa6, 0xf9, 0x6f, 0x01, 0x8c, 0x49, 0x3c, 0xf7, 0xb9, 0x9a, 0xe6, 0x12, 0xbd, 0xee, 0x67, 0x4d,
	0xde, 0x40, 0x51, 0xbd, 0xc7, 0x98, 0x5a, 0xff, 0x91, 0x85, 0x63, 0xb1, 0x15, 0x27, 0xe9, 0x59,
	0x3b, 0x31, 0x76, 0x51, 0xbd, 0x27, 0x3f, 0x43, 0x59, 0xad, 0x43, 0x86, 0xad, 0xd7, 0xfb, 0xdf,
	0x5b, 0xe9, 0x50, 0x59, 0xc7, 0x0b, 0x58, 0xd3, 0x75, 0xc8, 0x6c, 0x0c, 0x32, 0x9f, 0x43, 0x79,
	0x63, 0x91, 0x73, 0x68, 0x4c, 0xdf, 0xdc, 0x8d, 0x66, 0x7f, 0xbc, 0x9c, 0xdc, 0x8d, 0x86, 0xe3,
	0xdb, 0xf1, 0xe8, 0xd7, 0xc6, 0x67, 0xa4, 0x0e, 0x80, 0xe8, 0x2f, 0x93, 0x37, 0x2f, 0x87, 0x8d,
	0x02, 0xf9, 0x12, 0xaa, 0x68, 0xa3, 0x59, 0x24, 0x67, 0x50, 0x43, 0x73, 0xf8, 0xea, 0xc5, 0x8b,
	0xf1, 0xb4, 0x51, 0xda, 0x28, 0x72, 0xb0, 0xec, 0x27, 0x15, 0x39, 0x07, 0xf2, 0x1b, 0x53, 0xaf,
	0x99, 0x47, 0xa7, 0xdc, 0x67, 0xba, 0x4f, 0xf3, 0x29, 0x34, 0xff, 0x87, 0xea, 0x34, 0x97, 0x50,
	0x55, 0xdc, 0x67, 0x52, 0x51, 0x3f, 0xc4, 0x44, 0x25, 0x3b, 0x07, 0xcc, 0xbf, 0x0b, 0xd0, 0x7a,
	0x35, 0x97, 0x2c, 0x4a, 0x18, 0x7e, 0x8f, 0x41, 0x2c, 0x33, 0x61, 0x9f, 0x68, 0xa5, 0x0a, 0x57,
	0xa5, 0xeb, 0x7a, 0xff, 0x32, 0x95, 0x56, 0x6f, 0x47, 0xd2, 0xb3, 0x06, 0xb1, 0xc4, 0x88, 0x5c,
	0x1e, 0xd2, 0x81, 0x6a, 0xba, 0x85, 0x33, 0xee, 0xea, 0xd9, 0x38, 0x4d, 0x81, 0xb1, 0x4b, 0x1e,
	0xc2, 0x69, 0x48, 0x23, 0xb5, 0xde, 0x70, 0x25, 0xe4, 0x4e, 0xd0, 0x1e, 0xbb, 0xe4, 0x11, 0xc0,
	0x9c, 0x2a, 0x67, 0x31, 0x93, 0xfc, 0x03, 0x6b, 0x97, 0xd3, 0x1e, 0x11, 0x99, 0xf0, 0x0f, 0xcc,
	0x7c, 0x06, 0x17, 0x7b, 0x2d, 0xea, 0xcb, 0x3d, 0x81, 0x4a, 0xda, 0x11, 0x76, 0x59, 0xeb, 0xb7,
	0x8f, 0x75, 0x69, 0x6b, 0x3f, 0xb3, 0x09, 0x0f, 0x26, 0x8a, 0x2a, 0x2e, 0x15, 0x77, 0xb2, 0xab,
	0x9a, 0xb7, 0x40, 0x76, 0xc1, 0x6d, 0x72, 0x90, 0x5b, 0x54, 0x4f, 0x58, 0x23, 0x2d, 0xb0, 0xe3,
	0xbd, 0xe3, 0x63, 0xb6, 0xa1, 0xf5, 0x9c, 0x4a, 0x35, 0x58, 0x09, 0x67, 0xf9, 0x3b, 0xe3, 0xde,
	0x22, 0x5b, 0x25, 0xb3, 0x07, 0x17, 0x7b, 0x8c, 0x2e, 0xd3, 0x82, 0xca, 0x02, 0x11, 0x2c, 0x51,
	0xb6, 0xb5, 0xd5, 0xff, 0xa7, 0x04, 0xf5, 0x69, 0xfa, 0x02, 0x4e, 0x58, 0x94, 0x70, 0x87, 0x91,
	0xb7, 0xd0, 0x3c, 0x30, 0x31, 0xc4, 0xfc, 0xf4, 0x14, 0x1b, 0xdf, 0x7c, 0xd4, 0x47, 0xb7, 0xf2,
	0x16, 0x9a, 0x07, 0x76, 0x34, 0xcf, 0x7f, 0xfc, 0xad, 0xc8, 0xf3, 0x7f, 0x6c, 0xc9, 0x87, 0x00,
	0xb9, 0x72, 0xe4, 0xe1, 0xb6, 0xa5, 0xfb, 0x1f, 0xc4, 0x30, 0x0e, 0x51, 0x3a, 0x89, 0x0d, 0x67,
	0xf7, 0xa4, 0x24, 0x5f, 0x67, 0xee, 0x87, 0xd5, 0x37, 0x1e, 0x1f, 0xe5, 0x75, 0xce, 0x5b, 0xa8,
	0xed, 0xec, 0x0e, 0xd9, 0x96, 0xdf, 0x5f, 0x33, 0xa3, 0x73, 0x90, 0x4b, 0xf3, 0x0c, 0xbe, 0xfb,
	0xf3, 0x5b, 0x47, 0xb8, 0x0c, 0x87, 0x04, 0x5f, 0x58, 0x47, 0xac, 0x2c, 0x2e, 0xba, 0x78, 0x96,
	0xdd, 0xec, 0x9f, 0x6d, 0x5e, 0x41, 0xe0, 0xe9, 0x7f, 0x01, 0x00, 0x00, 0xff, 0xff, 0xa6, 0xec,
	0xa9, 0xd5, 0xec, 0x06, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// TradingServiceClient is the client API for TradingService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type TradingServiceClient interface {
	// Submit a signed transaction (v2)
	SubmitTransactionV2(ctx context.Context, in *SubmitTransactionV2Request, opts ...grpc.CallOption) (*SubmitTransactionV2Response, error)
	// Propagate a chain event
	PropagateChainEvent(ctx context.Context, in *PropagateChainEventRequest, opts ...grpc.CallOption) (*PropagateChainEventResponse, error)
	// Get Statistics on Vega
	Statistics(ctx context.Context, in *StatisticsRequest, opts ...grpc.CallOption) (*StatisticsResponse, error)
	// Get the height of the last tendermint block
	LastBlockHeight(ctx context.Context, in *LastBlockHeightRequest, opts ...grpc.CallOption) (*LastBlockHeightResponse, error)
	// Get Time
	GetVegaTime(ctx context.Context, in *GetVegaTimeRequest, opts ...grpc.CallOption) (*GetVegaTimeResponse, error)
}

type tradingServiceClient struct {
	cc *grpc.ClientConn
}

func NewTradingServiceClient(cc *grpc.ClientConn) TradingServiceClient {
	return &tradingServiceClient{cc}
}

func (c *tradingServiceClient) SubmitTransactionV2(ctx context.Context, in *SubmitTransactionV2Request, opts ...grpc.CallOption) (*SubmitTransactionV2Response, error) {
	out := new(SubmitTransactionV2Response)
	err := c.cc.Invoke(ctx, "/api.v1.TradingService/SubmitTransactionV2", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *tradingServiceClient) PropagateChainEvent(ctx context.Context, in *PropagateChainEventRequest, opts ...grpc.CallOption) (*PropagateChainEventResponse, error) {
	out := new(PropagateChainEventResponse)
	err := c.cc.Invoke(ctx, "/api.v1.TradingService/PropagateChainEvent", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *tradingServiceClient) Statistics(ctx context.Context, in *StatisticsRequest, opts ...grpc.CallOption) (*StatisticsResponse, error) {
	out := new(StatisticsResponse)
	err := c.cc.Invoke(ctx, "/api.v1.TradingService/Statistics", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *tradingServiceClient) LastBlockHeight(ctx context.Context, in *LastBlockHeightRequest, opts ...grpc.CallOption) (*LastBlockHeightResponse, error) {
	out := new(LastBlockHeightResponse)
	err := c.cc.Invoke(ctx, "/api.v1.TradingService/LastBlockHeight", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *tradingServiceClient) GetVegaTime(ctx context.Context, in *GetVegaTimeRequest, opts ...grpc.CallOption) (*GetVegaTimeResponse, error) {
	out := new(GetVegaTimeResponse)
	err := c.cc.Invoke(ctx, "/api.v1.TradingService/GetVegaTime", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// TradingServiceServer is the server API for TradingService service.
type TradingServiceServer interface {
	// Submit a signed transaction (v2)
	SubmitTransactionV2(context.Context, *SubmitTransactionV2Request) (*SubmitTransactionV2Response, error)
	// Propagate a chain event
	PropagateChainEvent(context.Context, *PropagateChainEventRequest) (*PropagateChainEventResponse, error)
	// Get Statistics on Vega
	Statistics(context.Context, *StatisticsRequest) (*StatisticsResponse, error)
	// Get the height of the last tendermint block
	LastBlockHeight(context.Context, *LastBlockHeightRequest) (*LastBlockHeightResponse, error)
	// Get Time
	GetVegaTime(context.Context, *GetVegaTimeRequest) (*GetVegaTimeResponse, error)
}

func RegisterTradingServiceServer(s *grpc.Server, srv TradingServiceServer) {
	s.RegisterService(&_TradingService_serviceDesc, srv)
}

func _TradingService_SubmitTransactionV2_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SubmitTransactionV2Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TradingServiceServer).SubmitTransactionV2(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.v1.TradingService/SubmitTransactionV2",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TradingServiceServer).SubmitTransactionV2(ctx, req.(*SubmitTransactionV2Request))
	}
	return interceptor(ctx, in, info, handler)
}

func _TradingService_PropagateChainEvent_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PropagateChainEventRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TradingServiceServer).PropagateChainEvent(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.v1.TradingService/PropagateChainEvent",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TradingServiceServer).PropagateChainEvent(ctx, req.(*PropagateChainEventRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TradingService_Statistics_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StatisticsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TradingServiceServer).Statistics(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.v1.TradingService/Statistics",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TradingServiceServer).Statistics(ctx, req.(*StatisticsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TradingService_LastBlockHeight_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LastBlockHeightRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TradingServiceServer).LastBlockHeight(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.v1.TradingService/LastBlockHeight",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TradingServiceServer).LastBlockHeight(ctx, req.(*LastBlockHeightRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TradingService_GetVegaTime_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetVegaTimeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TradingServiceServer).GetVegaTime(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.v1.TradingService/GetVegaTime",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TradingServiceServer).GetVegaTime(ctx, req.(*GetVegaTimeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _TradingService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "api.v1.TradingService",
	HandlerType: (*TradingServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SubmitTransactionV2",
			Handler:    _TradingService_SubmitTransactionV2_Handler,
		},
		{
			MethodName: "PropagateChainEvent",
			Handler:    _TradingService_PropagateChainEvent_Handler,
		},
		{
			MethodName: "Statistics",
			Handler:    _TradingService_Statistics_Handler,
		},
		{
			MethodName: "LastBlockHeight",
			Handler:    _TradingService_LastBlockHeight_Handler,
		},
		{
			MethodName: "GetVegaTime",
			Handler:    _TradingService_GetVegaTime_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "vega/api/trading.proto",
}
